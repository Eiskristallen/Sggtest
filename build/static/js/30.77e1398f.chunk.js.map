{"version":3,"sources":["components/dashboard/customer/CustomerContactDetails.js","components/dashboard/customer/CustomerDataManagement.js","components/dashboard/customer/CustomerEditForm.js","components/dashboard/customer/CustomerEmailsSummary.js","components/dashboard/customer/CustomerInvoices.js","components/dashboard/customer/CustomerInvoicesSummary.js","components/dashboard/customer/CustomerListTable.js","components/dashboard/customer/CustomerLogs.js","pages/dashboard/CustomerEdit.js","icons/ArrowRight.js","icons/DotsHorizontal.js","components/Label.js","icons/Download.js","icons/PencilAlt.js","icons/Duplicate.js","icons/Trash.js","utils/getInitials.js","../node_modules/@material-ui/core/CardHeader/cardHeaderClasses.js","../node_modules/@material-ui/core/CardHeader/CardHeader.js","icons/Archive.js","icons/DocumentText.js","icons/CurrencyDollar.js","../node_modules/@material-ui/core/internal/svg-icons/MoreHoriz.js","../node_modules/@material-ui/core/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@material-ui/core/Breadcrumbs/breadcrumbsClasses.js","../node_modules/@material-ui/core/Breadcrumbs/Breadcrumbs.js","components/MoreMenu.js","icons/Lock.js","icons/Ban.js"],"names":["CustomerContactDetails","props","address1","address2","country","email","isVerified","phone","state","other","Card","CardHeader","title","Divider","Table","TableBody","TableRow","TableCell","Typography","color","variant","Label","Box","sx","alignItems","display","flexDirection","p","Button","startIcon","Lock","fontSize","User","mt","CustomerDataManagement","CardContent","Ban","Download","mb","Trash","backgroundColor","CustomerEditForm","customer","enqueueSnackbar","useSnackbar","initialValues","hasDiscountedPrices","name","submit","validationSchema","Yup","shape","max","required","onSubmit","values","a","resetForm","setErrors","setStatus","setSubmitting","wait","success","anchorOrigin","horizontal","vertical","console","error","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","Grid","container","spacing","item","md","xs","TextField","Boolean","fullWidth","helperText","label","onBlur","onChange","value","gutterBottom","Switch","checked","edge","disabled","type","emailOptions","CustomerEmailsSummary","isMountedRef","useIsMountedRef","useState","emailOption","setEmailOption","emails","setEmails","getEmails","useCallback","axios","get","response","current","data","useEffect","event","target","select","SelectProps","native","map","option","Mail","description","format","createdAt","id","CustomerInvoices","invoices","setInvoices","getInvoices","action","MoreMenu","Scrollbar","minWidth","TableHead","align","invoice","issueDate","paymentMethod","currency","status","IconButton","component","RouterLink","to","ArrowRight","TablePagination","count","length","onPageChange","onRowsPerPageChange","page","rowsPerPage","rowsPerPageOptions","CustomerInvoicesSummary","CurrencyDollar","tabs","sortOptions","descendingComparator","b","orderBy","applySort","customers","sort","split","comparator","order","getComparator","stabilizedThis","el","index","newOrder","CustomerListTable","currentTab","setCurrentTab","selectedCustomers","setSelectedCustomers","setPage","limit","setLimit","query","setQuery","setSort","hasAcceptedMarketing","isProspect","isReturning","filters","setFilters","handleSelectAllCustomers","filteredCustomers","filter","matches","containsQuery","forEach","property","toLowerCase","includes","Object","keys","key","applyFilters","paginatedCustomers","slice","applyPagination","enableBulkActions","selectedSomeCustomers","selectedAllCustomers","Tabs","indicatorColor","updatedFilters","scrollButtons","textColor","tab","Tab","flexWrap","m","maxWidth","width","InputProps","startAdornment","InputAdornment","position","Search","placeholder","px","zIndex","Checkbox","indeterminate","ml","padding","isCustomerSelected","hover","selected","customerId","prevSelected","Avatar","src","avatar","height","getInitials","Link","city","totalOrders","numeral","totalAmountSpent","PencilAlt","newPage","parseInt","CustomerLogs","logs","setLogs","getLogs","log","method","route","ip","CustomerEdit","settings","useSettings","setCustomer","gtm","push","getCustomer","minHeight","py","compact","justifyContent","aria-label","separator","createSvgIcon","xmlns","viewBox","fill","fillRule","d","clipRule","DotsHorizontal","LabelRoot","experimentalStyled","theme","styleProps","palette","main","contrastText","borderRadius","cursor","flexGrow","flexShrink","fontFamily","typography","pxToRem","fontWeight","fontWeightMedium","letterSpacing","paddingBottom","paddingLeft","paddingRight","paddingTop","textTransform","whiteSpace","children","Duplicate","replace","v","toUpperCase","join","getCardHeaderUtilityClass","slot","generateUtilityClass","cardHeaderClasses","generateUtilityClasses","CardHeaderRoot","overridesResolver","styles","deepmerge","content","subheader","root","CardHeaderAvatar","flex","marginRight","CardHeaderAction","alignSelf","marginTop","marginBottom","CardHeaderContent","React","inProps","ref","useThemeProps","className","disableTypography","subheaderProp","subheaderTypographyProps","titleProp","titleTypographyProps","_objectWithoutPropertiesLoose","_extends","classes","composeClasses","useUtilityClasses","clsx","as","Archive","DocumentText","BreadcrumbCollapsedButton","ButtonBase","marginLeft","mode","grey","boxShadow","shadows","emphasize","BreadcrumbCollapsedIcon","MoreHorizIcon","BreadcrumbCollapsed","focusRipple","getBreadcrumbsUtilityClass","breadcrumbsClasses","BreadcrumbsRoot","ol","li","BreadcrumbsOl","margin","listStyle","BreadcrumbsSeparator","userSelect","Breadcrumbs","expandText","itemsAfterCollapse","itemsBeforeCollapse","maxItems","expanded","setExpanded","listRef","allItems","toArray","child","items","reduce","acc","concat","insertSeparators","onClick","focusable","querySelector","focus","renderItemsBeforeAndAfter","anchorRef","useRef","openMenu","setOpenMenu","anchorEl","onClose","open","PaperProps","transformOrigin","primary","memo"],"mappings":"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","file":"static/js/30.77e1398f.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  Typography\n} from '@material-ui/core';\nimport LockIcon from '../../../icons/Lock';\nimport UserIcon from '../../../icons/User';\nimport Label from '../../Label';\n\nconst CustomerContactDetails = (props) => {\n  const { address1, address2, country, email, isVerified, phone, state, ...other } = props;\n\n  return (\n    <Card {...other}>\n      <CardHeader title=\"Contact Details\" />\n      <Divider />\n      <Table>\n        <TableBody>\n          <TableRow>\n            <TableCell>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"subtitle2\"\n              >\n                Email\n              </Typography>\n            </TableCell>\n            <TableCell>\n              <Typography\n                color=\"textSecondary\"\n                variant=\"body2\"\n              >\n                {email}\n              </Typography>\n              <Label color={isVerified ? 'success' : 'error'}>\n                {isVerified ? 'Email verified' : 'Email not verified'}\n              </Label>\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"subtitle2\"\n              >\n                Phone\n              </Typography>\n            </TableCell>\n            <TableCell>\n              <Typography\n                color=\"textSecondary\"\n                variant=\"body2\"\n              >\n                {phone}\n              </Typography>\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"subtitle2\"\n              >\n                Country\n              </Typography>\n            </TableCell>\n            <TableCell>\n              <Typography\n                color=\"textSecondary\"\n                variant=\"body2\"\n              >\n                {country}\n              </Typography>\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"subtitle2\"\n              >\n                State/Region\n              </Typography>\n            </TableCell>\n            <TableCell>\n              <Typography\n                color=\"textSecondary\"\n                variant=\"body2\"\n              >\n                {state}\n              </Typography>\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"subtitle2\"\n              >\n                Address 1\n              </Typography>\n            </TableCell>\n            <TableCell>\n              <Typography\n                color=\"textSecondary\"\n                variant=\"body2\"\n              >\n                {address1}\n              </Typography>\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"subtitle2\"\n              >\n                Address 2\n              </Typography>\n            </TableCell>\n            <TableCell>\n              <Typography\n                color=\"textSecondary\"\n                variant=\"body2\"\n              >\n                {address2}\n              </Typography>\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n      <Box\n        sx={{\n          alignItems: 'flex-start',\n          display: 'flex',\n          flexDirection: 'column',\n          p: 1\n        }}\n      >\n        <Button\n          color=\"inherit\"\n          startIcon={<LockIcon fontSize=\"small\" />}\n          variant=\"text\"\n        >\n          Reset &amp; Send Password\n        </Button>\n        <Button\n          color=\"inherit\"\n          startIcon={<UserIcon fontSize=\"small\" />}\n          sx={{ mt: 1 }}\n          variant=\"text\"\n        >\n          Login as Customer\n        </Button>\n      </Box>\n    </Card>\n  );\n};\n\nCustomerContactDetails.propTypes = {\n  address1: PropTypes.string,\n  address2: PropTypes.string,\n  country: PropTypes.string,\n  email: PropTypes.string.isRequired,\n  isVerified: PropTypes.bool.isRequired,\n  phone: PropTypes.string,\n  state: PropTypes.string\n};\n\nexport default CustomerContactDetails;\n","import { Box, Card, CardHeader, CardContent, Button, Divider, Typography } from '@material-ui/core';\nimport BanIcon from '../../../icons/Ban';\nimport DownloadIcon from '../../../icons/Download';\nimport TrashIcon from '../../../icons/Trash';\n\nconst CustomerDataManagement = (props) => (\n  <Card {...props}>\n    <CardHeader title=\"Data Management\" />\n    <Divider />\n    <CardContent>\n      <Box\n        sx={{\n          alignItems: 'flex-start',\n          display: 'flex',\n          flexDirection: 'column'\n        }}\n      >\n        <Button\n          color=\"inherit\"\n          startIcon={<BanIcon fontSize=\"small\" />}\n          variant=\"text\"\n        >\n          Close Account\n        </Button>\n        <Button\n          color=\"inherit\"\n          startIcon={<DownloadIcon fontSize=\"small\" />}\n          sx={{ mt: 1 }}\n          variant=\"text\"\n        >\n          Export Data\n        </Button>\n      </Box>\n      <Box\n        sx={{\n          mb: 2,\n          mt: 1\n        }}\n      >\n        <Typography\n          color=\"textSecondary\"\n          variant=\"body2\"\n        >\n          Remove this customer’s chart if he requested that, if not\n          please be aware that what has been deleted can never brought\n          back\n        </Typography>\n      </Box>\n      <Button\n        startIcon={<TrashIcon fontSize=\"small\" />}\n        sx={{\n          backgroundColor: 'error.main',\n          color: 'error.contrastText',\n          '&:hover': {\n            backgroundColor: 'error.dark'\n          }\n        }}\n        variant=\"contained\"\n      >\n        Delete Account\n      </Button>\n    </CardContent>\n  </Card>\n);\n\nexport default CustomerDataManagement;\n","import PropTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { useSnackbar } from 'notistack';\nimport { Box, Button, Card, Grid, Switch, TextField, Typography } from '@material-ui/core';\nimport wait from '../../../utils/wait';\n\nconst CustomerEditForm = (props) => {\n  const { customer, ...other } = props;\n  const { enqueueSnackbar } = useSnackbar();\n\n  return (\n    <Formik\n      initialValues={{\n        address1: customer.address1 || '',\n        address2: customer.address2 || '',\n        country: customer.country || '',\n        email: customer.email || '',\n        hasDiscountedPrices: customer.hasDiscountedPrices || false,\n        isVerified: customer.isVerified || false,\n        name: customer.name || '',\n        phone: customer.phone || '',\n        state: customer.state || '',\n        submit: null\n      }}\n      validationSchema={Yup\n        .object()\n        .shape({\n          address1: Yup.string().max(255),\n          address2: Yup.string().max(255),\n          country: Yup.string().max(255),\n          email: Yup\n            .string()\n            .email('Must be a valid email')\n            .max(255)\n            .required('Email is required'),\n          hasDiscountedPrices: Yup.bool(),\n          isVerified: Yup.bool(),\n          name: Yup\n            .string()\n            .max(255)\n            .required('Name is required'),\n          phone: Yup.string().max(15),\n          state: Yup.string().max(255)\n        })}\n      onSubmit={async (values, { resetForm, setErrors, setStatus, setSubmitting }) => {\n        try {\n          // NOTE: Make API request\n          await wait(500);\n          resetForm();\n          setStatus({ success: true });\n          setSubmitting(false);\n          enqueueSnackbar('Customer updated', {\n            anchorOrigin: {\n              horizontal: 'right',\n              vertical: 'top'\n            },\n            variant: 'success'\n          });\n        } catch (err) {\n          console.error(err);\n          setStatus({ success: false });\n          setErrors({ submit: err.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n        <form\n          onSubmit={handleSubmit}\n          {...other}\n        >\n          <Card>\n            <Box sx={{ p: 3 }}>\n              <Grid\n                container\n                spacing={3}\n              >\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.name && errors.name)}\n                    fullWidth\n                    helperText={touched.name && errors.name}\n                    label=\"Full name\"\n                    name=\"name\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    value={values.name}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.email && errors.email)}\n                    fullWidth\n                    helperText={touched.email && errors.email}\n                    label=\"Email address\"\n                    name=\"email\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    value={values.email}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.country && errors.country)}\n                    fullWidth\n                    helperText={touched.country && errors.country}\n                    label=\"Country\"\n                    name=\"country\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.country}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.state && errors.state)}\n                    fullWidth\n                    helperText={touched.state && errors.state}\n                    label=\"State/Region\"\n                    name=\"state\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.state}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.address1 && errors.address1)}\n                    fullWidth\n                    helperText={touched.address1 && errors.address1}\n                    label=\"Address 1\"\n                    name=\"address1\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.address1}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.address2 && errors.address2)}\n                    fullWidth\n                    helperText={touched.address2 && errors.address2}\n                    label=\"Address 2\"\n                    name=\"address2\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.address2}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.phone && errors.phone)}\n                    fullWidth\n                    helperText={touched.phone && errors.phone}\n                    label=\"Phone number\"\n                    name=\"phone\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.phone}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item />\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <Typography\n                    color=\"textPrimary\"\n                    gutterBottom\n                    variant=\"subtitle2\"\n                  >\n                    Email Verified\n                  </Typography>\n                  <Typography\n                    color=\"textSecondary\"\n                    variant=\"body2\"\n                  >\n                    Disabling this will automatically send the user\n                    a verification email\n                  </Typography>\n                  <Switch\n                    checked={values.isVerified}\n                    color=\"primary\"\n                    edge=\"start\"\n                    name=\"isVerified\"\n                    onChange={handleChange}\n                    value={values.isVerified}\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <Typography\n                    color=\"textPrimary\"\n                    gutterBottom\n                    variant=\"subtitle2\"\n                  >\n                    Discounted Prices\n                  </Typography>\n                  <Typography\n                    color=\"textSecondary\"\n                    variant=\"body2\"\n                  >\n                    This will give the user discounted prices for\n                    all products\n                  </Typography>\n                  <Switch\n                    checked={values.hasDiscountedPrices}\n                    color=\"primary\"\n                    edge=\"start\"\n                    name=\"hasDiscountedPrices\"\n                    onChange={handleChange}\n                    value={values.hasDiscountedPrices}\n                  />\n                </Grid>\n              </Grid>\n              <Box sx={{ mt: 2 }}>\n                <Button\n                  color=\"primary\"\n                  disabled={isSubmitting}\n                  type=\"submit\"\n                  variant=\"contained\"\n                >\n                  Update Customer\n                </Button>\n              </Box>\n            </Box>\n          </Card>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nCustomerEditForm.propTypes = {\n  // @ts-ignore\n  customer: PropTypes.object.isRequired\n};\n\nexport default CustomerEditForm;\n","import { useState, useCallback, useEffect } from 'react';\nimport { format } from 'date-fns';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  TextField,\n  Typography\n} from '@material-ui/core';\nimport useIsMountedRef from '../../../hooks/useIsMountedRef';\nimport MailIcon from '../../../icons/Mail';\nimport axios from '../../../lib/axios';\n\nconst emailOptions = [\n  'Resend last invoice',\n  'Send password reset',\n  'Send verification'\n];\n\nconst CustomerEmailsSummary = (props) => {\n  const isMountedRef = useIsMountedRef();\n  const [emailOption, setEmailOption] = useState(emailOptions[0]);\n  const [emails, setEmails] = useState([]);\n\n  const getEmails = useCallback(async () => {\n    try {\n      const response = await axios.get('/api/customers/1/emails');\n\n      if (isMountedRef.current) {\n        setEmails(response.data.emails);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getEmails();\n  }, []);\n\n  return (\n    <Card {...props}>\n      <CardHeader title=\"Emails\" />\n      <Divider />\n      <CardContent>\n        <TextField\n          fullWidth\n          name=\"option\"\n          onChange={(event) => setEmailOption(event.target.value)}\n          select\n          SelectProps={{ native: true }}\n          value={emailOption}\n          variant=\"outlined\"\n        >\n          {emailOptions.map((option) => (\n            <option\n              key={option}\n              value={option}\n            >\n              {option}\n            </option>\n          ))}\n        </TextField>\n        <Box sx={{ mt: 2 }}>\n          <Button\n            color=\"primary\"\n            startIcon={<MailIcon fontSize=\"small\" />}\n            variant=\"contained\"\n          >\n            Send email\n          </Button>\n        </Box>\n        <Box sx={{ mt: 2 }}>\n          <Table>\n            <TableBody>\n              {emails.map((email) => (\n                <TableRow key={email.id}>\n                  <TableCell>\n                    <Typography\n                      color=\"textPrimary\"\n                      variant=\"subtitle2\"\n                    >\n                      {email.description}\n                    </Typography>\n                  </TableCell>\n                  <TableCell>\n                    {format(email.createdAt, 'dd/MM/yyyy | HH:mm')}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default CustomerEmailsSummary;\n","import { useState, useEffect, useCallback } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { format } from 'date-fns';\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  IconButton,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow\n} from '@material-ui/core';\nimport useIsMountedRef from '../../../hooks/useIsMountedRef';\nimport ArrowRightIcon from '../../../icons/ArrowRight';\nimport axios from '../../../lib/axios';\nimport Label from '../../Label';\nimport MoreMenu from '../../MoreMenu';\nimport Scrollbar from '../../Scrollbar';\n\nconst CustomerInvoices = (props) => {\n  const isMountedRef = useIsMountedRef();\n  const [invoices, setInvoices] = useState([]);\n\n  const getInvoices = useCallback(async () => {\n    try {\n      const response = await axios.get('/api/customers/1/invoices');\n\n      if (isMountedRef.current) {\n        setInvoices(response.data.invoices);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getInvoices();\n  }, []);\n\n  return (\n    <Card {...props}>\n      <CardHeader\n        action={<MoreMenu />}\n        title=\"Invoices\"\n      />\n      <Divider />\n      <Scrollbar>\n        <Box sx={{ minWidth: 1150 }}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>\n                  ID\n                </TableCell>\n                <TableCell>\n                  Date\n                </TableCell>\n                <TableCell>\n                  Description\n                </TableCell>\n                <TableCell>\n                  Payment Method\n                </TableCell>\n                <TableCell>\n                  Total\n                </TableCell>\n                <TableCell>\n                  Status\n                </TableCell>\n                <TableCell align=\"right\">\n                  Actions\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {invoices.map((invoice) => (\n                <TableRow key={invoice.id}>\n                  <TableCell>\n                    #\n                    {invoice.id}\n                  </TableCell>\n                  <TableCell>\n                    {format(invoice.issueDate, 'dd/MM/yyyy | HH:mm')}\n                  </TableCell>\n                  <TableCell>\n                    {invoice.description}\n                  </TableCell>\n                  <TableCell>\n                    {invoice.paymentMethod}\n                  </TableCell>\n                  <TableCell>\n                    {invoice.currency}\n                    {invoice.value}\n                  </TableCell>\n                  <TableCell>\n                    <Label color=\"primary\">\n                      {invoice.status}\n                    </Label>\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    <IconButton\n                      component={RouterLink}\n                      to=\"/dashboard/invoices/1\"\n                    >\n                      <ArrowRightIcon fontSize=\"small\" />\n                    </IconButton>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </Scrollbar>\n      <TablePagination\n        component=\"div\"\n        count={invoices.length}\n        onPageChange={() => {\n        }}\n        onRowsPerPageChange={() => {\n        }}\n        page={0}\n        rowsPerPage={5}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </Card>\n  );\n};\n\nexport default CustomerInvoices;\n","import {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  Typography\n} from '@material-ui/core';\nimport ReceiptIcon from '@material-ui/icons/Receipt';\nimport CurrencyDollarIcon from '../../../icons/CurrencyDollar';\n\nconst CustomerInvoicesSummary = (props) => (\n  <Card {...props}>\n    <CardHeader title=\"Invoices/CheckoutBilling\" />\n    <Divider />\n    <Table>\n      <TableBody>\n        <TableRow>\n          <TableCell>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"subtitle2\"\n            >\n              Credit Card\n            </Typography>\n          </TableCell>\n          <TableCell>\n            <Typography\n              color=\"textSecondary\"\n              variant=\"body2\"\n            >\n              **** **** **** **** 4142\n            </Typography>\n          </TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCell>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"subtitle2\"\n            >\n              Paid\n            </Typography>\n          </TableCell>\n          <TableCell>\n            <Typography\n              color=\"textSecondary\"\n              variant=\"body2\"\n            >\n              2 ($50.00)\n            </Typography>\n          </TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCell>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"subtitle2\"\n            >\n              Draft\n            </Typography>\n          </TableCell>\n          <TableCell>\n            <Typography\n              color=\"textSecondary\"\n              variant=\"body2\"\n            >\n              1 ($5.00)\n            </Typography>\n          </TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCell>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"subtitle2\"\n            >\n              Unpaid/Due\n            </Typography>\n          </TableCell>\n          <TableCell>\n            <Typography\n              color=\"textSecondary\"\n              variant=\"body2\"\n            >\n              1 ($12.00)\n            </Typography>\n          </TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCell>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"subtitle2\"\n            >\n              Refunded\n            </Typography>\n          </TableCell>\n          <TableCell>\n            <Typography\n              color=\"textSecondary\"\n              variant=\"body2\"\n            >\n              0 ($0.00)\n            </Typography>\n          </TableCell>\n        </TableRow>\n        <TableRow>\n          <TableCell>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"subtitle2\"\n            >\n              Gross Income\n            </Typography>\n          </TableCell>\n          <TableCell>\n            <Typography\n              color=\"textSecondary\"\n              variant=\"body2\"\n            >\n              $1,200.00\n            </Typography>\n          </TableCell>\n        </TableRow>\n      </TableBody>\n    </Table>\n    <Box\n      sx={{\n        alignItems: 'flex-start',\n        display: 'flex',\n        flexDirection: 'column',\n        p: 1\n      }}\n    >\n      <Button\n        color=\"inherit\"\n        startIcon={<CurrencyDollarIcon fontSize=\"small\" />}\n        variant=\"text\"\n      >\n        Create Invoice\n      </Button>\n      <Button\n        color=\"inherit\"\n        startIcon={<ReceiptIcon fontSize=\"small\" />}\n        sx={{ mt: 1 }}\n        variant=\"text\"\n      >\n        Resend Due Invoices\n      </Button>\n    </Box>\n  </Card>\n);\n\nexport default CustomerInvoicesSummary;\n","import { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport numeral from 'numeral';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  Checkbox,\n  Divider,\n  IconButton,\n  InputAdornment,\n  Link,\n  Tab,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Tabs,\n  TextField,\n  Typography\n} from '@material-ui/core';\nimport ArrowRightIcon from '../../../icons/ArrowRight';\nimport PencilAltIcon from '../../../icons/PencilAlt';\nimport SearchIcon from '../../../icons/Search';\nimport getInitials from '../../../utils/getInitials';\nimport Scrollbar from '../../Scrollbar';\n\nconst tabs = [\n  {\n    label: 'All',\n    value: 'all'\n  },\n  {\n    label: 'Accepts Marketing',\n    value: 'hasAcceptedMarketing'\n  },\n  {\n    label: 'Prospect',\n    value: 'isProspect'\n  },\n  {\n    label: 'Returning',\n    value: 'isReturning'\n  }\n];\n\nconst sortOptions = [\n  {\n    label: 'Last update (newest)',\n    value: 'updatedAt|desc'\n  },\n  {\n    label: 'Last update (oldest)',\n    value: 'updatedAt|asc'\n  },\n  {\n    label: 'Total orders (highest)',\n    value: 'orders|desc'\n  },\n  {\n    label: 'Total orders (lowest)',\n    value: 'orders|asc'\n  }\n];\n\nconst applyFilters = (customers, query, filters) => customers\n  .filter((customer) => {\n    let matches = true;\n\n    if (query) {\n      const properties = ['email', 'name'];\n      let containsQuery = false;\n\n      properties.forEach((property) => {\n        if (customer[property].toLowerCase().includes(query.toLowerCase())) {\n          containsQuery = true;\n        }\n      });\n\n      if (!containsQuery) {\n        matches = false;\n      }\n    }\n\n    Object.keys(filters).forEach((key) => {\n      const value = filters[key];\n\n      if (value && customer[key] !== value) {\n        matches = false;\n      }\n    });\n\n    return matches;\n  });\n\nconst applyPagination = (customers, page, limit) => customers\n  .slice(page * limit, page * limit + limit);\n\nconst descendingComparator = (a, b, orderBy) => {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n};\n\nconst getComparator = (order, orderBy) => (order === 'desc'\n  ? (a, b) => descendingComparator(a, b, orderBy)\n  : (a, b) => -descendingComparator(a, b, orderBy));\n\nconst applySort = (customers, sort) => {\n  const [orderBy, order] = sort.split('|');\n  const comparator = getComparator(order, orderBy);\n  const stabilizedThis = customers.map((el, index) => [el, index]);\n\n  stabilizedThis.sort((a, b) => {\n    // @ts-ignore\n    const newOrder = comparator(a[0], b[0]);\n\n    if (newOrder !== 0) {\n      return newOrder;\n    }\n\n    // @ts-ignore\n    return a[1] - b[1];\n  });\n\n  // @ts-ignore\n  return stabilizedThis.map((el) => el[0]);\n};\n\nconst CustomerListTable = (props) => {\n  const { customers, ...other } = props;\n  const [currentTab, setCurrentTab] = useState('all');\n  const [selectedCustomers, setSelectedCustomers] = useState([]);\n  const [page, setPage] = useState(0);\n  const [limit, setLimit] = useState(5);\n  const [query, setQuery] = useState('');\n  const [sort, setSort] = useState(sortOptions[0].value);\n  const [filters, setFilters] = useState({\n    hasAcceptedMarketing: null,\n    isProspect: null,\n    isReturning: null\n  });\n\n  const handleTabsChange = (event, value) => {\n    const updatedFilters = {\n      ...filters,\n      hasAcceptedMarketing: null,\n      isProspect: null,\n      isReturning: null\n    };\n\n    if (value !== 'all') {\n      updatedFilters[value] = true;\n    }\n\n    setFilters(updatedFilters);\n    setSelectedCustomers([]);\n    setCurrentTab(value);\n  };\n\n  const handleQueryChange = (event) => {\n    setQuery(event.target.value);\n  };\n\n  const handleSortChange = (event) => {\n    setSort(event.target.value);\n  };\n\n  const handleSelectAllCustomers = (event) => {\n    setSelectedCustomers(event.target.checked\n      ? customers.map((customer) => customer.id)\n      : []);\n  };\n\n  const handleSelectOneCustomer = (event, customerId) => {\n    if (!selectedCustomers.includes(customerId)) {\n      setSelectedCustomers((prevSelected) => [...prevSelected, customerId]);\n    } else {\n      setSelectedCustomers((prevSelected) => prevSelected.filter((id) => id !== customerId));\n    }\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(parseInt(event.target.value, 10));\n  };\n\n  const filteredCustomers = applyFilters(customers, query, filters);\n  const sortedCustomers = applySort(filteredCustomers, sort);\n  const paginatedCustomers = applyPagination(sortedCustomers, page, limit);\n  const enableBulkActions = selectedCustomers.length > 0;\n  const selectedSomeCustomers = selectedCustomers.length > 0\n    && selectedCustomers.length < customers.length;\n  const selectedAllCustomers = selectedCustomers.length === customers.length;\n\n  return (\n    <Card {...other}>\n      <Tabs\n        indicatorColor=\"primary\"\n        onChange={handleTabsChange}\n        scrollButtons=\"auto\"\n        textColor=\"primary\"\n        value={currentTab}\n        variant=\"scrollable\"\n      >\n        {tabs.map((tab) => (\n          <Tab\n            key={tab.value}\n            label={tab.label}\n            value={tab.value}\n          />\n        ))}\n      </Tabs>\n      <Divider />\n      <Box\n        sx={{\n          alignItems: 'center',\n          display: 'flex',\n          flexWrap: 'wrap',\n          m: -1,\n          p: 2\n        }}\n      >\n        <Box\n          sx={{\n            m: 1,\n            maxWidth: '100%',\n            width: 500\n          }}\n        >\n          <TextField\n            fullWidth\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon fontSize=\"small\" />\n                </InputAdornment>\n              )\n            }}\n            onChange={handleQueryChange}\n            placeholder=\"Search customers\"\n            value={query}\n            variant=\"outlined\"\n          />\n        </Box>\n        <Box\n          sx={{\n            m: 1,\n            width: 240\n          }}\n        >\n          <TextField\n            label=\"Sort By\"\n            name=\"sort\"\n            onChange={handleSortChange}\n            select\n            SelectProps={{ native: true }}\n            value={sort}\n            variant=\"outlined\"\n          >\n            {sortOptions.map((option) => (\n              <option\n                key={option.value}\n                value={option.value}\n              >\n                {option.label}\n              </option>\n            ))}\n          </TextField>\n        </Box>\n      </Box>\n      {enableBulkActions && (\n        <Box sx={{ position: 'relative' }}>\n          <Box\n            sx={{\n              backgroundColor: 'background.paper',\n              mt: '6px',\n              position: 'absolute',\n              px: '4px',\n              width: '100%',\n              zIndex: 2\n            }}\n          >\n            <Checkbox\n              checked={selectedAllCustomers}\n              color=\"primary\"\n              indeterminate={selectedSomeCustomers}\n              onChange={handleSelectAllCustomers}\n            />\n            <Button\n              color=\"primary\"\n              sx={{ ml: 2 }}\n              variant=\"outlined\"\n            >\n              Delete\n            </Button>\n            <Button\n              color=\"primary\"\n              sx={{ ml: 2 }}\n              variant=\"outlined\"\n            >\n              Edit\n            </Button>\n          </Box>\n        </Box>\n      )}\n      <Scrollbar>\n        <Box sx={{ minWidth: 700 }}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    checked={selectedAllCustomers}\n                    color=\"primary\"\n                    indeterminate={selectedSomeCustomers}\n                    onChange={handleSelectAllCustomers}\n                  />\n                </TableCell>\n                <TableCell>\n                  Name\n                </TableCell>\n                <TableCell>\n                  Location\n                </TableCell>\n                <TableCell>\n                  Orders\n                </TableCell>\n                <TableCell>\n                  Spent\n                </TableCell>\n                <TableCell align=\"right\">\n                  Actions\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {paginatedCustomers.map((customer) => {\n                const isCustomerSelected = selectedCustomers.includes(customer.id);\n\n                return (\n                  <TableRow\n                    hover\n                    key={customer.id}\n                    selected={isCustomerSelected}\n                  >\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        checked={isCustomerSelected}\n                        color=\"primary\"\n                        onChange={(event) => handleSelectOneCustomer(event, customer.id)}\n                        value={isCustomerSelected}\n                      />\n                    </TableCell>\n                    <TableCell>\n                      <Box\n                        sx={{\n                          alignItems: 'center',\n                          display: 'flex'\n                        }}\n                      >\n                        <Avatar\n                          src={customer.avatar}\n                          sx={{\n                            height: 42,\n                            width: 42\n                          }}\n                        >\n                          {getInitials(customer.name)}\n                        </Avatar>\n                        <Box sx={{ ml: 1 }}>\n                          <Link\n                            color=\"inherit\"\n                            component={RouterLink}\n                            to=\"/dashboard/customers/1\"\n                            variant=\"subtitle2\"\n                          >\n                            {customer.name}\n                          </Link>\n                          <Typography\n                            color=\"textSecondary\"\n                            variant=\"body2\"\n                          >\n                            {customer.email}\n                          </Typography>\n                        </Box>\n                      </Box>\n                    </TableCell>\n                    <TableCell>\n                      {`${customer.city}, ${customer.state}, ${customer.country}`}\n                    </TableCell>\n                    <TableCell>\n                      {customer.totalOrders}\n                    </TableCell>\n                    <TableCell>\n                      {numeral(customer.totalAmountSpent)\n                        .format(`${customer.currency}0,0.00`)}\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      <IconButton\n                        component={RouterLink}\n                        to=\"/dashboard/customers/1/edit\"\n                      >\n                        <PencilAltIcon fontSize=\"small\" />\n                      </IconButton>\n                      <IconButton\n                        component={RouterLink}\n                        to=\"/dashboard/customers/1\"\n                      >\n                        <ArrowRightIcon fontSize=\"small\" />\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </Box>\n      </Scrollbar>\n      <TablePagination\n        component=\"div\"\n        count={filteredCustomers.length}\n        onPageChange={handlePageChange}\n        onRowsPerPageChange={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </Card>\n  );\n};\n\nCustomerListTable.propTypes = {\n  customers: PropTypes.array.isRequired\n};\n\nexport default CustomerListTable;\n","import { useState, useEffect, useCallback } from 'react';\nimport { format } from 'date-fns';\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow\n} from '@material-ui/core';\nimport useIsMountedRef from '../../../hooks/useIsMountedRef';\nimport axios from '../../../lib/axios';\nimport Label from '../../Label';\nimport MoreMenu from '../../MoreMenu';\nimport Scrollbar from '../../Scrollbar';\n\nconst CustomerLogs = (props) => {\n  const isMountedRef = useIsMountedRef();\n  const [logs, setLogs] = useState([]);\n\n  const getLogs = useCallback(async () => {\n    try {\n      const response = await axios.get('/api/customers/1/logs');\n\n      if (isMountedRef.current) {\n        setLogs(response.data.logs);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getLogs();\n  }, [getLogs]);\n\n  return (\n    <Card {...props}>\n      <CardHeader\n        action={<MoreMenu />}\n        title=\"Logs\"\n      />\n      <Divider />\n      <Scrollbar>\n        <Box sx={{ minWidth: 1150 }}>\n          <Table>\n            <TableBody>\n              {logs.map((log) => (\n                <TableRow key={log.id}>\n                  <TableCell width=\"100\">\n                    <Typography\n                      color=\"textPrimary\"\n                      variant=\"subtitle2\"\n                    >\n                      {log.method}\n                    </Typography>\n                  </TableCell>\n                  <TableCell width=\"64\">\n                    <Label\n                      color={log.status === 200\n                        ? 'success'\n                        : 'error'}\n                    >\n                      {log.status}\n                    </Label>\n                  </TableCell>\n                  <TableCell>\n                    {log.route}\n                  </TableCell>\n                  <TableCell>\n                    {log.description}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {log.ip}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {format(log.createdAt, 'yyyy/MM/dd | HH:mm:ss')}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </Scrollbar>\n    </Card>\n  );\n};\n\nexport default CustomerLogs;\n","import { useState, useCallback, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport { Box, Breadcrumbs, Container, Grid, Link, Typography } from '@material-ui/core';\nimport { CustomerEditForm } from '../../components/dashboard/customer';\nimport useIsMountedRef from '../../hooks/useIsMountedRef';\nimport useSettings from '../../hooks/useSettings';\nimport ChevronRightIcon from '../../icons/ChevronRight';\nimport gtm from '../../lib/gtm';\nimport axios from '../../lib/axios';\n\nconst CustomerEdit = () => {\n  const isMountedRef = useIsMountedRef();\n  const { settings } = useSettings();\n  const [customer, setCustomer] = useState(null);\n\n  useEffect(() => {\n    gtm.push({ event: 'page_view' });\n  }, []);\n\n  const getCustomer = useCallback(async () => {\n    try {\n      const response = await axios.get('/api/customers/1');\n\n      if (isMountedRef.current) {\n        setCustomer(response.data.customer);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getCustomer();\n  }, [getCustomer]);\n\n  if (!customer) {\n    return null;\n  }\n\n  return (\n    <>\n      <Helmet>\n        <title>Dashboard: Customer Edit | Material Kit Pro</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 8\n        }}\n      >\n        <Container maxWidth={settings.compact ? 'xl' : false}>\n          <Grid\n            container\n            justifyContent=\"space-between\"\n            spacing={3}\n          >\n            <Grid item>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"h5\"\n              >\n                Customer Edit\n              </Typography>\n              <Breadcrumbs\n                aria-label=\"breadcrumb\"\n                separator={<ChevronRightIcon fontSize=\"small\" />}\n                sx={{ mt: 1 }}\n              >\n                <Link\n                  color=\"textPrimary\"\n                  component={RouterLink}\n                  to=\"/dashboard\"\n                  variant=\"subtitle2\"\n                >\n                  Dashboard\n                </Link>\n                <Link\n                  color=\"textPrimary\"\n                  component={RouterLink}\n                  to=\"/dashboard\"\n                  variant=\"subtitle2\"\n                >\n                  Management\n                </Link>\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"subtitle2\"\n                >\n                  Customers\n                </Typography>\n              </Breadcrumbs>\n            </Grid>\n          </Grid>\n          <Box mt={3}>\n            <CustomerEditForm customer={customer} />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default CustomerEdit;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst ArrowRight = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'ArrowRight'\n);\n\nexport default ArrowRight;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst DotsHorizontal = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M6 10a2 2 0 11-4 0 2 2 0 014 0zM12 10a2 2 0 11-4 0 2 2 0 014 0zM16 12a2 2 0 100-4 2 2 0 000 4z\" />\n  </svg>, 'DotsHorizontal'\n);\n\nexport default DotsHorizontal;\n","import PropTypes from 'prop-types';\nimport { experimentalStyled } from '@material-ui/core/styles';\n\nconst LabelRoot = experimentalStyled('span')((({ theme, styleProps }) => {\n  const backgroundColor = theme.palette[styleProps.color].main;\n  const color = theme.palette[styleProps.color].contrastText;\n\n  return {\n    alignItems: 'center',\n    backgroundColor,\n    borderRadius: theme.shape.borderRadius,\n    color,\n    cursor: 'default',\n    display: 'inline-flex',\n    flexGrow: 0,\n    flexShrink: 0,\n    fontFamily: theme.typography.fontFamily,\n    fontSize: theme.typography.pxToRem(11),\n    fontWeight: theme.typography.fontWeightMedium,\n    justifyContent: 'center',\n    letterSpacing: 0.5,\n    minWidth: 20,\n    paddingBottom: theme.spacing(0.5),\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    paddingTop: theme.spacing(0.5),\n    textTransform: 'uppercase',\n    whiteSpace: 'nowrap'\n  };\n}));\n\nconst Label = (props) => {\n  const { color = 'primary', children, ...other } = props;\n\n  const styleProps = { color };\n\n  return (\n    <LabelRoot\n      styleProps={styleProps}\n      {...other}\n    >\n      {children}\n    </LabelRoot>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  color: PropTypes.oneOf([\n    'primary',\n    'secondary',\n    'error',\n    'warning',\n    'success'\n  ])\n};\n\nexport default Label;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Download = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm3.293-7.707a1 1 0 011.414 0L9 10.586V3a1 1 0 112 0v7.586l1.293-1.293a1 1 0 111.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Download'\n);\n\nexport default Download;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst PencilAlt = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M17.414 2.586a2 2 0 00-2.828 0L7 10.172V13h2.828l7.586-7.586a2 2 0 000-2.828z\" />\n    <path\n      fillRule=\"evenodd\"\n      d=\"M2 6a2 2 0 012-2h4a1 1 0 010 2H4v10h10v-4a1 1 0 112 0v4a2 2 0 01-2 2H4a2 2 0 01-2-2V6z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'PencilAlt'\n);\n\nexport default PencilAlt;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Duplicate = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M7 9a2 2 0 012-2h6a2 2 0 012 2v6a2 2 0 01-2 2H9a2 2 0 01-2-2V9z\" />\n    <path d=\"M5 3a2 2 0 00-2 2v6a2 2 0 002 2V5h8a2 2 0 00-2-2H5z\" />\n  </svg>, 'Duplicate'\n);\n\nexport default Duplicate;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Trash = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Trash'\n);\n\nexport default Trash;\n","const getInitials = (name = '') => name\n  .replace(/\\s+/, ' ')\n  .split(' ')\n  .slice(0, 2)\n  .map((v) => v && v[0].toUpperCase())\n  .join('');\n\nexport default getInitials;\n","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getCardHeaderUtilityClass(slot) {\n  return generateUtilityClass('MuiCardHeader', slot);\n}\nconst cardHeaderClasses = generateUtilityClasses('MuiCardHeader', ['root', 'avatar', 'action', 'content', 'title', 'subheader']);\nexport default cardHeaderClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport Typography from '../Typography';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport cardHeaderClasses, { getCardHeaderUtilityClass } from './cardHeaderClasses';\n\nconst overridesResolver = (props, styles) => {\n  return deepmerge({\n    [`& .${cardHeaderClasses.avatar}`]: styles.avatar,\n    [`& .${cardHeaderClasses.action}`]: styles.action,\n    [`& .${cardHeaderClasses.content}`]: styles.content,\n    [`& .${cardHeaderClasses.title}`]: styles.title,\n    [`& .${cardHeaderClasses.subheader}`]: styles.subheader\n  }, styles.root || {});\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar'],\n    action: ['action'],\n    content: ['content'],\n    title: ['title'],\n    subheader: ['subheader']\n  };\n  return composeClasses(slots, getCardHeaderUtilityClass, classes);\n};\n\nconst CardHeaderRoot = experimentalStyled('div', {}, {\n  name: 'MuiCardHeader',\n  slot: 'Root',\n  overridesResolver\n})({\n  /* Styles applied to the root element. */\n  display: 'flex',\n  alignItems: 'center',\n  padding: 16\n});\nconst CardHeaderAvatar = experimentalStyled('div', {}, {\n  name: 'MuiCardHeader',\n  slot: 'Avatar'\n})({\n  /* Styles applied to the avatar element. */\n  display: 'flex',\n  flex: '0 0 auto',\n  marginRight: 16\n});\nconst CardHeaderAction = experimentalStyled('div', {}, {\n  name: 'MuiCardHeader',\n  slot: 'Action'\n})({\n  /* Styles applied to the action element. */\n  flex: '0 0 auto',\n  alignSelf: 'flex-start',\n  marginTop: -4,\n  marginRight: -8,\n  marginBottom: -4\n});\nconst CardHeaderContent = experimentalStyled('div', {}, {\n  name: 'MuiCardHeader',\n  slot: 'Content'\n})({\n  /* Styles applied to the content wrapper element. */\n  flex: '1 1 auto'\n});\nconst CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardHeader'\n  });\n\n  const {\n    action,\n    avatar,\n    className,\n    component = 'div',\n    disableTypography = false,\n    subheader: subheaderProp,\n    subheaderTypographyProps,\n    title: titleProp,\n    titleTypographyProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"action\", \"avatar\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  const styleProps = _extends({}, props, {\n    component,\n    disableTypography\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  let title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps), title);\n  }\n\n  let subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"text.secondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps), subheader);\n  }\n\n  return /*#__PURE__*/React.createElement(CardHeaderRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref,\n    styleProps: styleProps\n  }, other), avatar && /*#__PURE__*/React.createElement(CardHeaderAvatar, {\n    className: classes.avatar,\n    styleProps: styleProps\n  }, avatar), /*#__PURE__*/React.createElement(CardHeaderContent, {\n    className: classes.content,\n    styleProps: styleProps\n  }, title, subheader), action && /*#__PURE__*/React.createElement(CardHeaderAction, {\n    className: classes.action,\n    styleProps: styleProps\n  }, action));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The content of the component.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default CardHeader;","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Archive = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M4 3a2 2 0 100 4h12a2 2 0 100-4H4z\" />\n    <path\n      fillRule=\"evenodd\"\n      d=\"M3 8h14v7a2 2 0 01-2 2H5a2 2 0 01-2-2V8zm5 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Archive'\n);\n\nexport default Archive;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst DocumentText = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'DocumentText'\n);\n\nexport default DocumentText;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst CurrencyDollar = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M8.433 7.418c.155-.103.346-.196.567-.267v1.698a2.305 2.305 0 01-.567-.267C8.07 8.34 8 8.114 8 8c0-.114.07-.34.433-.582zM11 12.849v-1.698c.22.071.412.164.567.267.364.243.433.468.433.582 0 .114-.07.34-.433.582a2.305 2.305 0 01-.567.267z\" />\n    <path\n      fillRule=\"evenodd\"\n      d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-13a1 1 0 10-2 0v.092a4.535 4.535 0 00-1.676.662C6.602 6.234 6 7.009 6 8c0 .99.602 1.765 1.324 2.246.48.32 1.054.545 1.676.662v1.941c-.391-.127-.68-.317-.843-.504a1 1 0 10-1.51 1.31c.562.649 1.413 1.076 2.353 1.253V15a1 1 0 102 0v-.092a4.535 4.535 0 001.676-.662C13.398 13.766 14 12.991 14 12c0-.99-.602-1.765-1.324-2.246A4.535 4.535 0 0011 9.092V7.151c.391.127.68.317.843.504a1 1 0 101.511-1.31c-.563-.649-1.413-1.076-2.354-1.253V5z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'CurrencyDollar'\n);\n\nexport default CurrencyDollar;\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport { emphasize } from '../styles/colorManipulator';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\nconst BreadcrumbCollapsedButton = experimentalStyled(ButtonBase)(({\n  theme\n}) => _extends({\n  display: 'flex',\n  marginLeft: theme.spacing(0.5),\n  marginRight: theme.spacing(0.5)\n}, theme.palette.mode === 'light' ? {\n  backgroundColor: theme.palette.grey[100],\n  color: theme.palette.grey[700]\n} : {\n  backgroundColor: theme.palette.grey[700],\n  color: theme.palette.grey[100]\n}, {\n  borderRadius: 2,\n  '&:hover, &:focus': _extends({}, theme.palette.mode === 'light' ? {\n    backgroundColor: theme.palette.grey[200]\n  } : {\n    backgroundColor: theme.palette.grey[600]\n  }),\n  '&:active': _extends({\n    boxShadow: theme.shadows[0]\n  }, theme.palette.mode === 'light' ? {\n    backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n  } : {\n    backgroundColor: emphasize(theme.palette.grey[600], 0.12)\n  })\n}));\nconst BreadcrumbCollapsedIcon = experimentalStyled(MoreHorizIcon)({\n  width: 24,\n  height: 16\n});\n/**\n * @ignore - internal component.\n */\n\nfunction BreadcrumbCollapsed(props) {\n  const styleProps = props;\n  return /*#__PURE__*/React.createElement(\"li\", null, /*#__PURE__*/React.createElement(BreadcrumbCollapsedButton, _extends({\n    focusRipple: true\n  }, props, {\n    styleProps: styleProps\n  }), /*#__PURE__*/React.createElement(BreadcrumbCollapsedIcon, {\n    styleProps: styleProps\n  })));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default BreadcrumbCollapsed;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getBreadcrumbsUtilityClass(slot) {\n  return generateUtilityClass('MuiBreadcrumbs', slot);\n}\nconst breadcrumbsClasses = generateUtilityClasses('MuiBreadcrumbs', ['root', 'ol', 'li', 'separator']);\nexport default breadcrumbsClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nimport breadcrumbsClasses, { getBreadcrumbsUtilityClass } from './breadcrumbsClasses';\n\nconst overridesResolver = (props, styles) => {\n  return deepmerge({\n    [`& .${breadcrumbsClasses.ol}`]: styles.ol,\n    [`& .${breadcrumbsClasses.li}`]: styles.li,\n    [`& .${breadcrumbsClasses.separator}`]: styles.separator\n  }, styles.root || {});\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root'],\n    li: ['li'],\n    ol: ['ol'],\n    separator: ['separator']\n  };\n  return composeClasses(slots, getBreadcrumbsUtilityClass, classes);\n};\n\nconst BreadcrumbsRoot = experimentalStyled(Typography, {}, {\n  name: 'MuiBreadcrumbs',\n  slot: 'Root',\n  overridesResolver\n})({});\nconst BreadcrumbsOl = experimentalStyled('ol', {}, {\n  name: 'MuiBreadcrumbs',\n  slot: 'Ol'\n})({\n  display: 'flex',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n  padding: 0,\n  margin: 0,\n  listStyle: 'none'\n});\nconst BreadcrumbsSeparator = experimentalStyled('li', {}, {\n  name: 'MuiBreadcrumbs',\n  slot: 'Separator'\n})({\n  display: 'flex',\n  userSelect: 'none',\n  marginLeft: 8,\n  marginRight: 8\n});\n\nfunction insertSeparators(items, className, separator, styleProps) {\n  return items.reduce((acc, current, index) => {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/React.createElement(BreadcrumbsSeparator, {\n        \"aria-hidden\": true,\n        key: `separator-${index}`,\n        className: className,\n        styleProps: styleProps\n      }, separator));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nconst Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBreadcrumbs'\n  });\n\n  const {\n    children,\n    className,\n    component = 'nav',\n    expandText = 'Show path',\n    itemsAfterCollapse = 1,\n    itemsBeforeCollapse = 1,\n    maxItems = 8,\n    separator = '/'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"]);\n\n  const [expanded, setExpanded] = React.useState(false);\n\n  const styleProps = _extends({}, props, {\n    component,\n    expanded,\n    expandText,\n    itemsAfterCollapse,\n    itemsBeforeCollapse,\n    maxItems,\n    separator\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  const listRef = React.useRef(null);\n\n  const renderItemsBeforeAndAfter = allItems => {\n    const handleClickExpand = () => {\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n      // Moving it to the <ol> or <nav> does not cause any announcement in NVDA.\n      // By moving it to some link/button at least we have some announcement.\n\n      const focusable = listRef.current.querySelector('a[href],button,[tabindex]');\n\n      if (focusable) {\n        focusable.focus();\n      }\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['Material-UI: You have provided an invalid combination of props to the Breadcrumbs.', `itemsAfterCollapse={${itemsAfterCollapse}} + itemsBeforeCollapse={${itemsBeforeCollapse}} >= maxItems={${maxItems}}`].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [...allItems.slice(0, itemsBeforeCollapse), /*#__PURE__*/React.createElement(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      key: \"ellipsis\",\n      onClick: handleClickExpand\n    }), ...allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)];\n  };\n\n  const allItems = React.Children.toArray(children).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map((child, index) => /*#__PURE__*/React.createElement(\"li\", {\n    className: classes.li,\n    key: `child-${index}`\n  }, child));\n  return /*#__PURE__*/React.createElement(BreadcrumbsRoot, _extends({\n    ref: ref,\n    component: component,\n    color: \"textSecondary\",\n    className: clsx(classes.root, className),\n    styleProps: styleProps\n  }, other), /*#__PURE__*/React.createElement(BreadcrumbsOl, {\n    className: classes.ol,\n    ref: listRef,\n    styleProps: styleProps\n  }, insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator, styleProps)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Show path'\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   * @default 1\n   */\n  itemsAfterCollapse: PropTypes.number,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   * @default 1\n   */\n  itemsBeforeCollapse: PropTypes.number,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   * @default 8\n   */\n  maxItems: PropTypes.number,\n\n  /**\n   * Custom separator node.\n   * @default '/'\n   */\n  separator: PropTypes.node,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default Breadcrumbs;","import { useRef, useState, memo } from 'react';\nimport { ListItemIcon, ListItemText, Tooltip, IconButton, Menu, MenuItem } from '@material-ui/core';\nimport ArchiveIcon from '../icons/Archive';\nimport DocumentTextIcon from '../icons/DocumentText';\nimport DotsHorizontalIcon from '../icons/DotsHorizontal';\nimport DownloadIcon from '../icons/Download';\nimport DuplicateIcon from '../icons/Duplicate';\n\nconst MoreMenu = (props) => {\n  const anchorRef = useRef(null);\n  const [openMenu, setOpenMenu] = useState(false);\n\n  const handleMenuOpen = () => {\n    setOpenMenu(true);\n  };\n\n  const handleMenuClose = () => {\n    setOpenMenu(false);\n  };\n\n  return (\n    <>\n      <Tooltip title=\"More options\">\n        <IconButton\n          onClick={handleMenuOpen}\n          ref={anchorRef}\n          {...props}\n        >\n          <DotsHorizontalIcon fontSize=\"small\" />\n        </IconButton>\n      </Tooltip>\n      <Menu\n        anchorEl={anchorRef.current}\n        anchorOrigin={{\n          horizontal: 'left',\n          vertical: 'top'\n        }}\n        onClose={handleMenuClose}\n        open={openMenu}\n        PaperProps={{\n          sx: {\n            maxWidth: '100%',\n            width: 256\n          }\n        }}\n        transformOrigin={{\n          horizontal: 'left',\n          vertical: 'top'\n        }}\n      >\n        <MenuItem>\n          <ListItemIcon>\n            <DownloadIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Import\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <DocumentTextIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Export\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <DuplicateIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Copy\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <ArchiveIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Archive\" />\n        </MenuItem>\n      </Menu>\n    </>\n  );\n};\n\nexport default memo(MoreMenu);\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Lock = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M5 9V7a5 5 0 0110 0v2a2 2 0 012 2v5a2 2 0 01-2 2H5a2 2 0 01-2-2v-5a2 2 0 012-2zm8-2v2H7V7a3 3 0 016 0z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Lock'\n);\n\nexport default Lock;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Ban = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M13.477 14.89A6 6 0 015.11 6.524l8.367 8.368zm1.414-1.414L6.524 5.11a6 6 0 018.367 8.367zM18 10a8 8 0 11-16 0 8 8 0 0116 0z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Ban'\n);\n\nexport default Ban;\n"],"sourceRoot":""}