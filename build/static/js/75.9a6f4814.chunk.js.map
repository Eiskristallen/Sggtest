{"version":3,"sources":["components/dashboard/account/AccountBillingSettings.js","components/dashboard/account/countries.js","components/dashboard/account/AccountGeneralSettings.js","components/dashboard/account/AccountNotificationsSettings.js","components/dashboard/account/AccountSecuritySettings.js","pages/dashboard/Account.js"],"names":["plan","AccountBillingSettings","props","Card","CardHeader","title","Divider","CardContent","Paper","variant","Box","sx","alignItems","lg","xs","display","flexWrap","justifyContent","flexDirection","lf","p","Typography","color","ml","mt","Button","size","Link","component","RouterLink","to","countries","text","value","AccountGeneralSettings","user","useAuth","enqueueSnackbar","useSnackbar","Grid","container","spacing","item","md","xl","textAlign","border","theme","palette","divider","borderRadius","Avatar","src","avatar","height","width","name","CardActions","fullWidth","enableReinitialize","initialValues","canHire","city","country","email","isPublic","phone","state","submit","validationSchema","Yup","shape","max","required","onSubmit","values","a","resetForm","setErrors","setStatus","setSubmitting","wait","success","anchorOrigin","horizontal","vertical","console","error","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","TextField","Boolean","helperText","label","onBlur","onChange","type","Autocomplete","getOptionLabel","option","options","renderInput","params","gutterBottom","Switch","checked","edge","FormHelperText","disabled","AccountNotificationsSettings","event","preventDefault","wrap","sm","FormControlLabel","control","Checkbox","defaultChecked","AccountSecuritySettings","password","passwordConfirm","min","oneOf","tabs","Account","settings","useSettings","useState","currentTab","setCurrentTab","useEffect","gtm","push","backgroundColor","minHeight","py","Container","maxWidth","compact","Breadcrumbs","aria-label","separator","ChevronRight","fontSize","Tabs","indicatorColor","scrollButtons","textColor","map","tab","Tab"],"mappings":"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","file":"static/js/75.9a6f4814.chunk.js","sourcesContent":["import { Link as RouterLink } from 'react-router-dom';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  Link,\n  Paper,\n  Typography\n} from '@material-ui/core';\n\nconst plan = {\n  adsLeft: 10,\n  currency: '$',\n  hasAnalytics: true,\n  hasEmailAlerts: true,\n  invitesLeft: 24,\n  name: 'Premium',\n  price: 29,\n  proposalsLeft: 12,\n  templatesLeft: 5\n};\n\nconst AccountBillingSettings = (props) => (\n  <Card {...props}>\n    <CardHeader title=\"Manage your plan\" />\n    <Divider />\n    <CardContent>\n      <Paper variant=\"outlined\">\n        <Box\n          sx={{\n            alignItems: {\n              lg: 'center',\n              xs: 'flex-start'\n            },\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'space-between',\n            flexDirection: {\n              lf: 'row',\n              xs: 'column-reverse'\n            },\n            p: 3\n          }}\n        >\n          <div>\n            <Typography\n              color=\"textPrimary\"\n              display=\"inline\"\n              variant=\"h4\"\n            >\n              {plan.currency}\n              {plan.price}\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              display=\"inline\"\n              variant=\"subtitle1\"\n            >\n              /mo\n            </Typography>\n          </div>\n          <Box\n            sx={{\n              alignItems: 'center',\n              display: 'flex'\n            }}\n          >\n            <Typography\n              color=\"textSecondary\"\n              sx={{ ml: 1 }}\n              variant=\"overline\"\n            >\n              {plan.name}\n            </Typography>\n          </Box>\n        </Box>\n        <Divider />\n        <Box\n          sx={{\n            alignItems: {\n              lg: 'center',\n              xs: 'flex-start'\n            },\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'space-between',\n            flexDirection: {\n              lg: 'row',\n              xs: 'column-reverse'\n            },\n            p: 3\n          }}\n        >\n          <div>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"body2\"\n            >\n              {`${plan.proposalsLeft} proposals left`}\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"body2\"\n            >\n              {`${plan.templatesLeft} templates`}\n            </Typography>\n          </div>\n          <div>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"body2\"\n            >\n              {`${plan.invitesLeft} invites left`}\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"body2\"\n            >\n              {`${plan.adsLeft} ads left`}\n            </Typography>\n          </div>\n          <div>\n            {plan.hasAnalytics && (\n              <Typography\n                color=\"textPrimary\"\n                variant=\"body2\"\n              >\n                Analytics dashboard\n              </Typography>\n            )}\n            {plan.hasEmailAlerts && (\n              <Typography\n                color=\"textPrimary\"\n                variant=\"body2\"\n              >\n                Email alerts\n              </Typography>\n            )}\n          </div>\n        </Box>\n      </Paper>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'flex-end',\n          mt: 2\n        }}\n      >\n        <Button\n          color=\"primary\"\n          size=\"small\"\n          variant=\"contained\"\n        >\n          Upgrade Plan\n        </Button>\n      </Box>\n      <Box sx={{ mt: 2 }}>\n        <Typography\n          color=\"textSecondary\"\n          variant=\"body2\"\n        >\n          The refunds don&apos;t work once you have the plan, but you can\n          always\n          {' '}\n          <Link\n            color=\"primary\"\n            component={RouterLink}\n            to=\"#\"\n          >\n            Cancel your plan\n          </Link>\n          .\n        </Typography>\n      </Box>\n    </CardContent>\n  </Card>\n);\n\nexport default AccountBillingSettings;\n","const countries = [\n  { text: 'Afghanistan', value: 'AF' },\n  { text: 'Åland Islands', value: 'AX' },\n  { text: 'Albania', value: 'AL' },\n  { text: 'Algeria', value: 'DZ' },\n  { text: 'American Samoa', value: 'AS' },\n  { text: 'Andorra', value: 'AD' },\n  { text: 'Angola', value: 'AO' },\n  { text: 'Anguilla', value: 'AI' },\n  { text: 'Antarctica', value: 'AQ' },\n  { text: 'Antigua and Barbuda', value: 'AG' },\n  { text: 'Argentina', value: 'AR' },\n  { text: 'Armenia', value: 'AM' },\n  { text: 'Aruba', value: 'AW' },\n  { text: 'Australia', value: 'AU' },\n  { text: 'Austria', value: 'AT' },\n  { text: 'Azerbaijan', value: 'AZ' },\n  { text: 'Bahamas', value: 'BS' },\n  { text: 'Bahrain', value: 'BH' },\n  { text: 'Bangladesh', value: 'BD' },\n  { text: 'Barbados', value: 'BB' },\n  { text: 'Belarus', value: 'BY' },\n  { text: 'Belgium', value: 'BE' },\n  { text: 'Belize', value: 'BZ' },\n  { text: 'Benin', value: 'BJ' },\n  { text: 'Bermuda', value: 'BM' },\n  { text: 'Bhutan', value: 'BT' },\n  { text: 'Bolivia', value: 'BO' },\n  { text: 'Bosnia and Herzegovina', value: 'BA' },\n  { text: 'Botswana', value: 'BW' },\n  { text: 'Bouvet Island', value: 'BV' },\n  { text: 'Brazil', value: 'BR' },\n  { text: 'British Indian Ocean Territory', value: 'IO' },\n  { text: 'Brunei Darussalam', value: 'BN' },\n  { text: 'Bulgaria', value: 'BG' },\n  { text: 'Burkina Faso', value: 'BF' },\n  { text: 'Burundi', value: 'BI' },\n  { text: 'Cambodia', value: 'KH' },\n  { text: 'Cameroon', value: 'CM' },\n  { text: 'Canada', value: 'CA' },\n  { text: 'Cape Verde', value: 'CV' },\n  { text: 'Cayman Islands', value: 'KY' },\n  { text: 'Central African Republic', value: 'CF' },\n  { text: 'Chad', value: 'TD' },\n  { text: 'Chile', value: 'CL' },\n  { text: 'China', value: 'CN' },\n  { text: 'Christmas Island', value: 'CX' },\n  { text: 'Cocos (Keeling) Islands', value: 'CC' },\n  { text: 'Colombia', value: 'CO' },\n  { text: 'Comoros', value: 'KM' },\n  { text: 'Congo', value: 'CG' },\n  { text: 'Congo, The Democratic Republic of the', value: 'CD' },\n  { text: 'Cook Islands', value: 'CK' },\n  { text: 'Costa Rica', value: 'CR' },\n  { text: 'Cote D\\'Ivoire', value: 'CI' },\n  { text: 'Croatia', value: 'HR' },\n  { text: 'Cuba', value: 'CU' },\n  { text: 'Cyprus', value: 'CY' },\n  { text: 'Czech Republic', value: 'CZ' },\n  { text: 'Denmark', value: 'DK' },\n  { text: 'Djibouti', value: 'DJ' },\n  { text: 'Dominica', value: 'DM' },\n  { text: 'Dominican Republic', value: 'DO' },\n  { text: 'Ecuador', value: 'EC' },\n  { text: 'Egypt', value: 'EG' },\n  { text: 'El Salvador', value: 'SV' },\n  { text: 'Equatorial Guinea', value: 'GQ' },\n  { text: 'Eritrea', value: 'ER' },\n  { text: 'Estonia', value: 'EE' },\n  { text: 'Ethiopia', value: 'ET' },\n  { text: 'Falkland Islands (Malvinas)', value: 'FK' },\n  { text: 'Faroe Islands', value: 'FO' },\n  { text: 'Fiji', value: 'FJ' },\n  { text: 'Finland', value: 'FI' },\n  { text: 'France', value: 'FR' },\n  { text: 'French Guiana', value: 'GF' },\n  { text: 'French Polynesia', value: 'PF' },\n  { text: 'French Southern Territories', value: 'TF' },\n  { text: 'Gabon', value: 'GA' },\n  { text: 'Gambia', value: 'GM' },\n  { text: 'Georgia', value: 'GE' },\n  { text: 'Germany', value: 'DE' },\n  { text: 'Ghana', value: 'GH' },\n  { text: 'Gibraltar', value: 'GI' },\n  { text: 'Greece', value: 'GR' },\n  { text: 'Greenland', value: 'GL' },\n  { text: 'Grenada', value: 'GD' },\n  { text: 'Guadeloupe', value: 'GP' },\n  { text: 'Guam', value: 'GU' },\n  { text: 'Guatemala', value: 'GT' },\n  { text: 'Guernsey', value: 'GG' },\n  { text: 'Guinea', value: 'GN' },\n  { text: 'Guinea-Bissau', value: 'GW' },\n  { text: 'Guyana', value: 'GY' },\n  { text: 'Haiti', value: 'HT' },\n  { text: 'Heard Island and Mcdonald Islands', value: 'HM' },\n  { text: 'Holy See (Vatican City State)', value: 'VA' },\n  { text: 'Honduras', value: 'HN' },\n  { text: 'Hong Kong', value: 'HK' },\n  { text: 'Hungary', value: 'HU' },\n  { text: 'Iceland', value: 'IS' },\n  { text: 'India', value: 'IN' },\n  { text: 'Indonesia', value: 'ID' },\n  { text: 'Iran, Islamic Republic Of', value: 'IR' },\n  { text: 'Iraq', value: 'IQ' },\n  { text: 'Ireland', value: 'IE' },\n  { text: 'Isle of Man', value: 'IM' },\n  { text: 'Israel', value: 'IL' },\n  { text: 'Italy', value: 'IT' },\n  { text: 'Jamaica', value: 'JM' },\n  { text: 'Japan', value: 'JP' },\n  { text: 'Jersey', value: 'JE' },\n  { text: 'Jordan', value: 'JO' },\n  { text: 'Kazakhstan', value: 'KZ' },\n  { text: 'Kenya', value: 'KE' },\n  { text: 'Kiribati', value: 'KI' },\n  { text: 'Korea, Democratic People\\'S Republic of', value: 'KP' },\n  { text: 'Korea, Republic of', value: 'KR' },\n  { text: 'Kuwait', value: 'KW' },\n  { text: 'Kyrgyzstan', value: 'KG' },\n  { text: 'Lao People\\'S Democratic Republic', value: 'LA' },\n  { text: 'Latvia', value: 'LV' },\n  { text: 'Lebanon', value: 'LB' },\n  { text: 'Lesotho', value: 'LS' },\n  { text: 'Liberia', value: 'LR' },\n  { text: 'Libyan Arab Jamahiriya', value: 'LY' },\n  { text: 'Liechtenstein', value: 'LI' },\n  { text: 'Lithuania', value: 'LT' },\n  { text: 'Luxembourg', value: 'LU' },\n  { text: 'Macao', value: 'MO' },\n  { text: 'Macedonia, The Former Yugoslav Republic of', value: 'MK' },\n  { text: 'Madagascar', value: 'MG' },\n  { text: 'Malawi', value: 'MW' },\n  { text: 'Malaysia', value: 'MY' },\n  { text: 'Maldives', value: 'MV' },\n  { text: 'Mali', value: 'ML' },\n  { text: 'Malta', value: 'MT' },\n  { text: 'Marshall Islands', value: 'MH' },\n  { text: 'Martinique', value: 'MQ' },\n  { text: 'Mauritania', value: 'MR' },\n  { text: 'Mauritius', value: 'MU' },\n  { text: 'Mayotte', value: 'YT' },\n  { text: 'Mexico', value: 'MX' },\n  { text: 'Micronesia, Federated States of', value: 'FM' },\n  { text: 'Moldova, Republic of', value: 'MD' },\n  { text: 'Monaco', value: 'MC' },\n  { text: 'Mongolia', value: 'MN' },\n  { text: 'Montserrat', value: 'MS' },\n  { text: 'Morocco', value: 'MA' },\n  { text: 'Mozambique', value: 'MZ' },\n  { text: 'Myanmar', value: 'MM' },\n  { text: 'Namibia', value: 'NA' },\n  { text: 'Nauru', value: 'NR' },\n  { text: 'Nepal', value: 'NP' },\n  { text: 'Netherlands', value: 'NL' },\n  { text: 'Netherlands Antilles', value: 'AN' },\n  { text: 'New Caledonia', value: 'NC' },\n  { text: 'New Zealand', value: 'NZ' },\n  { text: 'Nicaragua', value: 'NI' },\n  { text: 'Niger', value: 'NE' },\n  { text: 'Nigeria', value: 'NG' },\n  { text: 'Niue', value: 'NU' },\n  { text: 'Norfolk Island', value: 'NF' },\n  { text: 'Northern Mariana Islands', value: 'MP' },\n  { text: 'Norway', value: 'NO' },\n  { text: 'Oman', value: 'OM' },\n  { text: 'Pakistan', value: 'PK' },\n  { text: 'Palau', value: 'PW' },\n  { text: 'Palestinian Territory, Occupied', value: 'PS' },\n  { text: 'Panama', value: 'PA' },\n  { text: 'Papua New Guinea', value: 'PG' },\n  { text: 'Paraguay', value: 'PY' },\n  { text: 'Peru', value: 'PE' },\n  { text: 'Philippines', value: 'PH' },\n  { text: 'Pitcairn', value: 'PN' },\n  { text: 'Poland', value: 'PL' },\n  { text: 'Portugal', value: 'PT' },\n  { text: 'Puerto Rico', value: 'PR' },\n  { text: 'Qatar', value: 'QA' },\n  { text: 'Reunion', value: 'RE' },\n  { text: 'Romania', value: 'RO' },\n  { text: 'Russian Federation', value: 'RU' },\n  { text: 'RWANDA', value: 'RW' },\n  { text: 'Saint Helena', value: 'SH' },\n  { text: 'Saint Kitts and Nevis', value: 'KN' },\n  { text: 'Saint Lucia', value: 'LC' },\n  { text: 'Saint Pierre and Miquelon', value: 'PM' },\n  { text: 'Saint Vincent and the Grenadines', value: 'VC' },\n  { text: 'Samoa', value: 'WS' },\n  { text: 'San Marino', value: 'SM' },\n  { text: 'Sao Tome and Principe', value: 'ST' },\n  { text: 'Saudi Arabia', value: 'SA' },\n  { text: 'Senegal', value: 'SN' },\n  { text: 'Serbia and Montenegro', value: 'CS' },\n  { text: 'Seychelles', value: 'SC' },\n  { text: 'Sierra Leone', value: 'SL' },\n  { text: 'Singapore', value: 'SG' },\n  { text: 'Slovakia', value: 'SK' },\n  { text: 'Slovenia', value: 'SI' },\n  { text: 'Solomon Islands', value: 'SB' },\n  { text: 'Somalia', value: 'SO' },\n  { text: 'South Africa', value: 'ZA' },\n  { text: 'South Georgia and the South Sandwich Islands', value: 'GS' },\n  { text: 'Spain', value: 'ES' },\n  { text: 'Sri Lanka', value: 'LK' },\n  { text: 'Sudan', value: 'SD' },\n  { text: 'Suriname', value: 'SR' },\n  { text: 'Svalbard and Jan Mayen', value: 'SJ' },\n  { text: 'Swaziland', value: 'SZ' },\n  { text: 'Sweden', value: 'SE' },\n  { text: 'Switzerland', value: 'CH' },\n  { text: 'Syrian Arab Republic', value: 'SY' },\n  { text: 'Taiwan, Province of China', value: 'TW' },\n  { text: 'Tajikistan', value: 'TJ' },\n  { text: 'Tanzania, United Republic of', value: 'TZ' },\n  { text: 'Thailand', value: 'TH' },\n  { text: 'Timor-Leste', value: 'TL' },\n  { text: 'Togo', value: 'TG' },\n  { text: 'Tokelau', value: 'TK' },\n  { text: 'Tonga', value: 'TO' },\n  { text: 'Trinidad and Tobago', value: 'TT' },\n  { text: 'Tunisia', value: 'TN' },\n  { text: 'Turkey', value: 'TR' },\n  { text: 'Turkmenistan', value: 'TM' },\n  { text: 'Turks and Caicos Islands', value: 'TC' },\n  { text: 'Tuvalu', value: 'TV' },\n  { text: 'Uganda', value: 'UG' },\n  { text: 'Ukraine', value: 'UA' },\n  { text: 'United Arab Emirates', value: 'AE' },\n  { text: 'United Kingdom', value: 'GB' },\n  { text: 'United States', value: 'US' },\n  { text: 'United States Minor Outlying Islands', value: 'UM' },\n  { text: 'Uruguay', value: 'UY' },\n  { text: 'Uzbekistan', value: 'UZ' },\n  { text: 'Vanuatu', value: 'VU' },\n  { text: 'Venezuela', value: 'VE' },\n  { text: 'Viet Nam', value: 'VN' },\n  { text: 'Virgin Islands, British', value: 'VG' },\n  { text: 'Virgin Islands, U.S.', value: 'VI' },\n  { text: 'Wallis and Futuna', value: 'WF' },\n  { text: 'Western Sahara', value: 'EH' },\n  { text: 'Yemen', value: 'YE' },\n  { text: 'Zambia', value: 'ZM' },\n  { text: 'Zimbabwe', value: 'ZW' }\n];\n\nexport default countries;\n","import { Link as RouterLink } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { useSnackbar } from 'notistack';\nimport {\n  Autocomplete,\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  FormHelperText,\n  Grid,\n  Link,\n  Switch,\n  TextField,\n  Typography\n} from '@material-ui/core';\nimport useAuth from '../../../hooks/useAuth';\nimport wait from '../../../utils/wait';\nimport countries from './countries';\n\nconst AccountGeneralSettings = (props) => {\n  const { user } = useAuth();\n  const { enqueueSnackbar } = useSnackbar();\n\n  return (\n    <Grid\n      container\n      spacing={3}\n      {...props}\n    >\n      <Grid\n        item\n        lg={4}\n        md={6}\n        xl={3}\n        xs={12}\n      >\n        <Card>\n          <CardContent>\n            <Box\n              sx={{\n                alignItems: 'center',\n                display: 'flex',\n                flexDirection: 'column',\n                textAlign: 'center'\n              }}\n            >\n              <Box\n                sx={{\n                  p: 1,\n                  border: (theme) => `1px dashed ${theme.palette.divider}`,\n                  borderRadius: '50%'\n                }}\n              >\n                <Avatar\n                  src={user.avatar}\n                  sx={{\n                    height: 100,\n                    width: 100\n                  }}\n                />\n              </Box>\n              <Typography\n                color=\"textPrimary\"\n                sx={{ mt: 1 }}\n                variant=\"subtitle2\"\n              >\n                {user.name}\n              </Typography>\n              <Typography\n                color=\"textSecondary\"\n                variant=\"body2\"\n              >\n                Your plan:\n                {' '}\n                <Link\n                  color=\"primary\"\n                  component={RouterLink}\n                  to=\"/dashboard/account\"\n                >\n                  {user.plan}\n                </Link>\n              </Typography>\n            </Box>\n          </CardContent>\n          <CardActions>\n            <Button\n              color=\"primary\"\n              fullWidth\n              variant=\"text\"\n            >\n              Remove Picture\n            </Button>\n          </CardActions>\n        </Card>\n      </Grid>\n      <Grid\n        item\n        lg={8}\n        md={6}\n        xl={9}\n        xs={12}\n      >\n        <Formik\n          enableReinitialize\n          initialValues={{\n            canHire: user.canHire || false,\n            city: user.city || '',\n            country: user.country || '',\n            email: user.email || '',\n            isPublic: user.isPublic || false,\n            name: user.name || '',\n            phone: user.phone || '',\n            state: user.state || '',\n            submit: null\n          }}\n          validationSchema={Yup\n            .object()\n            .shape({\n              canHire: Yup.bool(),\n              city: Yup.string().max(255),\n              country: Yup.string().max(255),\n              email: Yup\n                .string()\n                .email('Must be a valid email')\n                .max(255)\n                .required('Email is required'),\n              isPublic: Yup.bool(),\n              name: Yup\n                .string()\n                .max(255)\n                .required('Name is required'),\n              phone: Yup.string(),\n              state: Yup.string()\n            })}\n          onSubmit={async (values, { resetForm, setErrors, setStatus, setSubmitting }) => {\n            try {\n              // NOTE: Make API request\n              await wait(200);\n              resetForm();\n              setStatus({ success: true });\n              setSubmitting(false);\n              enqueueSnackbar('Profile updated', {\n                anchorOrigin: {\n                  horizontal: 'right',\n                  vertical: 'top'\n                },\n                variant: 'success'\n              });\n            } catch (err) {\n              console.error(err);\n              setStatus({ success: false });\n              setErrors({ submit: err.message });\n              setSubmitting(false);\n            }\n          }}\n        >\n          {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n            <form onSubmit={handleSubmit}>\n              <Card>\n                <CardHeader title=\"Profile\" />\n                <Divider />\n                <CardContent>\n                  <Grid\n                    container\n                    spacing={4}\n                  >\n                    <Grid\n                      item\n                      md={6}\n                      xs={12}\n                    >\n                      <TextField\n                        error={Boolean(touched.name && errors.name)}\n                        fullWidth\n                        helperText={touched.name && errors.name}\n                        label=\"Name\"\n                        name=\"name\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.name}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                    <Grid\n                      item\n                      md={6}\n                      xs={12}\n                    >\n                      <TextField\n                        error={Boolean(touched.email && errors.email)}\n                        fullWidth\n                        helperText={touched.email && errors.email\n                          ? errors.email\n                          : 'We will use this email to contact you'}\n                        label=\"Email Address\"\n                        name=\"email\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        required\n                        type=\"email\"\n                        value={values.email}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                    <Grid\n                      item\n                      md={6}\n                      xs={12}\n                    >\n                      <TextField\n                        error={Boolean(touched.phone && errors.phone)}\n                        fullWidth\n                        helperText={touched.phone && errors.phone}\n                        label=\"Phone Number\"\n                        name=\"phone\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.phone}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                    <Grid\n                      item\n                      md={6}\n                      xs={12}\n                    >\n                      <Autocomplete\n                        getOptionLabel={(option) => option.text}\n                        options={countries}\n                        renderInput={(params) => (\n                          <TextField\n                            fullWidth\n                            label=\"Country\"\n                            name=\"country\"\n                            onChange={handleChange}\n                            variant=\"outlined\"\n                            {...params}\n                          />\n                        )}\n                      />\n                    </Grid>\n                    <Grid\n                      item\n                      md={6}\n                      xs={12}\n                    >\n                      <TextField\n                        error={Boolean(touched.state && errors.state)}\n                        fullWidth\n                        helperText={touched.state && errors.state}\n                        label=\"State/Region\"\n                        name=\"state\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.state}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                    <Grid\n                      item\n                      md={6}\n                      xs={12}\n                    >\n                      <TextField\n                        error={Boolean(touched.city && errors.city)}\n                        fullWidth\n                        helperText={touched.city && errors.city}\n                        label=\"City\"\n                        name=\"city\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.city}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                    <Grid\n                      item\n                      md={6}\n                      xs={12}\n                    >\n                      <Typography\n                        color=\"textPrimary\"\n                        gutterBottom\n                        variant=\"subtitle2\"\n                      >\n                        Public Profile\n                      </Typography>\n                      <Typography\n                        color=\"textSecondary\"\n                        variant=\"body2\"\n                      >\n                        Means that anyone viewing your profile will\n                        be able to see your contacts details\n                      </Typography>\n                      <Switch\n                        checked={values.isPublic}\n                        color=\"primary\"\n                        edge=\"start\"\n                        name=\"isPublic\"\n                        onChange={handleChange}\n                      />\n                    </Grid>\n                    <Grid\n                      item\n                      md={6}\n                      xs={12}\n                    >\n                      <Typography\n                        color=\"textPrimary\"\n                        gutterBottom\n                        variant=\"subtitle2\"\n                      >\n                        Available to hire\n                      </Typography>\n                      <Typography\n                        color=\"textSecondary\"\n                        variant=\"body2\"\n                      >\n                        Toggling this will let your teammates know\n                        that you are available for acquiring new\n                        projects\n                      </Typography>\n                      <Switch\n                        checked={values.canHire}\n                        color=\"primary\"\n                        edge=\"start\"\n                        name=\"canHire\"\n                        onChange={handleChange}\n                      />\n                    </Grid>\n                  </Grid>\n                  {errors.submit && (\n                    <Box sx={{ mt: 3 }}>\n                      <FormHelperText error>\n                        {errors.submit}\n                      </FormHelperText>\n                    </Box>\n                  )}\n                </CardContent>\n                <Divider />\n                <Box\n                  sx={{\n                    display: 'flex',\n                    justifyContent: 'flex-end',\n                    p: 2\n                  }}\n                >\n                  <Button\n                    color=\"primary\"\n                    disabled={isSubmitting}\n                    type=\"submit\"\n                    variant=\"contained\"\n                  >\n                    Save Changes\n                  </Button>\n                </Box>\n              </Card>\n            </form>\n          )}\n        </Formik>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default AccountGeneralSettings;\n","import { useSnackbar } from 'notistack';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  Divider,\n  FormControlLabel,\n  Grid,\n  Typography\n} from '@material-ui/core';\nimport wait from '../../../utils/wait';\n\nconst AccountNotificationsSettings = (props) => {\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    // NOTE: Make API request\n    await wait(500);\n    enqueueSnackbar('Changes saved', {\n      anchorOrigin: {\n        horizontal: 'right',\n        vertical: 'top'\n      },\n      variant: 'success'\n    });\n  };\n\n  return (\n    <form\n      onSubmit={handleSubmit}\n      {...props}\n    >\n      <Card>\n        <CardHeader title=\"Notifications\" />\n        <CardContent>\n          <Grid\n            container\n            spacing={6}\n            wrap=\"wrap\"\n          >\n            <Grid\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <Typography\n                color=\"textPrimary\"\n                gutterBottom\n                variant=\"subtitle2\"\n              >\n                System\n              </Typography>\n              <Typography\n                color=\"textSecondary\"\n                gutterBottom\n                variant=\"body2\"\n              >\n                You will receive emails in your business email address\n              </Typography>\n              <div>\n                <FormControlLabel\n                  control={(\n                    <Checkbox\n                      color=\"primary\"\n                      defaultChecked\n                    />\n                  )}\n                  label=\"Email alerts\"\n                />\n              </div>\n              <div>\n                <FormControlLabel\n                  control={<Checkbox color=\"primary\" />}\n                  label=\"Push Notifications\"\n                />\n              </div>\n              <div>\n                <FormControlLabel\n                  control={(\n                    <Checkbox\n                      color=\"primary\"\n                      defaultChecked\n                    />\n                  )}\n                  label=\"Text message\"\n                />\n              </div>\n              <div>\n                <FormControlLabel\n                  control={(\n                    <Checkbox\n                      color=\"primary\"\n                      defaultChecked\n                    />\n                  )}\n                  label={(\n                    <>\n                      <Typography\n                        color=\"textPrimary\"\n                        variant=\"body1\"\n                      >\n                        Phone calls\n                      </Typography>\n                      <Typography\n                        color=\"textSecondary\"\n                        variant=\"caption\"\n                      >\n                        Short voice phone updating you\n                      </Typography>\n                    </>\n                  )}\n                />\n              </div>\n            </Grid>\n            <Grid\n              item\n              md={4}\n              sm={6}\n              xs={12}\n            >\n              <Typography\n                color=\"textPrimary\"\n                gutterBottom\n                variant=\"subtitle2\"\n              >\n                Chat App\n              </Typography>\n              <Typography\n                color=\"textSecondary\"\n                gutterBottom\n                variant=\"body2\"\n              >\n                You will receive emails in your business email address\n              </Typography>\n              <div>\n                <FormControlLabel\n                  control={(\n                    <Checkbox\n                      color=\"primary\"\n                      defaultChecked\n                    />\n                  )}\n                  label=\"Email\"\n                />\n              </div>\n              <div>\n                <FormControlLabel\n                  control={(\n                    <Checkbox\n                      color=\"primary\"\n                      defaultChecked\n                    />\n                  )}\n                  label=\"Push notifications\"\n                />\n              </div>\n            </Grid>\n          </Grid>\n        </CardContent>\n        <Divider />\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'flex-end',\n            p: 2\n          }}\n        >\n          <Button\n            color=\"primary\"\n            type=\"submit\"\n            variant=\"contained\"\n          >\n            Save Settings\n          </Button>\n        </Box>\n      </Card>\n    </form>\n  );\n};\n\nexport default AccountNotificationsSettings;\n","import * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { useSnackbar } from 'notistack';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  FormHelperText,\n  Grid,\n  TextField\n} from '@material-ui/core';\nimport wait from '../../../utils/wait';\n\nconst AccountSecuritySettings = (props) => {\n  const { enqueueSnackbar } = useSnackbar();\n\n  return (\n    <Formik\n      initialValues={{\n        password: '',\n        passwordConfirm: '',\n        submit: null\n      }}\n      validationSchema={Yup\n        .object()\n        .shape({\n          password: Yup\n            .string()\n            .min(7, 'Must be at least 7 characters')\n            .max(255)\n            .required('Required'),\n          passwordConfirm: Yup\n            .string()\n            .oneOf([Yup.ref('password'), null], 'Passwords must match')\n            .required('Required')\n        })}\n      onSubmit={async (values, { resetForm, setErrors, setStatus, setSubmitting }) => {\n        try {\n          // NOTE: Make API request\n          await wait(500);\n          resetForm();\n          setStatus({ success: true });\n          setSubmitting(false);\n          enqueueSnackbar('Password updated', {\n            anchorOrigin: {\n              horizontal: 'right',\n              vertical: 'top'\n            },\n            variant: 'success'\n          });\n        } catch (err) {\n          console.error(err);\n          setStatus({ success: false });\n          setErrors({ submit: err.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n        <form\n          onSubmit={handleSubmit}\n          {...props}\n        >\n          <Card>\n            <CardHeader title=\"Change Password\" />\n            <Divider />\n            <CardContent>\n              <Grid\n                container\n                spacing={3}\n              >\n                <Grid\n                  item\n                  md={4}\n                  sm={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.password && errors.password)}\n                    fullWidth\n                    helperText={touched.password && errors.password}\n                    label=\"Password\"\n                    name=\"password\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    type=\"password\"\n                    value={values.password}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={4}\n                  sm={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.passwordConfirm && errors.passwordConfirm)}\n                    fullWidth\n                    helperText={touched.passwordConfirm && errors.passwordConfirm}\n                    label=\"Password Confirmation\"\n                    name=\"passwordConfirm\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    type=\"password\"\n                    value={values.passwordConfirm}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n              </Grid>\n              {errors.submit && (\n                <Box sx={{ mt: 3 }}>\n                  <FormHelperText error>\n                    {errors.submit}\n                  </FormHelperText>\n                </Box>\n              )}\n            </CardContent>\n            <Divider />\n            <Box\n              sx={{\n                display: 'flex',\n                justifyContent: 'flex-end',\n                p: 2\n              }}\n            >\n              <Button\n                color=\"primary\"\n                disabled={isSubmitting}\n                type=\"submit\"\n                variant=\"contained\"\n              >\n                Change Password\n              </Button>\n            </Box>\n          </Card>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nexport default AccountSecuritySettings;\n","import { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport {\n  Box,\n  Breadcrumbs,\n  Container,\n  Divider,\n  Grid,\n  Link,\n  Tab,\n  Tabs,\n  Typography\n} from '@material-ui/core';\nimport {\n  AccountBillingSettings,\n  AccountGeneralSettings,\n  AccountNotificationsSettings,\n  AccountSecuritySettings\n} from '../../components/dashboard/account';\nimport useSettings from '../../hooks/useSettings';\nimport ChevronRightIcon from '../../icons/ChevronRight';\nimport gtm from '../../lib/gtm';\n\nconst tabs = [\n  { label: 'General', value: 'general' },\n  { label: 'Billing', value: 'billing' },\n  { label: 'Notifications', value: 'notifications' },\n  { label: 'Security', value: 'security' }\n];\n\nconst Account = () => {\n  const { settings } = useSettings();\n  const [currentTab, setCurrentTab] = useState('general');\n\n  useEffect(() => {\n    gtm.push({ event: 'page_view' });\n  }, []);\n\n  const handleTabsChange = (event, value) => {\n    setCurrentTab(value);\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>Dashboard: Account | Material Kit Pro</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 8\n        }}\n      >\n        <Container maxWidth={settings.compact ? 'xl' : false}>\n          <Grid\n            container\n            justifyContent=\"space-between\"\n            spacing={3}\n          >\n            <Grid item>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"h5\"\n              >\n                Account\n              </Typography>\n              <Breadcrumbs\n                aria-label=\"breadcrumb\"\n                separator={<ChevronRightIcon fontSize=\"small\" />}\n                sx={{ mt: 1 }}\n              >\n                <Link\n                  color=\"textPrimary\"\n                  component={RouterLink}\n                  to=\"/dashboard\"\n                  variant=\"subtitle2\"\n                >\n                  Dashboard\n                </Link>\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"subtitle2\"\n                >\n                  Account\n                </Typography>\n              </Breadcrumbs>\n            </Grid>\n          </Grid>\n          <Box sx={{ mt: 3 }}>\n            <Tabs\n              indicatorColor=\"primary\"\n              onChange={handleTabsChange}\n              scrollButtons=\"auto\"\n              textColor=\"primary\"\n              value={currentTab}\n              variant=\"scrollable\"\n            >\n              {tabs.map((tab) => (\n                <Tab\n                  key={tab.value}\n                  label={tab.label}\n                  value={tab.value}\n                />\n              ))}\n            </Tabs>\n          </Box>\n          <Divider />\n          <Box sx={{ mt: 3 }}>\n            {currentTab === 'general' && <AccountGeneralSettings />}\n            {currentTab === 'billing' && <AccountBillingSettings />}\n            {currentTab === 'notifications' && <AccountNotificationsSettings />}\n            {currentTab === 'security' && <AccountSecuritySettings />}\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default Account;\n"],"sourceRoot":""}