{"version":3,"sources":["components/CircularProgress.js","components/widgets/grouped-lists/GroupedList1.js","components/widgets/grouped-lists/GroupedList2.js","components/widgets/grouped-lists/GroupedList3.js","components/widgets/grouped-lists/GroupedList4.js","components/widgets/grouped-lists/GroupedList5.js","components/widgets/grouped-lists/GroupedList6.js","components/widgets/grouped-lists/GroupedList7.js","components/widgets/grouped-lists/GroupedList8.js","components/widgets/grouped-lists/GroupedList9.js","components/widgets/grouped-lists/GroupedList10.js","components/widgets/grouped-lists/GroupedList11.js","pages/browse/BrowseGroupedLists.js","icons/ArrowRight.js","icons/DotsHorizontal.js","components/Label.js","icons/Download.js","icons/Moon.js","icons/Sun.js","components/WidgetPreviewer.js"],"names":["CircularProgressRoot","experimentalStyled","height","width","CircularProgressBackground","fill","stroke","theme","palette","mode","strokeWidth","CircularProgressValue","animation","primary","main","strokeDasharray","CircularProgress","props","value","other","viewBox","d","now","Date","activities","id","createdAt","subMinutes","getTime","customer","avatar","name","description","type","subHours","GroupedList1","Box","sx","backgroundColor","p","Container","maxWidth","Card","CardHeader","action","IconButton","DotsHorizontal","fontSize","title","Divider","display","flexGrow","borderRight","divider","Typography","align","color","variant","component","List","disablePadding","map","activity","i","ListItem","length","ListItemAvatar","Avatar","src","cursor","ListItemText","disableTypography","Link","underline","secondary","noWrap","formatDistanceToNowStrict","referrals","initials","GroupedList2","flexDirection","referral","fontWeight","primaryTypographyProps","numeral","format","tasks","deadline","addDays","addHours","members","getDeadline","task","deadlineDate","isAfter","differenceInDays","GroupedList3","Scrollbar","minWidth","AvatarGroup","max","member","Tooltip","notifications","message","iconsMap","invite","SendIcon","MailIcon","payout","CreditCardIcon","GroupedList4","notification","Icon","ListItemIcon","ListItemSecondaryAction","edge","ChevronRight","products","conversionRate","currency","image","profit","sales","GroupedList5","Table","TableBody","product","TableRow","hover","TableCell","alignItems","flexShrink","alt","ml","justifyContent","mr","Button","endIcon","ArrowRight","size","transactions","amount","date","sender","subDays","GroupedList6","transaction","border","toUpperCase","messages","content","senderAvatar","senderName","GroupedList7","minHeight","index","Badge","right","top","overflow","pr","textOverflow","whiteSpace","addSuffix","CardActions","job","GroupedList8","pb","titleTypographyProps","CardContent","pt","disableGutters","fullWidth","reviews","author","comment","GroupedList9","review","mt","subheader","flexWrap","Rating","readOnly","px","subject","GroupedList10","Download","campaigns","clickRate","platform","status","target","labelColorsMap","draft","active","stopped","GroupedList11","campaign","borderRadius","mx","Label","BrowseGroupedLists","useEffect","gtm","push","event","py","WidgetPreviewer","element","createSvgIcon","xmlns","fillRule","clipRule","LabelRoot","styleProps","contrastText","shape","fontFamily","typography","pxToRem","fontWeightMedium","letterSpacing","paddingBottom","spacing","paddingLeft","paddingRight","paddingTop","textTransform","children","Moon","Sun","settings","useSettings","useState","selectedTheme","setSelectedTheme","createTheme","mb","onClick","prevSelectedTheme","THEMES","LIGHT","DARK","ThemeProvider"],"mappings":"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","file":"static/js/46.cb8b0841.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { experimentalStyled } from '@material-ui/core/styles';\n\nconst CircularProgressRoot = experimentalStyled('div')({\n  height: 56,\n  width: 56\n});\n\nconst CircularProgressBackground = experimentalStyled('path')(({ theme }) => ({\n  fill: 'none',\n  stroke: theme.palette.mode === 'dark'\n    ? 'rgba(0,0,0,0.15)'\n    : 'rgba(0,0,0,0.05)',\n  strokeWidth: 4\n}));\n\nconst CircularProgressValue = experimentalStyled('path')(({ theme }) => ({\n  animation: '$progress 1s ease-out forwards',\n  fill: 'none',\n  stroke: theme.palette.primary.main,\n  strokeWidth: 4,\n  '@keyframes progress': {\n    '0%': {\n      strokeDasharray: '0 100'\n    }\n  }\n}));\n\nconst CircularProgress = (props) => {\n  const { value, ...other } = props;\n\n  return (\n    <CircularProgressRoot {...other}>\n      <svg viewBox=\"0 0 36 36\">\n        <CircularProgressBackground\n          d=\"M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831\"\n          strokeDasharray=\"100, 100\"\n        />\n        <CircularProgressValue\n          d=\"M18 2.0845 a 15.9155 15.9155 0 0 1 0 31.831 a 15.9155 15.9155 0 0 1 0 -31.831\"\n          strokeDasharray={`${value}, 100`}\n        />\n      </svg>\n    </CircularProgressRoot>\n  );\n};\n\nCircularProgress.propTypes = {\n  value: PropTypes.number.isRequired\n};\n\nexport default CircularProgress;\n","import { formatDistanceToNowStrict, subHours, subMinutes } from 'date-fns';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardHeader,\n  Container,\n  Divider,\n  IconButton,\n  Link,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Typography\n} from '@material-ui/core';\nimport DotsHorizontalIcon from '../../../icons/DotsHorizontal';\n\nconst now = new Date();\n\nconst activities = [\n  {\n    id: '5e89140bcc768199d1e0dc49',\n    createdAt: subMinutes(now, 23).getTime(),\n    customer: {\n      id: '5e887a62195cc5aef7e8ca5d',\n      avatar: '/static/mock-images/avatars/avatar-marcus_finn.png',\n      name: 'Marcus Finn'\n    },\n    description: 'Created account',\n    type: 'register'\n  },\n  {\n    id: '5e891411b0290b175166cd32',\n    createdAt: subMinutes(now, 56).getTime(),\n    customer: {\n      id: '5e887ac47eed253091be10cb',\n      avatar: '/static/mock-images/avatars/avatar-carson_darrin.png',\n      name: 'Carson Darrin'\n    },\n    description: 'Subscription Purchase',\n    type: 'payment'\n  },\n  {\n    id: '5e89141633dc5e52c923ef27',\n    createdAt: subHours(now, 2).getTime(),\n    customer: {\n      id: '5e887b209c28ac3dd97f6db5',\n      avatar: '/static/mock-images/avatars/avatar-fran_perez.png',\n      name: 'Fran Perez'\n    },\n    description: 'Submitted a ticket',\n    type: 'ticket_create'\n  },\n  {\n    id: '5e89141bd975c7f33aee9f4b',\n    createdAt: subMinutes(now, 5).getTime(),\n    customer: {\n      id: '5e887b7602bdbc4dbb234b27',\n      avatar: '/static/mock-images/avatars/avatar-jie_yan_song.png',\n      name: 'Jie Yan Song'\n    },\n    description: 'Subscription Purchase',\n    type: 'payment'\n  },\n  {\n    id: '5e891421d7945778863cf9ca',\n    createdAt: subMinutes(now, 5).getTime(),\n    customer: {\n      id: '5e86809283e28b96d2d38537',\n      avatar: '/static/mock-images/avatars/avatar-jane_rotanson.png',\n      name: 'Jane Rotanson'\n    },\n    description: 'Subscription Purchase',\n    type: 'payment'\n  }\n];\n\nconst GroupedList1 = () => (\n  <Box\n    sx={{\n      backgroundColor: 'background.default',\n      p: 3\n    }}\n  >\n    <Container maxWidth=\"sm\">\n      <Card>\n        <CardHeader\n          action={(\n            <IconButton>\n              <DotsHorizontalIcon fontSize=\"small\" />\n            </IconButton>\n          )}\n          title=\"Activity\"\n        />\n        <Divider />\n        <Box sx={{ display: 'flex' }}>\n          <Box\n            sx={{\n              p: 3,\n              flexGrow: 1,\n              '&:first-of-type': {\n                borderRight: (theme) => `1px solid ${theme.palette.divider}`\n              }\n            }}\n          >\n            <Typography\n              align=\"center\"\n              color=\"textPrimary\"\n              variant=\"h5\"\n            >\n              15,245\n            </Typography>\n            <Typography\n              align=\"center\"\n              color=\"textSecondary\"\n              component=\"h4\"\n              variant=\"overline\"\n            >\n              Registered\n            </Typography>\n          </Box>\n          <Box\n            sx={{\n              p: 3,\n              flexGrow: 1,\n              '&:first-of-type': {\n                borderRight: (theme) => `1px solid ${theme.palette.divider}`\n              }\n            }}\n          >\n            <Typography\n              align=\"center\"\n              color=\"textPrimary\"\n              variant=\"h5\"\n            >\n              357\n            </Typography>\n            <Typography\n              align=\"center\"\n              color=\"textSecondary\"\n              component=\"h4\"\n              variant=\"overline\"\n            >\n              Online\n            </Typography>\n          </Box>\n        </Box>\n        <Divider />\n        <List disablePadding>\n          {activities.map((activity, i) => (\n            <ListItem\n              divider={i < activities.length - 1}\n              key={activity.id}\n            >\n              <ListItemAvatar>\n                <Avatar\n                  src={activity.customer.avatar}\n                  sx={{ cursor: 'pointer' }}\n                />\n              </ListItemAvatar>\n              <ListItemText\n                disableTypography\n                primary={(\n                  <Link\n                    color=\"textPrimary\"\n                    sx={{ cursor: 'pointer' }}\n                    underline=\"none\"\n                    variant=\"subtitle2\"\n                  >\n                    {activity.customer.name}\n                  </Link>\n                )}\n                secondary={(\n                  <Typography\n                    color=\"textSecondary\"\n                    variant=\"body2\"\n                  >\n                    {activity.description}\n                  </Typography>\n                )}\n              />\n              <Typography\n                color=\"textSecondary\"\n                noWrap\n                variant=\"caption\"\n              >\n                {formatDistanceToNowStrict(activity.createdAt)}\n                {' '}\n                ago\n              </Typography>\n            </ListItem>\n          ))}\n        </List>\n      </Card>\n    </Container>\n  </Box>\n);\n\nexport default GroupedList1;\n","import numeral from 'numeral';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardHeader,\n  Container,\n  Divider,\n  IconButton,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Typography\n} from '@material-ui/core';\nimport DotsHorizontalIcon from '../../../icons/DotsHorizontal';\n\nconst referrals = [\n  {\n    color: '#455a64',\n    initials: 'GT',\n    name: 'GitHub',\n    value: 53032\n  },\n  {\n    color: '#00bcd4',\n    initials: 'TW',\n    name: 'Twitter',\n    value: 39551\n  },\n  {\n    color: '#3949ab',\n    initials: 'HN',\n    name: 'Hacker News',\n    value: 23150\n  },\n  {\n    color: '#f44336',\n    initials: 'SO',\n    name: 'Stack Overflow',\n    value: 14093\n  },\n  {\n    color: '#e65100',\n    initials: 'RD',\n    name: 'Reddit.com',\n    value: 7251\n  },\n  {\n    color: '#263238',\n    initials: 'DE',\n    name: 'Dev.to',\n    value: 5694\n  },\n  {\n    color: '#0d47a1',\n    initials: 'FB',\n    name: 'Facebook',\n    value: 3643\n  },\n  {\n    color: '#263238',\n    initials: 'MD',\n    name: 'Medium',\n    value: 1654\n  }\n];\n\nconst GroupedList2 = () => (\n  <Box\n    sx={{\n      backgroundColor: 'background.default',\n      p: 3\n    }}\n  >\n    <Container maxWidth=\"sm\">\n      <Card\n        sx={{\n          display: 'flex',\n          flexDirection: 'column'\n        }}\n      >\n        <CardHeader\n          action={(\n            <IconButton>\n              <DotsHorizontalIcon fontSize=\"small\" />\n            </IconButton>\n          )}\n          title=\"Top Referrals\"\n        />\n        <Divider />\n        <List disablePadding>\n          {referrals.map((referral, i) => (\n            <ListItem\n              divider={i < referrals.length - 1}\n              key={referral.name}\n            >\n              <ListItemAvatar>\n                <Avatar\n                  sx={{\n                    backgroundColor: referral.color,\n                    color: 'common.white',\n                    fontSize: 14,\n                    fontWeight: 600\n                  }}\n                >\n                  {referral.initials}\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText\n                primary={referral.name}\n                primaryTypographyProps={{\n                  color: 'textPrimary',\n                  variant: 'subtitle2'\n                }}\n              />\n              <Typography\n                color=\"textSecondary\"\n                variant=\"body2\"\n              >\n                {numeral(referral.value).format('0,0')}\n              </Typography>\n            </ListItem>\n          ))}\n        </List>\n      </Card>\n    </Container>\n  </Box>\n);\n\nexport default GroupedList2;\n","import { addDays, addHours, differenceInDays, isAfter } from 'date-fns';\nimport {\n  Avatar,\n  AvatarGroup,\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  IconButton,\n  Link,\n  List,\n  ListItem,\n  ListItemText,\n  Tooltip\n} from '@material-ui/core';\nimport Scrollbar from '../../Scrollbar';\nimport DotsHorizontalIcon from '../../../icons/DotsHorizontal';\n\nconst now = new Date();\n\nconst tasks = [\n  {\n    id: '5eff24b501ba5281ddb5378c',\n    deadline: addDays(addHours(now, 1), 1).getTime(),\n    members: [\n      {\n        avatar: '/static/mock-images/avatars/avatar-marcus_finn.png',\n        name: 'Marcus Finn'\n      },\n      {\n        avatar: '/static/mock-images/avatars/avatar-carson_darrin.png',\n        name: 'Carson Darrin'\n      }\n    ],\n    title: 'Update the API for the project'\n  },\n  {\n    id: '5eff24bb5bb3bd1beeddde78',\n    deadline: addDays(addHours(now, 1), 2).getTime(),\n    members: [\n      {\n        avatar: '/static/mock-images/avatars/avatar-penjani_inyene.png',\n        name: 'Penjani Inyene'\n      },\n      {\n        avatar: '/static/mock-images/avatars/avatar-jane_rotanson.png',\n        name: 'Jane Rotanson'\n      },\n      {\n        avatar: '/static/mock-images/avatars/avatar-nasimiyu_danai.png',\n        name: 'Nasimiyu Danai'\n      }\n    ],\n    title: 'Redesign the landing page'\n  },\n  {\n    id: '5eff24c019175119993fc1ff',\n    deadline: now.getTime(),\n    members: [\n      {\n        avatar: '/static/mock-images/avatars/avatar-miron_vitold.png',\n        name: 'Miron Vitold'\n      }\n    ],\n    title: 'Solve the bug for the showState'\n  },\n  {\n    id: '5eff24c52ce9fdadffa11959',\n    deadline: null,\n    members: [\n      {\n        avatar: '/static/mock-images/avatars/avatar-marcus_finn.png',\n        name: 'Marcus Finn'\n      },\n      {\n        avatar: '/static/mock-images/avatars/avatar-siegbert_gottfried.png',\n        name: 'Siegbert Gottfried'\n      }\n    ],\n    title: 'Release v1.0 Beta'\n  },\n  {\n    id: '5eff24ca3ffab939b667258b',\n    deadline: null,\n    members: [\n      {\n        avatar: '/static/mock-images/avatars/avatar-jie_yan_song.png',\n        name: 'Jie Yan Song'\n      },\n      {\n        avatar: '/static/mock-images/avatars/avatar-marcus_finn.png',\n        name: 'Marcus Finn'\n      },\n      {\n        avatar: '/static/mock-images/avatars/avatar-jane_rotanson.png',\n        name: 'Jane Rotanson'\n      }\n    ],\n    title: 'GDPR Compliance'\n  },\n  {\n    id: '5eff24cf8740fc9faca4e463',\n    deadline: null,\n    members: [\n      {\n        avatar: '/static/mock-images/avatars/avatar-penjani_inyene.png',\n        name: 'Penjani Inyene'\n      }\n    ],\n    title: 'Redesign Landing Page'\n  }\n];\n\nconst getDeadline = (task) => {\n  let deadline = '';\n\n  if (task.deadline) {\n    const deadlineDate = task.deadline;\n\n    if (isAfter(deadlineDate, now) && differenceInDays(deadlineDate, now) < 3) {\n      deadline = `${differenceInDays(deadlineDate, now)} days remaining`;\n    }\n  }\n\n  return deadline;\n};\n\nconst GroupedList3 = () => (\n  <Box\n    sx={{\n      backgroundColor: 'background.default',\n      p: 3\n    }}\n  >\n    <Card>\n      <CardHeader\n        action={(\n          <IconButton>\n            <DotsHorizontalIcon fontSize=\"small\" />\n          </IconButton>\n        )}\n        title=\"Team Tasks\"\n      />\n      <Divider />\n      <Scrollbar>\n        <Box sx={{ minWidth: 400 }}>\n          <List>\n            {tasks.map((task, i) => (\n              <ListItem\n                key={task.id}\n                divider={i < tasks.length - 1}\n              >\n                <ListItemText\n                  primary={(\n                    <Link\n                      color=\"textPrimary\"\n                      noWrap\n                      sx={{ cursor: 'pointer' }}\n                      variant=\"subtitle2\"\n                    >\n                      {task.title}\n                    </Link>\n                  )}\n                  secondary={getDeadline(task)}\n                />\n                <AvatarGroup max={3}>\n                  {task.members.map((member) => (\n                    <Tooltip\n                      key={member.name}\n                      title=\"View\"\n                    >\n                      <Avatar src={member.avatar} />\n                    </Tooltip>\n                  ))}\n                </AvatarGroup>\n              </ListItem>\n            ))}\n          </List>\n        </Box>\n      </Scrollbar>\n    </Card>\n  </Box>\n);\n\nexport default GroupedList3;\n","import {\n  Box,\n  Card,\n  IconButton,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemSecondaryAction,\n  ListItemText,\n  Tooltip,\n  Typography\n} from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\nimport CreditCardIcon from '../../../icons/CreditCard';\nimport MailIcon from '../../../icons/Mail';\nimport ChevronRightIcon from '../../../icons/ChevronRight';\n\nconst notifications = [\n  {\n    id: '5e8883a4f7877f898c408c27',\n    message: 'to send service quotes',\n    type: 'invite',\n    value: 6\n  },\n  {\n    id: '5e8883aa34190e0457a6e2b9',\n    message: 'from clients',\n    type: 'message',\n    value: 2\n  },\n  {\n    id: '5e8883af168cad3e1f4fe0ae',\n    message: 'that needs your confirmation',\n    type: 'payout',\n    value: 1\n  }\n];\n\nconst iconsMap = {\n  invite: SendIcon,\n  message: MailIcon,\n  payout: CreditCardIcon\n};\n\nconst GroupedList4 = () => (\n  <Box\n    sx={{\n      backgroundColor: 'background.default',\n      p: 3\n    }}\n  >\n    <Card>\n      <List>\n        {notifications.map((notification, i) => {\n          const Icon = iconsMap[notification.type];\n\n          return (\n            <ListItem\n              divider={i < notifications.length - 1}\n              key={notification.id}\n            >\n              <ListItemIcon>\n                <Icon fontSize=\"small\" />\n              </ListItemIcon>\n              <ListItemText>\n                <Typography\n                  color=\"textPrimary\"\n                  variant=\"subtitle2\"\n                >\n                  {`${notification.value} ${notification.type}s ${notification.message}`}\n                </Typography>\n              </ListItemText>\n              <ListItemSecondaryAction>\n                <Tooltip title=\"View\">\n                  <IconButton edge=\"end\">\n                    <ChevronRightIcon fontSize=\"small\" />\n                  </IconButton>\n                </Tooltip>\n              </ListItemSecondaryAction>\n            </ListItem>\n          );\n        })}\n      </List>\n    </Card>\n  </Box>\n);\n\nexport default GroupedList4;\n","import numeral from 'numeral';\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  IconButton,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  Typography\n} from '@material-ui/core';\nimport CircularProgress from '../../CircularProgress';\nimport Scrollbar from '../../Scrollbar';\nimport ArrowRightIcon from '../../../icons/ArrowRight';\nimport DotsHorizontalIcon from '../../../icons/DotsHorizontal';\n\nconst products = [\n  {\n    id: '5eff2512c6f8737d08325676',\n    conversionRate: 93,\n    currency: '$',\n    image: '/static/mock-images/products/product_1.jpeg',\n    name: 'Charlie Tulip Dress',\n    profit: 53500,\n    sales: 13153\n  },\n  {\n    id: '5eff2516247f9a6fcca9f151',\n    conversionRate: 76,\n    currency: '$',\n    image: '/static/mock-images/products/product_2.jpeg',\n    name: 'Kate Leopard Dress',\n    profit: 45763,\n    sales: 10300\n  },\n  {\n    id: '5eff251a3bb9ab7290640f18',\n    conversionRate: 60,\n    currency: '$',\n    image: '/static/mock-images/products/product_3.jpeg',\n    name: 'Lounge Puff Fabric Slipper',\n    profit: 28700,\n    sales: 5300\n  },\n  {\n    id: '5eff251e297fd17f0dc18a8b',\n    conversionRate: 46,\n    currency: '$',\n    image: '/static/mock-images/products/product_4.jpeg',\n    name: 'Flared Sleeve Floral Blouse',\n    profit: 20400,\n    sales: 1203\n  },\n  {\n    id: '5eff2524ef813f061b3ea39f',\n    conversionRate: 41,\n    currency: '$',\n    image: '/static/mock-images/products/product_5.jpeg',\n    name: 'Soft Wrap Top',\n    profit: 15200,\n    sales: 254\n  }\n];\n\nconst GroupedList5 = () => (\n  <Box\n    sx={{\n      backgroundColor: 'background.default',\n      p: 3\n    }}\n  >\n    <Card>\n      <CardHeader\n        action={(\n          <IconButton>\n            <DotsHorizontalIcon fontSize=\"small\" />\n          </IconButton>\n        )}\n        title=\"Profitable Products\"\n      />\n      <Scrollbar>\n        <Box sx={{ minWidth: 700 }}>\n          <Table>\n            <TableBody>\n              {products.map((product) => (\n                <TableRow\n                  hover\n                  key={product.id}\n                >\n                  <TableCell>\n                    <Box\n                      sx={{\n                        alignItems: 'center',\n                        display: 'flex',\n                        '& > img': {\n                          flexShrink: 0,\n                          height: 56,\n                          width: 56\n                        }\n                      }}\n                    >\n                      <img\n                        alt=\"Product\"\n                        src={product.image}\n                      />\n                      <Box sx={{ ml: 2 }}>\n                        <Typography\n                          color=\"textPrimary\"\n                          variant=\"subtitle2\"\n                        >\n                          {product.name}\n                        </Typography>\n                        <Typography\n                          color=\"textSecondary\"\n                          noWrap\n                          variant=\"body2\"\n                        >\n                          <Typography\n                            color=\"success.main\"\n                            component=\"span\"\n                            variant=\"subtitle2\"\n                          >\n                            {numeral(product.sales).format('0,0')}\n                          </Typography>\n                          {' '}\n                          Sales\n                        </Typography>\n                      </Box>\n                    </Box>\n                  </TableCell>\n                  <TableCell>\n                    <Typography\n                      color=\"textPrimary\"\n                      variant=\"subtitle2\"\n                    >\n                      Profit\n                    </Typography>\n                    <Typography\n                      color=\"textSecondary\"\n                      noWrap\n                      variant=\"body2\"\n                    >\n                      {numeral(product.profit)\n                        .format(`${product.currency}0,0.00`)}\n                    </Typography>\n                  </TableCell>\n                  <TableCell>\n                    <Box\n                      sx={{\n                        alignItems: 'center',\n                        display: 'flex',\n                        justifyContent: 'flex-end'\n                      }}\n                    >\n                      <Box sx={{ mr: 2 }}>\n                        <Typography\n                          align=\"right\"\n                          color=\"textPrimary\"\n                          variant=\"subtitle2\"\n                        >\n                          {product.conversionRate}\n                          %\n                        </Typography>\n                        <Typography\n                          color=\"textSecondary\"\n                          variant=\"body2\"\n                        >\n                          Conversion Rate\n                        </Typography>\n                      </Box>\n                      <CircularProgress value={product.conversionRate} />\n                    </Box>\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </Scrollbar>\n      <Box\n        sx={{\n          display: 'flex',\n          justifyContent: 'flex-end',\n          p: 2\n        }}\n      >\n        <Button\n          color=\"primary\"\n          endIcon={<ArrowRightIcon fontSize=\"small\" />}\n          size=\"small\"\n          sx={{ cursor: 'pointer' }}\n          variant=\"text\"\n        >\n          See All\n        </Button>\n      </Box>\n    </Card>\n  </Box>\n);\n\nexport default GroupedList5;\n","import { format, subDays } from 'date-fns';\nimport numeral from 'numeral';\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  Typography\n} from '@material-ui/core';\n\nconst transactions = [\n  {\n    id: 'd46800328cd510a668253b45',\n    amount: 25000,\n    currency: 'usd',\n    date: new Date(),\n    sender: 'Devias IO',\n    type: 'receive'\n  },\n  {\n    id: 'b4b19b21656e44b487441c50',\n    amount: 6843,\n    currency: 'usd',\n    date: subDays(new Date(), 1),\n    sender: 'Zimbru',\n    type: 'send'\n  },\n  {\n    id: '56c09ad91f6d44cb313397db',\n    amount: 91823,\n    currency: 'usd',\n    date: subDays(new Date(), 1),\n    sender: 'Vertical Jelly',\n    type: 'send'\n  },\n  {\n    id: 'aaeb96c5a131a55d9623f44d',\n    amount: 49550,\n    currency: 'usd',\n    date: subDays(new Date(), 3),\n    sender: 'Devias IO',\n    type: 'receive'\n  }\n];\n\nconst GroupedList6 = () => (\n  <Box\n    sx={{\n      backgroundColor: 'background.default',\n      p: 3\n    }}\n  >\n    <Card>\n      <CardHeader title=\"Latest Transactions\" />\n      <Table>\n        <TableBody>\n          {transactions.map((transaction) => (\n            <TableRow\n              key={transaction.id}\n              sx={{\n                '&:last-child td': {\n                  border: 0\n                }\n              }}\n            >\n              <TableCell width={100}>\n                <Box sx={{ p: 1 }}>\n                  <Typography\n                    align=\"center\"\n                    color=\"textSecondary\"\n                    variant=\"subtitle2\"\n                  >\n                    {format(transaction.date, 'LLL').toUpperCase()}\n                  </Typography>\n                  <Typography\n                    align=\"center\"\n                    color=\"textSecondary\"\n                    variant=\"h6\"\n                  >\n                    {format(transaction.date, 'd')}\n                  </Typography>\n                </Box>\n              </TableCell>\n              <TableCell>\n                <Box>\n                  <Typography\n                    color=\"textPrimary\"\n                    variant=\"subtitle2\"\n                  >\n                    {transaction.sender}\n                  </Typography>\n                  <Typography\n                    color=\"textSecondary\"\n                    variant=\"body2\"\n                  >\n                    {transaction.type === 'receive'\n                      ? 'Payment received'\n                      : 'Payment sent'}\n                  </Typography>\n                </Box>\n              </TableCell>\n              <TableCell align=\"right\">\n                <Typography\n                  color={transaction.type === 'receive'\n                    ? 'success.main'\n                    : 'error.main'}\n                  variant=\"subtitle2\"\n                >\n                  {transaction.type === 'receive' ? '+' : '-'}\n                  {' '}\n                  {numeral(transaction.amount).format('$0,0.00')}\n                </Typography>\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"body2\"\n                >\n                  {transaction.currency.toUpperCase()}\n                </Typography>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Card>\n  </Box>\n);\n\nexport default GroupedList6;\n","import { formatDistanceToNowStrict, subHours, subMinutes } from 'date-fns';\nimport {\n  Avatar,\n  Badge,\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardHeader,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Typography\n} from '@material-ui/core';\n\nconst messages = [\n  {\n    id: 'b91cbe81ee3efefba6b915a7',\n    content: 'Hello, we spoke earlier on the phone',\n    date: subMinutes(new Date(), 2),\n    senderAvatar: '/static/mock-images/avatars/avatar-alcides_antonio.png',\n    senderName: 'Alcides Antonio'\n  },\n  {\n    id: 'de0eb1ac517aae1aa57c0b7e',\n    content: 'Is the job still available?',\n    date: subMinutes(new Date(), 56),\n    senderAvatar: '/static/mock-images/avatars/avatar-marcus_finn.png',\n    senderName: 'Marcus Finn'\n  },\n  {\n    id: '38e2b0942c90d0ad724e6f40',\n    content: 'What is a screening task? I’d like to',\n    date: subHours(subMinutes(new Date(), 23), 3),\n    senderAvatar: '/static/mock-images/avatars/avatar-carson_darrin.png',\n    senderName: 'Carson Darrin'\n  },\n  {\n    id: '467505f3356f25a69f4c4890',\n    content: 'Still waiting for feedback',\n    date: subHours(subMinutes(new Date(), 6), 8),\n    senderAvatar: '/static/mock-images/avatars/avatar-fran_perez.png',\n    senderName: 'Fran Perez'\n  },\n  {\n    id: '7e6af808e801a8361ce4cf8b',\n    content: 'Need more information about current campaigns',\n    date: subHours(subMinutes(new Date(), 18), 10),\n    senderAvatar: '/static/mock-images/avatars/avatar-jie_yan_song.png',\n    senderName: 'Jie Yan Song'\n  }\n];\n\nconst GroupedList7 = () => (\n  <Box\n    sx={{\n      backgroundColor: 'background.default',\n      display: 'flex',\n      justifyContent: 'center',\n      minHeight: '100%',\n      p: 3\n    }}\n  >\n    <Card sx={{ maxWidth: 363 }}>\n      <CardHeader title=\"Inbox\" />\n      <List disablePadding>\n        {messages.map((message, index) => (\n          <Box key={message.id}>\n            <ListItem divider={index + 1 < messages.length}>\n              <ListItemAvatar>\n                <Avatar\n                  alt={message.senderName}\n                  src={message.senderAvatar}\n                />\n              </ListItemAvatar>\n              <ListItemText\n                disableTypography\n                primary={(index === 0\n                  ? (\n                    <Badge\n                      color=\"primary\"\n                      sx={{\n                        '.MuiBadge-badge': {\n                          right: -16,\n                          top: 11\n                        }\n                      }}\n                      variant=\"dot\"\n                    >\n                      <Typography\n                        color=\"textPrimary\"\n                        variant=\"subtitle2\"\n                      >\n                        {message.senderName}\n                      </Typography>\n                    </Badge>\n                  )\n                  : (\n                    <Typography\n                      color=\"textPrimary\"\n                      variant=\"subtitle2\"\n                    >\n                      {message.senderName}\n                    </Typography>\n                  ))}\n                secondary={(\n                  <Box\n                    sx={{\n                      alignItems: 'center',\n                      display: 'flex',\n                      justifyContent: 'space-between'\n                    }}\n                  >\n                    <Typography\n                      color=\"textSecondary\"\n                      sx={{\n                        overflow: 'hidden',\n                        pr: 2,\n                        textOverflow: 'ellipsis',\n                        whiteSpace: 'nowrap'\n                      }}\n                      variant=\"body2\"\n                    >\n                      {message.content}\n                    </Typography>\n                    <Typography\n                      color=\"textSecondary\"\n                      variant=\"caption\"\n                    >\n                      {`${formatDistanceToNowStrict(message.date, { addSuffix: true })}`}\n                    </Typography>\n                  </Box>\n                )}\n              />\n            </ListItem>\n          </Box>\n        ))}\n      </List>\n      <CardActions>\n        <Button\n          color=\"primary\"\n          variant=\"text\"\n        >\n          Go to chat\n        </Button>\n      </CardActions>\n    </Card>\n  </Box>\n);\n\nexport default GroupedList7;\n","import {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Container,\n  Divider,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Typography\n} from '@material-ui/core';\n\nconst members = [\n  {\n    id: '5e887a62195cc5aef7e8ca5d',\n    avatar: '/static/mock-images/avatars/avatar-marcus_finn.png',\n    job: 'Front End Developer',\n    name: 'Marcus Finn'\n  },\n  {\n    id: '5e887ac47eed253091be10cb',\n    avatar: '/static/mock-images/avatars/avatar-carson_darrin.png',\n    job: 'UX Designer',\n    name: 'Carson Darrin'\n  },\n  {\n    id: '5e887b7602bdbc4dbb234b27',\n    avatar: '/static/mock-images/avatars/avatar-jie_yan_song.png',\n    job: 'Copyright',\n    name: 'Jie Yan Song'\n  }\n];\n\nconst GroupedList8 = () => (\n  <Box\n    sx={{\n      backgroundColor: 'background.default',\n      minHeight: '100%',\n      p: 3\n    }}\n  >\n    <Container maxWidth=\"sm\">\n      <Card>\n        <CardHeader\n          sx={{ pb: 0 }}\n          title=\"Project members\"\n          titleTypographyProps={{ variant: 'overline' }}\n        />\n        <CardContent sx={{ pt: 0 }}>\n          <List>\n            {members.map((member) => (\n              <ListItem\n                disableGutters\n                key={member.id}\n              >\n                <ListItemAvatar>\n                  <Avatar src={member.avatar} />\n                </ListItemAvatar>\n                <ListItemText\n                  primary={(\n                    <Typography\n                      color=\"textPrimary\"\n                      variant=\"subtitle2\"\n                    >\n                      {member.name}\n                    </Typography>\n                  )}\n                  secondary={(\n                    <Typography\n                      color=\"textSecondary\"\n                      variant=\"body2\"\n                    >\n                      {member.job}\n                    </Typography>\n                  )}\n                />\n              </ListItem>\n            ))}\n          </List>\n        </CardContent>\n        <Divider />\n        <CardActions>\n          <Button\n            color=\"primary\"\n            fullWidth\n            variant=\"text\"\n          >\n            Manage members\n          </Button>\n        </CardActions>\n      </Card>\n    </Container>\n  </Box>\n);\n\nexport default GroupedList8;\n","import { formatDistanceToNowStrict, subHours } from 'date-fns';\nimport { Avatar, Box, Card, CardHeader, Link, Rating, Typography } from '@material-ui/core';\n\nconst now = new Date();\n\nconst reviews = [\n  {\n    id: '5f0366cd843161f193ebadd4',\n    author: {\n      avatar: '/static/mock-images/avatars/avatar-marcus_finn.png',\n      name: 'Marcus Finn'\n    },\n    comment: 'Great company, providing an awesome & easy to use product.',\n    createdAt: subHours(now, 2).getTime(),\n    value: 5\n  },\n  {\n    id: 'to33twsyjphcfj55y3t07261',\n    author: {\n      avatar: '/static/mock-images/avatars/avatar-miron_vitold.png',\n      name: 'Miron Vitold'\n    },\n    comment: 'Not the best people managers, poor management skills, poor career development programs. Communication from corporate & leadership isn\\'t always clear and is sometime one-sided. Low pay compared to FANG.',\n    createdAt: subHours(now, 2).getTime(),\n    value: 2\n  },\n  {\n    id: '6z9dwxjzkqbmxuluxx2681jd',\n    author: {\n      avatar: '/static/mock-images/avatars/avatar-carson_darrin.png',\n      name: 'Carson Darrin'\n    },\n    comment: 'I have been working with this company full-time. Great for the work life balance. Cons, decentralized decision making process across the organization.',\n    createdAt: subHours(now, 2).getTime(),\n    value: 4\n  }\n];\n\nconst GroupedList9 = () => (\n  <Box\n    sx={{\n      backgroundColor: 'background.default',\n      minHeight: '100%',\n      p: 3\n    }}\n  >\n    {reviews.map((review) => (\n      <Card\n        key={review.id}\n        sx={{\n          '& + &': {\n            mt: 2\n          }\n        }}\n      >\n        <CardHeader\n          avatar={<Avatar src={review.author.avatar} />}\n          disableTypography\n          subheader={(\n            <Box\n              sx={{\n                alignItems: 'center',\n                display: 'flex',\n                flexWrap: 'wrap',\n                mt: 1\n              }}\n            >\n              <Box\n                sx={{\n                  alignItems: 'center',\n                  display: 'flex',\n                  mr: 1\n                }}\n              >\n                <Rating\n                  readOnly\n                  value={5}\n                />\n                <Typography\n                  color=\"textPrimary\"\n                  sx={{ ml: 1 }}\n                  variant=\"subtitle2\"\n                >\n                  {review.value}\n                </Typography>\n              </Box>\n              <Typography\n                color=\"textSecondary\"\n                variant=\"body2\"\n              >\n                | For\n                {' '}\n                <Link\n                  color=\"textPrimary\"\n                  variant=\"subtitle2\"\n                >\n                  Low Budget\n                </Link>\n                {' '}\n                |\n                {' '}\n                {formatDistanceToNowStrict(review.createdAt)}\n                {' '}\n                ago\n              </Typography>\n            </Box>\n          )}\n          title={(\n            <Link\n              color=\"textPrimary\"\n              variant=\"subtitle2\"\n            >\n              {review.author.name}\n            </Link>\n          )}\n        />\n        <Box\n          sx={{\n            pb: 2,\n            px: 3\n          }}\n        >\n          <Typography\n            color=\"textSecondary\"\n            variant=\"body1\"\n          >\n            Great company, providing an awesome &amp; easy to use\n            product.\n          </Typography>\n        </Box>\n      </Card>\n    ))}\n  </Box>\n);\n\nexport default GroupedList9;\n","import { formatDistanceToNowStrict, subHours, subMinutes } from 'date-fns';\nimport { Avatar, Box, Card, Link, Typography } from '@material-ui/core';\nimport DownloadIcon from '../../../icons/Download';\n\nconst now = new Date();\n\nconst activities = [\n  {\n    id: '5e8dd0828d628e6f40abdfe8',\n    createdAt: subMinutes(now, 23).getTime(),\n    description: 'has uploaded a new file',\n    subject: 'Project author',\n    type: 'upload_file'\n  },\n  {\n    id: '5e8dd0893a6725f2bb603617',\n    createdAt: subHours(now, 2).getTime(),\n    description: 'joined team as a Front-End Developer',\n    subject: 'Adrian Stefan',\n    type: 'join_team'\n  },\n  {\n    id: '5e8dd08f44603e3300b75cf1',\n    createdAt: subHours(now, 9).getTime(),\n    description: 'joined team as a Full Stack Developer',\n    subject: 'Alexndru Robert',\n    type: 'join_team'\n  }\n];\n\nconst GroupedList10 = () => (\n  <Box\n    sx={{\n      backgroundColor: 'background.default',\n      minHeight: '100%',\n      p: 3\n    }}\n  >\n    {activities.map((activity) => (\n      <Card\n        key={activity.id}\n        sx={{\n          alignItems: 'center',\n          display: 'flex',\n          p: 2,\n          '& + &': {\n            mt: 2\n          }\n        }}\n      >\n        <Avatar\n          sx={{\n            backgroundColor: 'primary.main',\n            color: 'common.white'\n          }}\n        >\n          <DownloadIcon fontSize=\"small\" />\n        </Avatar>\n        <Typography\n          color=\"textPrimary\"\n          sx={{ ml: 2 }}\n          variant=\"body2\"\n        >\n          <Link\n            color=\"textPrimary\"\n            variant=\"subtitle2\"\n          >\n            {activity.subject}\n          </Link>\n          {' '}\n          {activity.description}\n        </Typography>\n        <Typography\n          color=\"textPrimary\"\n          sx={{ ml: 'auto' }}\n          variant=\"caption\"\n        >\n          {formatDistanceToNowStrict(activity.createdAt)}\n          {' '}\n          ago\n        </Typography>\n      </Card>\n    ))}\n  </Box>\n);\n\nexport default GroupedList10;\n","import {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  Typography\n} from '@material-ui/core';\nimport Label from '../../Label';\n\nconst campaigns = [\n  {\n    id: '4be0679f811115c9d2d28497',\n    clickRate: 6.32,\n    conversionRate: 1.05,\n    createdAt: 'Jan 23 2021',\n    name: 'Summer Active Health',\n    platform: 'Google',\n    status: 'draft',\n    target: 'Men Group'\n  },\n  {\n    id: '4e1cd375bfa59e4347404e20',\n    clickRate: 7.94,\n    conversionRate: 0.31,\n    createdAt: 'Feb 1 2021',\n    name: 'New prospects blog',\n    platform: 'Facebook',\n    status: 'active',\n    target: 'Woman Married Group'\n  },\n  {\n    id: '6b37fdf83195ca7e36622040',\n    clickRate: 20.15,\n    conversionRate: 2.1,\n    createdAt: 'Feb 5 2021',\n    name: 'Amazon Gift Cards',\n    platform: 'Facebook',\n    status: 'stopped',\n    target: 'Young Group'\n  },\n  {\n    id: 'e3651f8f9565cdbe8d2e5fea',\n    clickRate: 7.94,\n    conversionRate: 0.5,\n    createdAt: 'Feb 1 2021',\n    name: 'Best Marketing Course Online',\n    platform: 'Bing',\n    status: 'draft',\n    target: 'Young Group'\n  }\n];\n\nconst labelColorsMap = {\n  draft: 'secondary',\n  active: 'success',\n  stopped: 'error'\n};\n\nconst GroupedList11 = () => (\n  <Box\n    sx={{\n      backgroundColor: 'background.default',\n      minHeight: '100%',\n      p: 3\n    }}\n  >\n    <Card>\n      <CardHeader title=\"Campaigns Summary\" />\n      <Divider />\n      <Table>\n        <TableBody>\n          {campaigns.map((campaign) => (\n            <TableRow\n              key={campaign.id}\n              sx={{\n                '&:last-child td': {\n                  border: 0\n                }\n              }}\n            >\n              <TableCell>\n                <Typography\n                  color=\"textPrimary\"\n                  sx={{ cursor: 'pointer' }}\n                  variant=\"subtitle2\"\n                >\n                  {campaign.name}\n                </Typography>\n                <Box\n                  sx={{\n                    alignItems: 'center',\n                    display: 'flex',\n                    mt: 1\n                  }}\n                >\n                  <Typography\n                    color=\"textSecondary\"\n                    variant=\"body2\"\n                  >\n                    {campaign.platform}\n                  </Typography>\n                  <Box\n                    sx={{\n                      height: 4,\n                      width: 4,\n                      borderRadius: 4,\n                      backgroundColor: 'text.secondary',\n                      mx: 1\n                    }}\n                  />\n                  <Typography\n                    color=\"textSecondary\"\n                    variant=\"body2\"\n                  >\n                    {`${campaign.target}, ${campaign.createdAt}`}\n                  </Typography>\n                </Box>\n              </TableCell>\n              <TableCell>\n                <Label color={labelColorsMap[campaign.status]}>\n                  {campaign.status}\n                </Label>\n              </TableCell>\n              <TableCell>\n                <Typography\n                  color=\"textPrimary\"\n                  variant=\"subtitle2\"\n                >\n                  {campaign.clickRate}\n                  %\n                </Typography>\n                <Typography\n                  color=\"textSecondary\"\n                  sx={{ mt: 1 }}\n                  variant=\"body2\"\n                >\n                  Click Rate\n                </Typography>\n              </TableCell>\n              <TableCell>\n                <Typography\n                  color=\"textPrimary\"\n                  variant=\"subtitle2\"\n                >\n                  {campaign.conversionRate}\n                  %\n                </Typography>\n                <Typography\n                  color=\"textSecondary\"\n                  sx={{ mt: 1 }}\n                  variant=\"body2\"\n                >\n                  Conversions\n                </Typography>\n              </TableCell>\n              <TableCell align=\"right\">\n                <Button\n                  color=\"primary\"\n                  size=\"small\"\n                  variant=\"outlined\"\n                >\n                  View\n                </Button>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </Card>\n  </Box>\n);\n\nexport default GroupedList11;\n","import { useEffect } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Box, Container } from '@material-ui/core';\nimport GroupedList1 from '../../components/widgets/grouped-lists/GroupedList1';\nimport GroupedList2 from '../../components/widgets/grouped-lists/GroupedList2';\nimport GroupedList3 from '../../components/widgets/grouped-lists/GroupedList3';\nimport GroupedList4 from '../../components/widgets/grouped-lists/GroupedList4';\nimport GroupedList5 from '../../components/widgets/grouped-lists/GroupedList5';\nimport GroupedList6 from '../../components/widgets/grouped-lists/GroupedList6';\nimport GroupedList7 from '../../components/widgets/grouped-lists/GroupedList7';\nimport GroupedList8 from '../../components/widgets/grouped-lists/GroupedList8';\nimport GroupedList9 from '../../components/widgets/grouped-lists/GroupedList9';\nimport GroupedList10 from '../../components/widgets/grouped-lists/GroupedList10';\nimport GroupedList11 from '../../components/widgets/grouped-lists/GroupedList11';\nimport WidgetPreviewer from '../../components/WidgetPreviewer';\nimport gtm from '../../lib/gtm';\n\nconst BrowseGroupedLists = () => {\n  useEffect(() => {\n    gtm.push({ event: 'page_view' });\n  }, []);\n\n  return (\n    <>\n      <Helmet>\n        <title>Browse: Grouped Lists | Material Kit Pro</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.paper',\n          minHeight: '100%',\n          py: 8\n        }}\n      >\n        <Container maxWidth=\"lg\">\n          <Box>\n            <WidgetPreviewer\n              element={<GroupedList1 />}\n              name=\"List\"\n            />\n            <WidgetPreviewer\n              element={<GroupedList2 />}\n              name=\"Basic list\"\n            />\n            <WidgetPreviewer\n              element={<GroupedList3 />}\n              name=\"Basic list\"\n            />\n            <WidgetPreviewer\n              element={<GroupedList4 />}\n              name=\"Basic list\"\n            />\n            <WidgetPreviewer\n              element={<GroupedList5 />}\n              name=\"Multiline list with donut chart\"\n            />\n            <WidgetPreviewer\n              element={<GroupedList6 />}\n              name=\"Basic list\"\n            />\n            <WidgetPreviewer\n              element={<GroupedList7 />}\n              name=\"Basic list with side avatars\"\n            />\n            <WidgetPreviewer\n              element={<GroupedList8 />}\n              name=\"Basic list with side avatars\"\n            />\n            <WidgetPreviewer\n              element={<GroupedList9 />}\n              name=\"Multiline list with rating bar\"\n            />\n            <WidgetPreviewer\n              element={<GroupedList10 />}\n              name=\"Basic list with side icon\"\n            />\n            <WidgetPreviewer\n              element={<GroupedList11 />}\n              name=\"Basic multiline list\"\n            />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default BrowseGroupedLists;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst ArrowRight = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'ArrowRight'\n);\n\nexport default ArrowRight;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst DotsHorizontal = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M6 10a2 2 0 11-4 0 2 2 0 014 0zM12 10a2 2 0 11-4 0 2 2 0 014 0zM16 12a2 2 0 100-4 2 2 0 000 4z\" />\n  </svg>, 'DotsHorizontal'\n);\n\nexport default DotsHorizontal;\n","import PropTypes from 'prop-types';\nimport { experimentalStyled } from '@material-ui/core/styles';\n\nconst LabelRoot = experimentalStyled('span')((({ theme, styleProps }) => {\n  const backgroundColor = theme.palette[styleProps.color].main;\n  const color = theme.palette[styleProps.color].contrastText;\n\n  return {\n    alignItems: 'center',\n    backgroundColor,\n    borderRadius: theme.shape.borderRadius,\n    color,\n    cursor: 'default',\n    display: 'inline-flex',\n    flexGrow: 0,\n    flexShrink: 0,\n    fontFamily: theme.typography.fontFamily,\n    fontSize: theme.typography.pxToRem(11),\n    fontWeight: theme.typography.fontWeightMedium,\n    justifyContent: 'center',\n    letterSpacing: 0.5,\n    minWidth: 20,\n    paddingBottom: theme.spacing(0.5),\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    paddingTop: theme.spacing(0.5),\n    textTransform: 'uppercase',\n    whiteSpace: 'nowrap'\n  };\n}));\n\nconst Label = (props) => {\n  const { color = 'primary', children, ...other } = props;\n\n  const styleProps = { color };\n\n  return (\n    <LabelRoot\n      styleProps={styleProps}\n      {...other}\n    >\n      {children}\n    </LabelRoot>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  color: PropTypes.oneOf([\n    'primary',\n    'secondary',\n    'error',\n    'warning',\n    'success'\n  ])\n};\n\nexport default Label;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Download = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm3.293-7.707a1 1 0 011.414 0L9 10.586V3a1 1 0 112 0v7.586l1.293-1.293a1 1 0 111.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Download'\n);\n\nexport default Download;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Moon = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z\" />\n  </svg>, 'Moon'\n);\n\nexport default Moon;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Sun = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Sun'\n);\n\nexport default Sun;\n","import { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardHeader, Divider, IconButton, ThemeProvider } from '@material-ui/core';\nimport { THEMES } from '../constants';\nimport useSettings from '../hooks/useSettings';\nimport MoonIcon from '../icons/Moon';\nimport SunIcon from '../icons/Sun';\nimport { createTheme } from '../theme';\n\nconst WidgetPreviewer = (props) => {\n  const { element, name, ...other } = props;\n  const { settings } = useSettings();\n  const [selectedTheme, setSelectedTheme] = useState(settings.theme);\n\n  useEffect(() => {\n    setSelectedTheme(settings.theme);\n  }, [settings.theme]);\n\n  const handleSwitch = () => setSelectedTheme((prevSelectedTheme) => {\n    if (prevSelectedTheme === THEMES.LIGHT) {\n      if (settings.theme === THEMES.LIGHT) {\n        return THEMES.DARK;\n      }\n\n      return settings.theme;\n    }\n\n    return THEMES.LIGHT;\n  });\n\n  const theme = createTheme({\n    ...settings,\n    theme: selectedTheme\n  });\n\n  return (\n    <Card\n      variant=\"outlined\"\n      sx={{ mb: 8 }}\n      {...other}\n    >\n      <CardHeader\n        action={(\n          <IconButton onClick={handleSwitch}>\n            {selectedTheme === 'LIGHT'\n              ? <MoonIcon fontSize=\"small\" />\n              : <SunIcon fontSize=\"small\" />}\n          </IconButton>\n        )}\n        title={name}\n      />\n      <Divider />\n      <ThemeProvider theme={theme}>\n        {element}\n      </ThemeProvider>\n    </Card>\n  );\n};\n\nWidgetPreviewer.propTypes = {\n  element: PropTypes.node.isRequired,\n  name: PropTypes.string.isRequired\n};\n\nexport default WidgetPreviewer;\n"],"sourceRoot":""}