{"version":3,"sources":["icons/Eye.js","icons/EyeOff.js","components/dashboard/kanban/KanbanCardAction.js","components/dashboard/kanban/KanbanCheckItem.js","components/dashboard/kanban/KanbanCheckItemAdd.js","components/dashboard/kanban/KanbanChecklist.js","components/dashboard/kanban/KanbanComment.js","components/dashboard/kanban/KanbanCommentAdd.js","components/dashboard/kanban/KanbanCardModal.js","components/dashboard/kanban/KanbanCard.js","components/dashboard/kanban/KanbanCardAdd.js","components/dashboard/kanban/KanbanColumn.js","components/dashboard/kanban/KanbanColumnAdd.js","pages/dashboard/Kanban.js","icons/ArrowRight.js","icons/DotsHorizontal.js","icons/Duplicate.js","icons/Trash.js","icons/Archive.js","icons/DocumentText.js","icons/Check.js","icons/Template.js"],"names":["Eye","createSvgIcon","xmlns","viewBox","fill","d","fillRule","clipRule","EyeOff","KanbanCardAction","props","icon","children","other","Button","color","fullWidth","startIcon","sx","justifyContent","mt","variant","KanbanCheckItemRoot","experimentalStyled","theme","alignItems","borderRadius","shape","display","padding","spacing","backgroundColor","palette","background","default","visibility","KanbanCheckItem","cardId","checkItem","checklistId","editing","onEditCancel","onEditComplete","onEditInit","dispatch","useDispatch","enqueueSnackbar","useSnackbar","useState","name","setName","handleStateChange","event","a","state","target","checked","updateCheckItem","id","anchorOrigin","horizontal","vertical","console","error","message","handleSave","handleDelete","deleteCheckItem","Checkbox","onChange","ml","mr","Box","flexGrow","TextField","value","onClick","size","Typography","cursor","minHeight","IconButton","Trash","fontSize","defaultProps","KanbanCheckItemAdd","isExpanded","setIsExpanded","addCheckItem","placeholder","KanbanChecklistRoot","KanbanChecklist","card","checklist","editingName","setEditingName","editingCheckItem","setEditingCheckItem","handleNameSave","updateChecklist","deleteChecklist","handleCheckItemEditCancel","handleCheckItemEditComplete","totalCheckItems","checkItems","length","completedCheckItems","filter","completePercentage","ClipboardList","Math","round","LinearProgress","map","checkItemId","KanbanComment","createdAt","memberId","member","useSelector","kanban","members","byId","memberSelector","mb","Avatar","src","avatar","Paper","p","component","format","KanbanCommentAdd","user","useAuth","setMessage","handleKeyUp","code","addComment","onKeyUp","KanbanCardModal","onClose","column","open","handleDetailsUpdate","debounce","update","updateCard","handleSubscribe","isSubscribed","handleUnsubscribe","deleteCard","handleAddChecklist","addChecklist","Dialog","maxWidth","Grid","container","item","sm","xs","defaultValue","label","description","multiline","rows","checklists","comments","comment","fontWeight","Check","disabled","Users","DocumentText","ArrowRight","Duplicate","Template","Divider","my","Archive","KanbanCard","forwardRef","ref","dragging","cards","memberIds","cardSelector","setOpen","outline","py","Card","raised","cover","CardMedia","image","height","CardContent","attachments","ChatAlt","AvatarGroup","max","KanbanCardAdd","columnId","handleAddConfirm","createCard","KanbanColumn","moreRef","useRef","columns","columnSelector","openMenu","setOpenMenu","isRenaming","setIsRenaming","handleRenameInit","handleRename","updateColumn","deleteColumn","handleClear","clearColumn","flexDirection","maxHeight","mx","overflowX","overflowY","width","px","ClickAwayListener","onClickAway","margin","onBlur","edge","DotsHorizontal","droppableId","type","provided","innerRef","cardIds","index","draggableId","_provided","snapshot","isDragging","style","draggableProps","dragHandleProps","Menu","anchorEl","current","getContentAnchorEl","keepMounted","MenuItem","KanbanColumnAdd","createColumn","Kanban","useEffect","gtm","push","getBoard","handleDragEnd","source","destination","moveCard","overflow","Breadcrumbs","aria-label","separator","ChevronRight","Link","RouterLink","to","onDragEnd","flexShrink","allIds"],"mappings":"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","file":"static/js/38.401f29fa.chunk.js","sourcesContent":["import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Eye = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M10 12a2 2 0 100-4 2 2 0 000 4z\" />\n    <path\n      fillRule=\"evenodd\"\n      d=\"M.458 10C1.732 5.943 5.522 3 10 3s8.268 2.943 9.542 7c-1.274 4.057-5.064 7-9.542 7S1.732 14.057.458 10zM14 10a4 4 0 11-8 0 4 4 0 018 0z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Eye'\n);\n\nexport default Eye;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst EyeOff = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M3.707 2.293a1 1 0 00-1.414 1.414l14 14a1 1 0 001.414-1.414l-1.473-1.473A10.014 10.014 0 0019.542 10C18.268 5.943 14.478 3 10 3a9.958 9.958 0 00-4.512 1.074l-1.78-1.781zm4.261 4.26l1.514 1.515a2.003 2.003 0 012.45 2.45l1.514 1.514a4 4 0 00-5.478-5.478z\"\n      clipRule=\"evenodd\"\n    />\n    <path d=\"M12.454 16.697L9.75 13.992a4 4 0 01-3.742-3.741L2.335 6.578A9.98 9.98 0 00.458 10c1.274 4.057 5.065 7 9.542 7 .847 0 1.669-.105 2.454-.303z\" />\n  </svg>, 'EyeOff'\n);\n\nexport default EyeOff;\n","import PropTypes from 'prop-types';\nimport { Button } from '@material-ui/core';\n\nconst KanbanCardAction = (props) => {\n  const { icon, children, ...other } = props;\n\n  return (\n    <Button\n      color=\"primary\"\n      fullWidth\n      startIcon={icon}\n      sx={{\n        justifyContent: 'flex-start',\n        '& + &': {\n          mt: 2\n        }\n      }}\n      variant=\"contained\"\n      {...other}\n    >\n      {children}\n    </Button>\n  );\n};\n\nKanbanCardAction.propTypes = {\n  icon: PropTypes.element,\n  children: PropTypes.node\n};\n\nexport default KanbanCardAction;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport { Box, Button, Checkbox, IconButton, TextField, Typography } from '@material-ui/core';\nimport { experimentalStyled } from '@material-ui/core/styles';\nimport TrashIcon from '../../../icons/Trash';\nimport { deleteCheckItem, updateCheckItem } from '../../../slices/kanban';\nimport { useDispatch } from '../../../store';\n\nconst KanbanCheckItemRoot = experimentalStyled('div')(({ theme }) => ({\n  alignItems: 'flex-start',\n  borderRadius: theme.shape.borderRadius,\n  display: 'flex',\n  padding: theme.spacing(1),\n  '&:hover': {\n    backgroundColor: theme.palette.background.default,\n    '& button': {\n      visibility: 'visible'\n    }\n  }\n}));\n\nconst KanbanCheckItem = (props) => {\n  const {\n    cardId,\n    checkItem,\n    checklistId,\n    editing,\n    onEditCancel,\n    onEditComplete,\n    onEditInit,\n    ...other\n  } = props;\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const [name, setName] = useState(checkItem.name);\n\n  const handleStateChange = async (event) => {\n    try {\n      const state = event.target.checked ? 'complete' : 'incomplete';\n\n      await dispatch(updateCheckItem(cardId, checklistId, checkItem.id, { state }));\n      enqueueSnackbar('Check item updated', {\n        anchorOrigin: {\n          horizontal: 'right',\n          vertical: 'top'\n        },\n        variant: 'success'\n      });\n    } catch (err) {\n      console.error(err);\n      enqueueSnackbar(err.message, {\n        anchorOrigin: {\n          horizontal: 'right',\n          vertical: 'top'\n        },\n        variant: 'error'\n      });\n    }\n  };\n\n  const handleNameChange = (event) => {\n    setName(event.target.value);\n  };\n\n  const handleSave = async () => {\n    try {\n      await dispatch(updateCheckItem(cardId, checklistId, checkItem.id, { name }));\n      enqueueSnackbar('Check item updated', {\n        anchorOrigin: {\n          horizontal: 'right',\n          vertical: 'top'\n        },\n        variant: 'success'\n      });\n\n      if (onEditComplete) {\n        onEditComplete();\n      }\n    } catch (err) {\n      console.error(err);\n      enqueueSnackbar(err.message, {\n        anchorOrigin: {\n          horizontal: 'right',\n          vertical: 'top'\n        },\n        variant: 'error'\n      });\n    }\n  };\n\n  const handleCancel = () => {\n    setName(checkItem.name);\n\n    if (onEditCancel) {\n      onEditCancel();\n    }\n  };\n\n  const handleDelete = async () => {\n    try {\n      await dispatch(deleteCheckItem(cardId, checklistId, checkItem.id));\n      enqueueSnackbar('Check item deleted', {\n        anchorOrigin: {\n          horizontal: 'right',\n          vertical: 'top'\n        },\n        variant: 'success'\n      });\n    } catch (err) {\n      console.error(err);\n      enqueueSnackbar(err.message, {\n        anchorOrigin: {\n          horizontal: 'right',\n          vertical: 'top'\n        },\n        variant: 'error'\n      });\n    }\n  };\n\n  return (\n    <KanbanCheckItemRoot {...other}>\n      <Checkbox\n        checked={checkItem.state === 'complete'}\n        color=\"primary\"\n        onChange={handleStateChange}\n        sx={{\n          ml: -1,\n          mr: 1\n        }}\n      />\n      {editing\n        ? (\n          <Box sx={{ flexGrow: 1 }}>\n            <TextField\n              fullWidth\n              onChange={handleNameChange}\n              value={name}\n              variant=\"outlined\"\n            />\n            <Box sx={{ mt: 1 }}>\n              <Button\n                color=\"primary\"\n                onClick={handleSave}\n                size=\"small\"\n                variant=\"contained\"\n              >\n                Save\n              </Button>\n              <Button\n                color=\"primary\"\n                onClick={handleCancel}\n                size=\"small\"\n                variant=\"text\"\n              >\n                Cancel\n              </Button>\n            </Box>\n          </Box>\n        )\n        : (\n          <Box\n            sx={{\n              alignItems: 'center',\n              display: 'flex',\n              flexGrow: 1\n            }}\n          >\n            <Typography\n              color=\"textPrimary\"\n              onClick={onEditInit}\n              sx={{\n                flexGrow: 1,\n                cursor: 'pointer',\n                minHeight: 32\n              }}\n              variant=\"body1\"\n            >\n              {checkItem.name}\n            </Typography>\n            <IconButton\n              onClick={handleDelete}\n              sx={{ visibility: 'hidden' }}\n            >\n              <TrashIcon fontSize=\"small\" />\n            </IconButton>\n          </Box>\n        )}\n    </KanbanCheckItemRoot>\n  );\n};\n\nKanbanCheckItem.propTypes = {\n  cardId: PropTypes.string.isRequired,\n  // @ts-ignore\n  checkItem: PropTypes.object.isRequired,\n  checklistId: PropTypes.string.isRequired,\n  editing: PropTypes.bool,\n  onEditCancel: PropTypes.func,\n  onEditComplete: PropTypes.func,\n  onEditInit: PropTypes.func,\n  sx: PropTypes.object\n};\n\nKanbanCheckItem.defaultProps = {\n  editing: false\n};\n\nexport default KanbanCheckItem;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport { Box, Button, TextField } from '@material-ui/core';\nimport { addCheckItem } from '../../../slices/kanban';\nimport { useDispatch } from '../../../store';\n\nconst KanbanCheckItemAdd = (props) => {\n  const { cardId, checklistId, ...other } = props;\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const [name, setName] = useState('');\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  const handleAdd = () => {\n    setIsExpanded(true);\n  };\n\n  const handleCancel = () => {\n    setIsExpanded(false);\n    setName('');\n  };\n\n  const handleChange = (event) => {\n    setName(event.target.value);\n  };\n\n  const handleSave = async () => {\n    try {\n      if (!name) {\n        return;\n      }\n\n      await dispatch(addCheckItem(cardId, checklistId, name));\n      setIsExpanded(false);\n      setName('');\n      enqueueSnackbar('Check item added', {\n        anchorOrigin: {\n          horizontal: 'right',\n          vertical: 'top'\n        },\n        variant: 'success'\n      });\n    } catch (err) {\n      console.error(err);\n      enqueueSnackbar(err.message, {\n        anchorOrigin: {\n          horizontal: 'right',\n          vertical: 'top'\n        },\n        variant: 'error'\n      });\n    }\n  };\n\n  return (\n    <div {...other}>\n      {isExpanded\n        ? (\n          <div>\n            <TextField\n              fullWidth\n              onChange={handleChange}\n              placeholder=\"Add an item\"\n              value={name}\n              variant=\"outlined\"\n            />\n            <Box\n              sx={{\n                display: 'flex',\n                justifyContent: 'flex-end',\n                mt: 2\n              }}\n            >\n              <Button\n                color=\"primary\"\n                onClick={handleCancel}\n                size=\"small\"\n                variant=\"text\"\n              >\n                Cancel\n              </Button>\n              <Button\n                color=\"primary\"\n                onClick={handleSave}\n                size=\"small\"\n                sx={{ ml: 2 }}\n                variant=\"contained\"\n              >\n                Save\n              </Button>\n            </Box>\n          </div>\n        )\n        : (\n          <Button\n            color=\"primary\"\n            onClick={handleAdd}\n            size=\"small\"\n            variant=\"outlined\"\n          >\n            Add Item\n          </Button>\n        )}\n    </div>\n  );\n};\n\nKanbanCheckItemAdd.propTypes = {\n  cardId: PropTypes.string.isRequired,\n  checklistId: PropTypes.string.isRequired\n};\n\nexport default KanbanCheckItemAdd;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport { Box, Button, LinearProgress, TextField, Typography } from '@material-ui/core';\nimport { experimentalStyled } from '@material-ui/core/styles';\nimport ClipboardListIcon from '../../../icons/ClipboardList';\nimport { deleteChecklist, updateChecklist } from '../../../slices/kanban';\nimport { useDispatch } from '../../../store';\nimport KanbanCheckItem from './KanbanCheckItem';\nimport KanbanCheckItemAdd from './KanbanCheckItemAdd';\n\nconst KanbanChecklistRoot = experimentalStyled('div')();\n\nconst KanbanChecklist = (props) => {\n  const { card, checklist, ...other } = props;\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const [name, setName] = useState(checklist.name);\n  const [editingName, setEditingName] = useState(false);\n  const [editingCheckItem, setEditingCheckItem] = useState(null);\n\n  const handleNameEdit = () => {\n    setEditingName(true);\n  };\n\n  const handleNameChange = (event) => {\n    setName(event.target.value);\n  };\n\n  const handleNameSave = async () => {\n    try {\n      if (!name || name === checklist.name) {\n        setEditingName(false);\n        setName(checklist.name);\n        return;\n      }\n\n      setEditingName(false);\n      await dispatch(updateChecklist(card.id, checklist.id, { name }));\n      enqueueSnackbar('Checklist updated', {\n        anchorOrigin: {\n          horizontal: 'right',\n          vertical: 'top'\n        },\n        variant: 'success'\n      });\n    } catch (err) {\n      console.error(err);\n      enqueueSnackbar(err.message, {\n        anchorOrigin: {\n          horizontal: 'right',\n          vertical: 'top'\n        },\n        variant: 'error'\n      });\n    }\n  };\n\n  const handleNameCancel = () => {\n    setEditingName(false);\n    setName(checklist.name);\n  };\n\n  const handleDelete = async () => {\n    try {\n      await dispatch(deleteChecklist(card.id, checklist.id));\n      enqueueSnackbar('Checklist deleted', {\n        anchorOrigin: {\n          horizontal: 'right',\n          vertical: 'top'\n        },\n        variant: 'success'\n      });\n    } catch (err) {\n      console.error(err);\n      enqueueSnackbar(err.message, {\n        anchorOrigin: {\n          horizontal: 'right',\n          vertical: 'top'\n        },\n        variant: 'error'\n      });\n    }\n  };\n\n  const handleCheckItemEditInit = (checkItemId) => {\n    setEditingCheckItem(checkItemId);\n  };\n\n  const handleCheckItemEditCancel = () => {\n    setEditingCheckItem(null);\n  };\n\n  const handleCheckItemEditComplete = () => {\n    setEditingCheckItem(null);\n  };\n\n  const totalCheckItems = checklist.checkItems.length;\n  const completedCheckItems = (checklist\n    .checkItems\n    .filter((checkItem) => checkItem.state === 'complete')).length;\n  const completePercentage = totalCheckItems === 0\n    ? 100\n    : (completedCheckItems / totalCheckItems) * 100;\n\n  return (\n    <KanbanChecklistRoot {...other}>\n      <Box\n        sx={{\n          alignItems: 'center',\n          display: 'flex'\n        }}\n      >\n        <Box sx={{ mr: 3 }}>\n          <ClipboardListIcon fontSize=\"small\" />\n        </Box>\n        {editingName\n          ? (\n            <Box sx={{ flexGrow: 1 }}>\n              <TextField\n                fullWidth\n                onChange={handleNameChange}\n                value={name}\n                variant=\"outlined\"\n              />\n              <Box sx={{ mt: 1 }}>\n                <Button\n                  color=\"primary\"\n                  onClick={handleNameSave}\n                  size=\"small\"\n                  variant=\"contained\"\n                >\n                  Save\n                </Button>\n                <Button\n                  color=\"primary\"\n                  onClick={handleNameCancel}\n                  size=\"small\"\n                  variant=\"text\"\n                >\n                  Cancel\n                </Button>\n              </Box>\n            </Box>\n          )\n          : (\n            <Box\n              sx={{\n                alignItems: 'center',\n                display: 'flex',\n                flexGrow: 1\n              }}\n            >\n              <Typography\n                color=\"textPrimary\"\n                onClick={handleNameEdit}\n                variant=\"h6\"\n              >\n                {checklist.name}\n              </Typography>\n              <Box sx={{ flexGrow: 1 }} />\n              <Button\n                color=\"primary\"\n                onClick={handleDelete}\n                size=\"small\"\n                variant=\"text\"\n              >\n                Delete\n              </Button>\n            </Box>\n          )}\n      </Box>\n      <Box\n        sx={{\n          alignItems: 'center',\n          display: 'flex',\n          mt: 1\n        }}\n      >\n        <Typography\n          color=\"textSecondary\"\n          variant=\"caption\"\n        >\n          {Math.round(completePercentage)}\n          %\n        </Typography>\n        <Box\n          sx={{\n            flexGrow: 1,\n            ml: 2\n          }}\n        >\n          <LinearProgress\n            color=\"primary\"\n            value={completePercentage}\n            variant=\"determinate\"\n          />\n        </Box>\n      </Box>\n      {checklist.checkItems.map((checkItem) => (\n        <KanbanCheckItem\n          cardId={card.id}\n          checkItem={checkItem}\n          checklistId={checklist.id}\n          editing={editingCheckItem === checkItem.id}\n          key={checkItem.id}\n          onEditCancel={handleCheckItemEditCancel}\n          onEditComplete={handleCheckItemEditComplete}\n          onEditInit={() => handleCheckItemEditInit(checkItem.id)}\n        />\n      ))}\n      <Box\n        sx={{\n          ml: 6,\n          mt: 1\n        }}\n      >\n        <KanbanCheckItemAdd\n          cardId={card.id}\n          checklistId={checklist.id}\n        />\n      </Box>\n    </KanbanChecklistRoot>\n  );\n};\n\nKanbanChecklist.propTypes = {\n  // @ts-ignore\n  card: PropTypes.object.isRequired,\n  // @ts-ignore\n  checklist: PropTypes.object.isRequired,\n  sx: PropTypes.object\n};\n\nexport default KanbanChecklist;\n","import PropTypes from 'prop-types';\nimport { format } from 'date-fns';\nimport { Avatar, Box, Paper, Typography } from '@material-ui/core';\nimport { useSelector } from '../../../store';\n\nconst memberSelector = (state, memberId) => {\n  const { members } = state.kanban;\n\n  return members.byId[memberId];\n};\n\nconst KanbanComment = (props) => {\n  const { createdAt, memberId, message, ...other } = props;\n  const member = useSelector((state) => memberSelector(state, memberId));\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        mb: 2\n      }}\n      {...other}\n    >\n      <Avatar src={member.avatar} />\n      <Box\n        sx={{\n          ml: 2,\n          flexGrow: 1\n        }}\n      >\n        <Typography\n          color=\"textPrimary\"\n          variant=\"subtitle2\"\n        >\n          {member.name}\n        </Typography>\n        <Paper\n          sx={{\n            backgroundColor: 'background.default',\n            mt: 1,\n            p: 2\n          }}\n          variant=\"outlined\"\n        >\n          <Typography\n            color=\"textPrimary\"\n            variant=\"body2\"\n          >\n            {message}\n          </Typography>\n        </Paper>\n        <Typography\n          color=\"textSecondary\"\n          component=\"p\"\n          sx={{ mt: 1 }}\n          variant=\"caption\"\n        >\n          {format(createdAt, 'MMM dd, yyyy \\'at\\' hh:mm a')}\n        </Typography>\n      </Box>\n    </Box>\n  );\n};\n\nKanbanComment.propTypes = {\n  createdAt: PropTypes.number.isRequired,\n  memberId: PropTypes.string.isRequired,\n  message: PropTypes.string.isRequired\n};\n\nexport default KanbanComment;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport { Avatar, Box, TextField } from '@material-ui/core';\nimport useAuth from '../../../hooks/useAuth';\nimport { addComment } from '../../../slices/kanban';\nimport { useDispatch } from '../../../store';\n\nconst KanbanCommentAdd = (props) => {\n  const { cardId, ...other } = props;\n  const dispatch = useDispatch();\n  const { user } = useAuth();\n  const { enqueueSnackbar } = useSnackbar();\n  const [message, setMessage] = useState('');\n\n  const handleChange = (event) => {\n    setMessage(event.target.value);\n  };\n\n  const handleKeyUp = async (event) => {\n    try {\n      if (event.code === 'Enter' && message) {\n        await dispatch(addComment(cardId, message));\n        setMessage('');\n        enqueueSnackbar('Comment added', {\n          anchorOrigin: {\n            horizontal: 'right',\n            vertical: 'top'\n          },\n          variant: 'success'\n        });\n      }\n    } catch (err) {\n      console.error(err);\n      enqueueSnackbar(err.message, {\n        anchorOrigin: {\n          horizontal: 'right',\n          vertical: 'top'\n        },\n        variant: 'error'\n      });\n    }\n  };\n\n  return (\n    <Box\n      sx={{\n        alignItems: 'center',\n        display: 'flex'\n      }}\n      {...other}\n    >\n      <Avatar\n        src={user.avatar}\n        sx={{ mr: 2 }}\n      />\n      <TextField\n        fullWidth\n        onChange={handleChange}\n        onKeyUp={handleKeyUp}\n        placeholder=\"Write a comment...\"\n        size=\"small\"\n        value={message}\n        variant=\"outlined\"\n      />\n    </Box>\n  );\n};\n\nKanbanCommentAdd.propTypes = {\n  cardId: PropTypes.string.isRequired\n};\n\nexport default KanbanCommentAdd;\n","import PropTypes from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport debounce from 'lodash/debounce';\nimport { Box, Dialog, Divider, Grid, TextField, Typography } from '@material-ui/core';\nimport LabelIcon from '@material-ui/icons/Label';\nimport ArchiveIcon from '../../../icons/Archive';\nimport ArrowRightIcon from '../../../icons/ArrowRight';\nimport CheckIcon from '../../../icons/Check';\nimport DocumentTextIcon from '../../../icons/DocumentText';\nimport DuplicateIcon from '../../../icons/Duplicate';\nimport EyeIcon from '../../../icons/Eye';\nimport EyeOffIcon from '../../../icons/EyeOff';\nimport TemplateIcon from '../../../icons/Template';\nimport UsersIcon from '../../../icons/Users';\nimport { addChecklist, deleteCard, updateCard } from '../../../slices/kanban';\nimport { useDispatch } from '../../../store';\nimport KanbanCardAction from './KanbanCardAction';\nimport KanbanChecklist from './KanbanChecklist';\nimport KanbanComment from './KanbanComment';\nimport KanbanCommentAdd from './KanbanCommentAdd';\n\nconst KanbanCardModal = (props) => {\n  const { card, column, onClose, open, ...other } = props;\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleDetailsUpdate = debounce(async (update) => {\n    try {\n      await dispatch(updateCard(card.id, update));\n      enqueueSnackbar('Card updated', {\n        anchorOrigin: {\n          horizontal: 'right',\n          vertical: 'top'\n        },\n        variant: 'success'\n      });\n    } catch (err) {\n      console.error(err);\n      enqueueSnackbar(err.message, {\n        anchorOrigin: {\n          horizontal: 'right',\n          vertical: 'top'\n        },\n        variant: 'error'\n      });\n    }\n  }, 1000);\n\n  const handleSubscribe = async () => {\n    try {\n      await dispatch(updateCard(card.id, { isSubscribed: true }));\n      enqueueSnackbar('Unsubscribed', {\n        anchorOrigin: {\n          horizontal: 'right',\n          vertical: 'top'\n        },\n        variant: 'success'\n      });\n    } catch (err) {\n      console.error(err);\n      enqueueSnackbar(err.message, {\n        anchorOrigin: {\n          horizontal: 'right',\n          vertical: 'top'\n        },\n        variant: 'error'\n      });\n    }\n  };\n\n  const handleUnsubscribe = async () => {\n    try {\n      await dispatch(updateCard(card.id, { isSubscribed: false }));\n      enqueueSnackbar('Subscribed', {\n        anchorOrigin: {\n          horizontal: 'right',\n          vertical: 'top'\n        },\n        variant: 'success'\n      });\n    } catch (err) {\n      console.error(err);\n      enqueueSnackbar(err.message, {\n        anchorOrigin: {\n          horizontal: 'right',\n          vertical: 'top'\n        },\n        variant: 'error'\n      });\n    }\n  };\n\n  const handleDelete = async () => {\n    try {\n      await dispatch(deleteCard(card.id));\n      enqueueSnackbar('Card archived', {\n        anchorOrigin: {\n          horizontal: 'right',\n          vertical: 'top'\n        },\n        variant: 'success'\n      });\n    } catch (err) {\n      console.error(err);\n      enqueueSnackbar(err.message, {\n        anchorOrigin: {\n          horizontal: 'right',\n          vertical: 'top'\n        },\n        variant: 'error'\n      });\n    }\n  };\n\n  const handleAddChecklist = async () => {\n    try {\n      await dispatch(addChecklist(card.id, 'Untitled Checklist'));\n      enqueueSnackbar('Checklist added', {\n        anchorOrigin: {\n          horizontal: 'right',\n          vertical: 'top'\n        },\n        variant: 'success'\n      });\n    } catch (err) {\n      console.error(err);\n      enqueueSnackbar(err.message, {\n        anchorOrigin: {\n          horizontal: 'right',\n          vertical: 'top'\n        },\n        variant: 'error'\n      });\n    }\n  };\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth=\"md\"\n      onClose={onClose}\n      open={open}\n      {...other}\n    >\n      <Box sx={{ p: 3 }}>\n        <Grid\n          container\n          spacing={5}\n        >\n          <Grid\n            item\n            sm={8}\n            xs={12}\n          >\n            <TextField\n              defaultValue={card.name}\n              fullWidth\n              label=\"Title\"\n              onChange={(event) => handleDetailsUpdate({ name: event.target.value })}\n              variant=\"outlined\"\n            />\n            <Box sx={{ mt: 3 }}>\n              <TextField\n                defaultValue={card.description}\n                fullWidth\n                multiline\n                onChange={(event) => handleDetailsUpdate({ description: event.target.value })}\n                placeholder=\"Leave a message\"\n                label=\"Description\"\n                rows={6}\n                variant=\"outlined\"\n              />\n            </Box>\n            {card.checklists.length > 0 && (\n              <Box sx={{ mt: 5 }}>\n                {card.checklists.map((checklist) => (\n                  <KanbanChecklist\n                    card={card}\n                    checklist={checklist}\n                    key={checklist.id}\n                    sx={{ mb: 3 }}\n                  />\n                ))}\n              </Box>\n            )}\n            <Box sx={{ mt: 3 }}>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"h6\"\n              >\n                Activity\n              </Typography>\n              <Box sx={{ mt: 2 }}>\n                <KanbanCommentAdd cardId={card.id} />\n                {card.comments.length > 0 && (\n                  <Box sx={{ mt: 3 }}>\n                    {card.comments.map((comment) => (\n                      <KanbanComment\n                        createdAt={comment.createdAt}\n                        key={comment.id}\n                        memberId={comment.memberId}\n                        message={comment.message}\n                      />\n                    ))}\n                  </Box>\n                )}\n              </Box>\n            </Box>\n          </Grid>\n          <Grid\n            item\n            xs={12}\n            sm={4}\n          >\n            <Typography\n              color=\"textPrimary\"\n              component=\"h4\"\n              sx={{\n                fontWeight: 600,\n                mb: 2\n              }}\n              variant=\"overline\"\n            >\n              Add to card\n            </Typography>\n            <KanbanCardAction\n              icon={<CheckIcon fontSize=\"small\" />}\n              onClick={handleAddChecklist}\n            >\n              Checklist\n            </KanbanCardAction>\n            <KanbanCardAction\n              disabled\n              icon={<UsersIcon fontSize=\"small\" />}\n            >\n              Members\n            </KanbanCardAction>\n            <KanbanCardAction\n              disabled\n              icon={<LabelIcon fontSize=\"small\" />}\n            >\n              Labels\n            </KanbanCardAction>\n            <KanbanCardAction\n              disabled\n              icon={<DocumentTextIcon fontSize=\"small\" />}\n            >\n              Attachments\n            </KanbanCardAction>\n            <Box sx={{ mt: 3 }}>\n              <Typography\n                color=\"textPrimary\"\n                component=\"h4\"\n                sx={{\n                  fontWeight: 600,\n                  mb: 2\n                }}\n                variant=\"overline\"\n              >\n                Actions\n              </Typography>\n              <KanbanCardAction\n                disabled\n                icon={<ArrowRightIcon fontSize=\"small\" />}\n              >\n                Move\n              </KanbanCardAction>\n              <KanbanCardAction\n                disabled\n                icon={<DuplicateIcon fontSize=\"small\" />}\n              >\n                Copy\n              </KanbanCardAction>\n              <KanbanCardAction\n                disabled\n                icon={<TemplateIcon fontSize=\"small\" />}\n              >\n                Make Template\n              </KanbanCardAction>\n              <Divider sx={{ my: 2 }} />\n              {card.isSubscribed\n                ? (\n                  <KanbanCardAction\n                    icon={<EyeOffIcon fontSize=\"small\" />}\n                    onClick={handleUnsubscribe}\n                  >\n                    Unwatch\n                  </KanbanCardAction>\n                )\n                : (\n                  <KanbanCardAction\n                    icon={<EyeIcon fontSize=\"small\" />}\n                    onClick={handleSubscribe}\n                  >\n                    Watch\n                  </KanbanCardAction>\n                )}\n              <KanbanCardAction\n                icon={<ArchiveIcon fontSize=\"small\" />}\n                onClick={handleDelete}\n              >\n                Archive\n              </KanbanCardAction>\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    </Dialog>\n  );\n};\n\nKanbanCardModal.propTypes = {\n  // @ts-ignore\n  card: PropTypes.object.isRequired,\n  // @ts-ignore\n  column: PropTypes.object.isRequired,\n  onClose: PropTypes.func,\n  open: PropTypes.bool\n};\n\nKanbanCardModal.defaultProps = {\n  open: false\n};\n\nexport default KanbanCardModal;\n","import { forwardRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  AvatarGroup,\n  Box,\n  Card,\n  CardContent,\n  CardMedia,\n  Typography\n} from '@material-ui/core';\nimport CheckIcon from '../../../icons/Check';\nimport ChatAltIcon from '../../../icons/ChatAlt';\nimport DocumentTextIcon from '../../../icons/DocumentText';\nimport EyeIcon from '../../../icons/Eye';\nimport { useSelector } from '../../../store';\nimport KanbanCardModal from './KanbanCardModal';\n\nconst cardSelector = (state, cardId) => {\n  const { cards, members } = state.kanban;\n  const card = cards.byId[cardId];\n\n  return {\n    ...card,\n    members: card.memberIds.map((memberId) => members.byId[memberId])\n  };\n};\n\nconst KanbanCard = forwardRef((props, ref) => {\n  const { cardId, dragging, column, ...other } = props;\n  const card = useSelector((state) => cardSelector(state, cardId));\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Box\n      ref={ref}\n      sx={{\n        outline: 'none',\n        py: 1\n      }}\n      {...other}\n    >\n      <Card\n        onClick={handleOpen}\n        raised={dragging}\n        sx={{\n          ...(dragging && {\n            backgroundColor: 'background.paper'\n          }),\n          '&:hover': {\n            backgroundColor: 'background.default'\n          }\n        }}\n        variant={dragging ? 'elevation' : 'outlined'}\n      >\n        {card.cover && (\n          <CardMedia\n            image={card.cover}\n            sx={{ height: 200 }}\n          />\n        )}\n        <CardContent>\n          <Typography\n            color=\"textPrimary\"\n            variant=\"subtitle2\"\n          >\n            {card.name}\n          </Typography>\n          <Box\n            sx={{\n              alignItems: 'center',\n              display: 'flex',\n              mt: 2,\n              '& svg:not(:first-of-type)': {\n                ml: 2\n              }\n            }}\n          >\n            {card.isSubscribed && <EyeIcon fontSize=\"small\" />}\n            {card.attachments.length > 0\n            && <DocumentTextIcon fontSize=\"small\" />}\n            {card.checklists.length > 0 && <CheckIcon fontSize=\"small\" />}\n            {card.comments.length > 0 && <ChatAltIcon fontSize=\"small\" />}\n            <Box sx={{ flexGrow: 1 }} />\n            {card.members.length > 0 && (\n              <AvatarGroup max={5}>\n                {card.members.map((member) => (\n                  <Avatar\n                    key={member.id}\n                    src={member.avatar}\n                  />\n                ))}\n              </AvatarGroup>\n            )}\n          </Box>\n        </CardContent>\n      </Card>\n      <KanbanCardModal\n        card={card}\n        column={column}\n        onClose={handleClose}\n        open={open}\n      />\n    </Box>\n  );\n});\n\nKanbanCard.propTypes = {\n  cardId: PropTypes.string.isRequired,\n  dragging: PropTypes.bool,\n  index: PropTypes.number,\n  // @ts-ignore\n  column: PropTypes.object.isRequired,\n  style: PropTypes.object\n};\n\nKanbanCard.defaultProps = {\n  dragging: false\n};\n\nexport default KanbanCard;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport { Box, Button, TextField } from '@material-ui/core';\nimport { createCard } from '../../../slices/kanban';\nimport { useDispatch } from '../../../store';\n\nconst KanbanCardAdd = (props) => {\n  const { columnId, ...other } = props;\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [name, setName] = useState('');\n\n  const handleChange = (event) => {\n    setName(event.target.value);\n  };\n\n  const handleAddInit = () => {\n    setIsExpanded(true);\n  };\n\n  const handleAddCancel = () => {\n    setIsExpanded(false);\n    setName('');\n  };\n\n  const handleAddConfirm = async () => {\n    try {\n      await dispatch(createCard(columnId, name || 'Untitled Card'));\n      setIsExpanded(false);\n      setName('');\n      enqueueSnackbar('Card created', {\n        anchorOrigin: {\n          horizontal: 'right',\n          vertical: 'top'\n        },\n        variant: 'success'\n      });\n    } catch (err) {\n      console.error(err);\n      enqueueSnackbar(err.message, {\n        anchorOrigin: {\n          horizontal: 'right',\n          vertical: 'top'\n        },\n        variant: 'error'\n      });\n    }\n  };\n\n  return (\n    <div {...other}>\n      {isExpanded\n        ? (\n          <>\n            <TextField\n              fullWidth\n              label=\"Title\"\n              name=\"cardName\"\n              onChange={handleChange}\n              value={name}\n              variant=\"outlined\"\n            />\n            <Box\n              sx={{\n                display: 'flex',\n                justifyContent: 'space-between',\n                mt: 2\n              }}\n            >\n              <Button\n                color=\"primary\"\n                onClick={handleAddCancel}\n                variant=\"text\"\n              >\n                Cancel\n              </Button>\n              <Button\n                color=\"primary\"\n                onClick={handleAddConfirm}\n                variant=\"contained\"\n              >\n                Add\n              </Button>\n            </Box>\n          </>\n        )\n        : (\n          <Box\n            sx={{\n              display: 'flex',\n              justifyContent: 'center'\n            }}\n          >\n            <Button\n              color=\"primary\"\n              onClick={handleAddInit}\n              variant=\"text\"\n            >\n              Add Card\n            </Button>\n          </Box>\n        )}\n    </div>\n  );\n};\n\nKanbanCardAdd.propTypes = {\n  columnId: PropTypes.string.isRequired\n};\n\nexport default KanbanCardAdd;\n","import { useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSnackbar } from 'notistack';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport {\n  Box,\n  ClickAwayListener,\n  Divider,\n  IconButton,\n  Menu,\n  MenuItem,\n  Paper,\n  TextField,\n  Typography\n} from '@material-ui/core';\nimport DotsHorizontalIcon from '../../../icons/DotsHorizontal';\nimport { clearColumn, deleteColumn, updateColumn } from '../../../slices/kanban';\nimport { useDispatch, useSelector } from '../../../store';\nimport KanbanCard from './KanbanCard';\nimport KanbanCardAdd from './KanbanCardAdd';\n\nconst columnSelector = (state, columnId) => {\n  const { columns } = state.kanban;\n\n  return columns.byId[columnId];\n};\n\nconst KanbanColumn = (props) => {\n  const { columnId, ...other } = props;\n  const dispatch = useDispatch();\n  const moreRef = useRef(null);\n  const column = useSelector((state) => columnSelector(state, columnId));\n  const { enqueueSnackbar } = useSnackbar();\n  const [openMenu, setOpenMenu] = useState(false);\n  const [name, setName] = useState(column.name);\n  const [isRenaming, setIsRenaming] = useState(false);\n\n  const handleMenuOpen = () => {\n    setOpenMenu(true);\n  };\n\n  const handleMenuClose = () => {\n    setOpenMenu(false);\n  };\n\n  const handleChange = (event) => {\n    setName(event.target.value);\n  };\n\n  const handleRenameInit = () => {\n    setIsRenaming(true);\n    setOpenMenu(false);\n  };\n\n  const handleRename = async () => {\n    try {\n      if (!name) {\n        setName(column.name);\n        setIsRenaming(false);\n        return;\n      }\n\n      const update = { name };\n\n      setIsRenaming(false);\n      await dispatch(updateColumn(column.id, update));\n      enqueueSnackbar('Column updated', {\n        anchorOrigin: {\n          horizontal: 'right',\n          vertical: 'top'\n        },\n        variant: 'success'\n      });\n    } catch (err) {\n      console.error(err);\n      enqueueSnackbar(err.message, {\n        anchorOrigin: {\n          horizontal: 'right',\n          vertical: 'top'\n        },\n        variant: 'error'\n      });\n    }\n  };\n\n  const handleDelete = async () => {\n    try {\n      setOpenMenu(false);\n      await dispatch(deleteColumn(column.id));\n      enqueueSnackbar('Column deleted', {\n        anchorOrigin: {\n          horizontal: 'right',\n          vertical: 'top'\n        },\n        variant: 'success'\n      });\n    } catch (err) {\n      console.error(err);\n      enqueueSnackbar(err.message, {\n        anchorOrigin: {\n          horizontal: 'right',\n          vertical: 'top'\n        },\n        variant: 'error'\n      });\n    }\n  };\n\n  const handleClear = async () => {\n    try {\n      setOpenMenu(false);\n      await dispatch(clearColumn(column.id));\n      enqueueSnackbar('Column cleared', {\n        anchorOrigin: {\n          horizontal: 'right',\n          vertical: 'top'\n        },\n        variant: 'success'\n      });\n    } catch (err) {\n      console.error(err);\n      enqueueSnackbar(err.message, {\n        anchorOrigin: {\n          horizontal: 'right',\n          vertical: 'top'\n        },\n        variant: 'error'\n      });\n    }\n  };\n\n  return (\n    <div {...other}>\n      <Paper\n        sx={{\n          display: 'flex',\n          flexDirection: 'column',\n          maxHeight: '100%',\n          mx: 1,\n          overflowX: 'hidden',\n          overflowY: 'hidden',\n          width: {\n            xs: 300,\n            sm: 380\n          }\n        }}\n      >\n        <Box\n          sx={{\n            alignItems: 'center',\n            display: 'flex',\n            px: 2,\n            py: 1\n          }}\n        >\n          {isRenaming\n            ? (\n              <ClickAwayListener onClickAway={handleRename}>\n                <TextField\n                  margin=\"dense\"\n                  onBlur={handleRename}\n                  onChange={handleChange}\n                  value={name}\n                  variant=\"outlined\"\n                />\n              </ClickAwayListener>\n            )\n            : (\n              <Typography\n                color=\"inherit\"\n                onClick={handleRenameInit}\n                variant=\"h6\"\n              >\n                {column.name}\n              </Typography>\n            )}\n          <Box sx={{ flexGrow: 1 }} />\n          <IconButton\n            color=\"inherit\"\n            edge=\"end\"\n            onClick={handleMenuOpen}\n            ref={moreRef}\n          >\n            <DotsHorizontalIcon fontSize=\"small\" />\n          </IconButton>\n        </Box>\n        <Divider />\n        <Droppable\n          droppableId={column.id}\n          type=\"card\"\n        >\n          {(provided) => (\n            <Box\n              ref={provided.innerRef}\n              sx={{\n                flexGrow: 1,\n                minHeight: 80,\n                overflowY: 'auto',\n                px: 2,\n                py: 1\n              }}\n            >\n              {column.cardIds.map((cardId, index) => (\n                <Draggable\n                  draggableId={cardId}\n                  index={index}\n                  key={cardId}\n                >\n                  {(_provided, snapshot) => (\n                    <KanbanCard\n                      cardId={cardId}\n                      dragging={snapshot.isDragging}\n                      index={index}\n                      key={cardId}\n                      column={column}\n                      ref={_provided.innerRef}\n                      style={{ ..._provided.draggableProps.style }}\n                      {..._provided.draggableProps}\n                      {..._provided.dragHandleProps}\n                    />\n                  )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n            </Box>\n          )}\n        </Droppable>\n        <Divider />\n        <Box sx={{ p: 2 }}>\n          <KanbanCardAdd columnId={column.id} />\n        </Box>\n        <Menu\n          anchorEl={moreRef.current}\n          anchorOrigin={{\n            horizontal: 'center',\n            vertical: 'bottom'\n          }}\n          getContentAnchorEl={null}\n          keepMounted\n          onClose={handleMenuClose}\n          open={openMenu}\n        >\n          <MenuItem onClick={handleRenameInit}>\n            Rename\n          </MenuItem>\n          <MenuItem onClick={handleClear}>\n            Clear\n          </MenuItem>\n          <MenuItem onClick={handleDelete}>\n            Delete\n          </MenuItem>\n        </Menu>\n      </Paper>\n    </div>\n  );\n};\n\nKanbanColumn.propTypes = {\n  columnId: PropTypes.string.isRequired\n};\n\nexport default KanbanColumn;\n","import { useState } from 'react';\nimport { useSnackbar } from 'notistack';\nimport { Box, Button, Card, TextField } from '@material-ui/core';\nimport { createColumn } from '../../../slices/kanban';\nimport { useDispatch } from '../../../store';\n\nconst KanbanColumnAdd = (props) => {\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [name, setName] = useState('');\n\n  const handleChange = (event) => {\n    setName(event.target.value);\n  };\n\n  const handleAddInit = () => {\n    setIsExpanded(true);\n  };\n\n  const handleAddCancel = () => {\n    setIsExpanded(false);\n    setName('');\n  };\n\n  const handleAddConfirm = async () => {\n    try {\n      await dispatch(createColumn(name || 'Untitled column'));\n      setIsExpanded(false);\n      setName('');\n      enqueueSnackbar('Column created', {\n        anchorOrigin: {\n          horizontal: 'right',\n          vertical: 'top'\n        },\n        variant: 'success'\n      });\n    } catch (err) {\n      console.error(err);\n      enqueueSnackbar(err.message, {\n        anchorOrigin: {\n          horizontal: 'right',\n          vertical: 'top'\n        },\n        variant: 'error'\n      });\n    }\n  };\n\n  return (\n    <div {...props}>\n      <Card\n        sx={{\n          mx: 1,\n          width: {\n            sm: 380,\n            xs: 300\n          }\n        }}\n      >\n        <Box sx={{ p: 2 }}>\n          {isExpanded\n            ? (\n              <>\n                <TextField\n                  fullWidth\n                  label=\"Name\"\n                  name=\"listName\"\n                  onChange={handleChange}\n                  value={name}\n                  variant=\"outlined\"\n                />\n                <Box\n                  sx={{\n                    display: 'flex',\n                    justifyContent: 'space-between',\n                    mt: 2\n                  }}\n                >\n                  <Button\n                    color=\"primary\"\n                    onClick={handleAddCancel}\n                    variant=\"text\"\n                  >\n                    Cancel\n                  </Button>\n                  <Button\n                    color=\"primary\"\n                    onClick={handleAddConfirm}\n                    variant=\"contained\"\n                  >\n                    Add\n                  </Button>\n                </Box>\n              </>\n            )\n            : (\n              <Box\n                sx={{\n                  display: 'flex',\n                  justifyContent: 'center'\n                }}\n              >\n                <Button\n                  color=\"primary\"\n                  onClick={handleAddInit}\n                  variant=\"text\"\n                >\n                  Add Column\n                </Button>\n              </Box>\n            )}\n        </Box>\n      </Card>\n    </div>\n  );\n};\n\nexport default KanbanColumnAdd;\n","import { useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { useSnackbar } from 'notistack';\nimport { Box, Breadcrumbs, Link, Typography } from '@material-ui/core';\nimport { KanbanColumn, KanbanColumnAdd } from '../../components/dashboard/kanban';\nimport ChevronRightIcon from '../../icons/ChevronRight';\nimport gtm from '../../lib/gtm';\nimport { getBoard, moveCard } from '../../slices/kanban';\nimport { useDispatch, useSelector } from '../../store';\n\nconst Kanban = () => {\n  const dispatch = useDispatch();\n  const { columns } = useSelector((state) => state.kanban);\n  const { enqueueSnackbar } = useSnackbar();\n\n  useEffect(() => {\n    gtm.push({ event: 'page_view' });\n  }, []);\n\n  useEffect(() => {\n    dispatch(getBoard());\n  }, []);\n\n  const handleDragEnd = async ({ source, destination, draggableId }) => {\n    try {\n      // Dropped outside the column\n      if (!destination) {\n        return;\n      }\n\n      // Card has not been moved\n      if (source.droppableId === destination.droppableId\n        && source.index === destination.index) {\n        return;\n      }\n\n      if (source.droppableId === destination.droppableId) {\n        // Moved to the same column on different position\n        await dispatch(moveCard(draggableId, destination.index));\n      } else {\n        // Moved to another column\n        await dispatch(moveCard(draggableId, destination.index, destination.droppableId));\n      }\n\n      enqueueSnackbar('Card moved', {\n        anchorOrigin: {\n          horizontal: 'right',\n          vertical: 'top'\n        },\n        variant: 'success'\n      });\n    } catch (err) {\n      console.error(err);\n      enqueueSnackbar(err.message, {\n        anchorOrigin: {\n          horizontal: 'right',\n          vertical: 'top'\n        },\n        variant: 'error'\n      });\n    }\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>Dashboard: Kanban | Material Kit Pro</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          display: 'flex',\n          flexDirection: 'column',\n          height: '100%',\n          overflow: 'hidden'\n        }}\n      >\n        <Box sx={{ p: 3 }}>\n          <Typography\n            color=\"textPrimary\"\n            variant=\"h5\"\n          >\n            Kanban\n          </Typography>\n          <Breadcrumbs\n            aria-label=\"breadcrumb\"\n            separator={<ChevronRightIcon fontSize=\"small\" />}\n            sx={{ mt: 1 }}\n          >\n            <Link\n              color=\"textPrimary\"\n              component={RouterLink}\n              to=\"/dashboard\"\n              variant=\"subtitle2\"\n            >\n              Dashboard\n            </Link>\n            <Typography\n              color=\"textSecondary\"\n              variant=\"subtitle2\"\n            >\n              Kanban\n            </Typography>\n          </Breadcrumbs>\n        </Box>\n        <DragDropContext onDragEnd={handleDragEnd}>\n          <Box\n            sx={{\n              display: 'flex',\n              flexGrow: 1,\n              flexShrink: 1,\n              overflowX: 'auto',\n              overflowY: 'hidden'\n            }}\n          >\n            <Box\n              sx={{\n                display: 'flex',\n                px: 1,\n                py: 3\n              }}\n            >\n              {columns.allIds.map((columnId) => (\n                <KanbanColumn\n                  columnId={columnId}\n                  key={columnId}\n                />\n              ))}\n              <KanbanColumnAdd />\n            </Box>\n          </Box>\n        </DragDropContext>\n      </Box>\n    </>\n  );\n};\n\nexport default Kanban;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst ArrowRight = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'ArrowRight'\n);\n\nexport default ArrowRight;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst DotsHorizontal = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M6 10a2 2 0 11-4 0 2 2 0 014 0zM12 10a2 2 0 11-4 0 2 2 0 014 0zM16 12a2 2 0 100-4 2 2 0 000 4z\" />\n  </svg>, 'DotsHorizontal'\n);\n\nexport default DotsHorizontal;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Duplicate = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M7 9a2 2 0 012-2h6a2 2 0 012 2v6a2 2 0 01-2 2H9a2 2 0 01-2-2V9z\" />\n    <path d=\"M5 3a2 2 0 00-2 2v6a2 2 0 002 2V5h8a2 2 0 00-2-2H5z\" />\n  </svg>, 'Duplicate'\n);\n\nexport default Duplicate;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Trash = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Trash'\n);\n\nexport default Trash;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Archive = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M4 3a2 2 0 100 4h12a2 2 0 100-4H4z\" />\n    <path\n      fillRule=\"evenodd\"\n      d=\"M3 8h14v7a2 2 0 01-2 2H5a2 2 0 01-2-2V8zm5 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Archive'\n);\n\nexport default Archive;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst DocumentText = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'DocumentText'\n);\n\nexport default DocumentText;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Check = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Check'\n);\n\nexport default Check;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Template = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M3 4a1 1 0 011-1h12a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V4zM3 10a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H4a1 1 0 01-1-1v-6zM14 9a1 1 0 00-1 1v6a1 1 0 001 1h2a1 1 0 001-1v-6a1 1 0 00-1-1h-2z\" />\n  </svg>, 'Template'\n);\n\nexport default Template;\n"],"sourceRoot":""}