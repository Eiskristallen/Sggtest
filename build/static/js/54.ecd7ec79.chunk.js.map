{"version":3,"sources":["components/widgets/charts/Chart1.js","components/widgets/charts/Chart2.js","components/widgets/charts/Chart3.js","components/widgets/charts/Chart4.js","components/widgets/charts/Chart5.js","components/widgets/charts/Chart6.js","components/widgets/charts/Chart7.js","components/widgets/charts/Chart8.js","components/widgets/charts/Chart9.js","components/widgets/charts/Chart10.js","components/widgets/charts/Chart11.js","components/widgets/charts/Chart12.js","pages/browse/BrowseCharts.js","icons/ArrowRight.js","icons/DotsHorizontal.js","icons/Moon.js","icons/Sun.js","components/WidgetPreviewer.js","icons/InformationCircle.js"],"names":["Chart1","theme","useTheme","chart","options","background","toolbar","show","colors","dataLabels","enabled","grid","borderColor","palette","divider","yaxis","lines","legend","labels","text","secondary","plotOptions","bar","columnWidth","stroke","width","mode","tooltip","xaxis","axisBorder","color","axisTicks","categories","style","series","data","name","Box","sx","backgroundColor","p","Card","CardHeader","title","CardContent","type","height","Chart2","stacked","zoom","horizontalAlign","position","markers","hover","size","undefined","sizeOffset","radius","shape","strokeColors","strokeWidth","curve","dashArray","lineCap","opposite","Chart3","radialBar","primary","fontFamily","typography","value","hollow","track","default","Container","maxWidth","Typography","align","component","variant","Chart4","fill","gradient","opacityFrom","opacityTo","shadeIntensity","stops","strokeDashArray","offsetY","formatter","offsetX","action","IconButton","DotsHorizontal","fontSize","Divider","Scrollbar","minWidth","Chart5","isMountedRef","useIsMountedRef","useState","setData","getData","useCallback","current","prevData","newData","shift","push","setTimeout","min","max","random","Math","ceil","floor","pop","useEffect","setInterval","map","i","states","active","filter","disableTypography","alignItems","display","justifyContent","length","List","pathname","views","page","ListItem","ListItemText","primaryTypographyProps","Button","endIcon","ArrowRight","Chart6","alpha","px","dataPoints","Chart7","selectedSeries","setSelectedSeries","visibleSeries","item","includes","Tooltip","InformationCircle","flexWrap","mr","Checkbox","checked","some","visibleItem","onChange","event","target","handleChange","borderRadius","ml","Chart8","light","warning","success","info","blueGrey","Chart9","opacity","paper","label","Chart10","flexGrow","numeral","format","category","IncrementalSales","horizontal","barHeight","distributed","y","Chart12","subheader","Date","BrowseCharts","gtm","minHeight","py","mt","WidgetPreviewer","element","Chart11","createSvgIcon","xmlns","viewBox","fillRule","d","clipRule","Moon","Sun","props","other","settings","useSettings","selectedTheme","setSelectedTheme","createTheme","mb","onClick","prevSelectedTheme","THEMES","LIGHT","DARK","ThemeProvider"],"mappings":"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","file":"static/js/54.ecd7ec79.chunk.js","sourcesContent":["import Chart from 'react-apexcharts';\nimport { Box, Card, CardContent, CardHeader } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\n\nconst Chart1 = () => {\n  const theme = useTheme();\n\n  const chart = {\n    options: {\n      chart: {\n        background: 'transparent',\n        toolbar: {\n          show: false\n        }\n      },\n      colors: ['#13affe', '#fbab49'],\n      dataLabels: {\n        enabled: false\n      },\n      grid: {\n        borderColor: theme.palette.divider,\n        yaxis: {\n          lines: {\n            show: false\n          }\n        }\n      },\n      legend: {\n        labels: {\n          colors: theme.palette.text.secondary\n        },\n        show: true\n      },\n      plotOptions: {\n        bar: {\n          columnWidth: '40%'\n        }\n      },\n      stroke: {\n        colors: ['transparent'],\n        show: true,\n        width: 2\n      },\n      theme: {\n        mode: theme.palette.mode\n      },\n      tooltip: {\n        theme: theme.palette.mode\n      },\n      xaxis: {\n        axisBorder: {\n          show: true,\n          color: theme.palette.divider\n        },\n        axisTicks: {\n          show: true,\n          color: theme.palette.divider\n        },\n        categories: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n        labels: {\n          style: {\n            colors: theme.palette.text.secondary\n          }\n        }\n      },\n      yaxis: {\n        axisBorder: {\n          color: theme.palette.divider,\n          show: true\n        },\n        axisTicks: {\n          color: theme.palette.divider,\n          show: true\n        },\n        labels: {\n          style: {\n            colors: theme.palette.text.secondary\n          }\n        }\n      }\n    },\n    series: [\n      {\n        data: [30, 40, 25, 50, 49, 21, 70, 51],\n        name: 'This week'\n      },\n      {\n        data: [23, 12, 54, 61, 32, 56, 81, 19],\n        name: 'Last week'\n      }\n    ]\n  };\n\n  return (\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        p: 3\n      }}\n    >\n      <Card>\n        <CardHeader title=\"Sales\" />\n        <CardContent>\n          <Chart\n            type=\"bar\"\n            height={300}\n            {...chart}\n          />\n        </CardContent>\n      </Card>\n    </Box>\n  );\n};\n\nexport default Chart1;\n","import Chart from 'react-apexcharts';\nimport { Box, Card, CardContent, CardHeader } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\n\nconst Chart2 = () => {\n  const theme = useTheme();\n\n  const chart = {\n    options: {\n      chart: {\n        background: 'transparent',\n        stacked: false,\n        toolbar: {\n          show: false\n        },\n        zoom: false\n      },\n      colors: ['#1f87e6', '#ff5c7c'],\n      dataLabels: {\n        enabled: false\n      },\n      grid: {\n        borderColor: theme.palette.divider,\n        yaxis: {\n          lines: {\n            show: false\n          }\n        }\n      },\n      legend: {\n        horizontalAlign: 'right',\n        labels: {\n          colors: theme.palette.text.secondary\n        },\n        position: 'top',\n        show: true\n      },\n      markers: {\n        hover: {\n          size: undefined,\n          sizeOffset: 2\n        },\n        radius: 2,\n        shape: 'circle',\n        size: 4,\n        strokeColors: ['#1f87e6', '#27c6db'],\n        strokeWidth: 0\n      },\n      stroke: {\n        curve: 'smooth',\n        dashArray: [0, 3],\n        lineCap: 'butt',\n        width: 3\n      },\n      theme: {\n        mode: theme.palette.mode\n      },\n      tooltip: {\n        theme: theme.palette.mode\n      },\n      xaxis: {\n        axisBorder: {\n          color: theme.palette.divider\n        },\n        axisTicks: {\n          color: theme.palette.divider,\n          show: true\n        },\n        categories: [\n          '01 Jan',\n          '02 Jan',\n          '03 Jan',\n          '04 Jan',\n          '05 Jan',\n          '06 Jan',\n          '07 Jan',\n          '08 Jan',\n          '09 Jan',\n          '10 Jan',\n          '11 Jan',\n          '12 Jan'\n        ],\n        labels: {\n          style: {\n            colors: theme.palette.text.secondary\n          }\n        }\n      },\n      yaxis: [\n        {\n          axisBorder: {\n            color: theme.palette.divider,\n            show: true\n          },\n          axisTicks: {\n            color: theme.palette.divider,\n            show: true\n          },\n          labels: {\n            style: {\n              colors: theme.palette.text.secondary\n            }\n          }\n        },\n        {\n          axisTicks: {\n            color: theme.palette.divider,\n            show: true\n          },\n          axisBorder: {\n            color: theme.palette.divider,\n            show: true\n          },\n          labels: {\n            style: {\n              colors: theme.palette.text.secondary\n            }\n          },\n          opposite: true\n        }\n      ]\n    },\n    series: [\n      {\n        data: [\n          3350,\n          1840,\n          2254,\n          5780,\n          9349,\n          5241,\n          2770,\n          2051,\n          3764,\n          2385,\n          5912,\n          8323\n        ],\n        name: 'Page Views'\n      },\n      {\n        data: [35, 41, 62, 42, 13, 18, 29, 37, 36, 51, 32, 35],\n        name: 'Session Duration'\n      }\n    ]\n  };\n\n  return (\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        p: 3\n      }}\n    >\n      <Card>\n        <CardHeader title=\"Widget25\" />\n        <CardContent>\n          <Chart\n            height=\"300\"\n            type=\"line\"\n            {...chart}\n          />\n        </CardContent>\n      </Card>\n    </Box>\n  );\n};\n\nexport default Chart2;\n","import Chart from 'react-apexcharts';\nimport { Box, Card, CardContent, Container, Typography } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\n\nconst Chart3 = () => {\n  const theme = useTheme();\n\n  const chart = {\n    options: {\n      chart: {\n        background: 'transparent',\n        stacked: false,\n        toolbar: {\n          show: false\n        },\n        zoom: false\n      },\n      colors: ['#27c6db'],\n      labels: ['System Health'],\n      plotOptions: {\n        radialBar: {\n          dataLabels: {\n            name: {\n              color: theme.palette.text.primary,\n              fontFamily: theme.typography.fontFamily\n            },\n            value: {\n              color: theme.palette.text.secondary\n            }\n          },\n          hollow: {\n            size: '60%'\n          },\n          track: {\n            background: theme.palette.background.default\n          }\n        }\n      },\n      theme: {\n        mode: theme.palette.mode\n      }\n    },\n    series: [83]\n  };\n\n  return (\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        p: 3\n      }}\n    >\n      <Container maxWidth=\"sm\">\n        <Card>\n          <CardContent>\n            <Chart\n              height=\"300\"\n              type=\"radialBar\"\n              {...chart}\n            />\n            <Typography\n              align=\"center\"\n              color=\"textSecondary\"\n              component=\"p\"\n              variant=\"caption\"\n            >\n              This shouldn&apos;t be bellow 80%\n            </Typography>\n          </CardContent>\n        </Card>\n      </Container>\n    </Box>\n  );\n};\n\nexport default Chart3;\n","import Chart from 'react-apexcharts';\nimport { Box, Card, CardContent, CardHeader, Divider, IconButton } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport Scrollbar from '../../Scrollbar';\nimport DotsHorizontalIcon from '../../../icons/DotsHorizontal';\n\nconst data = {\n  series: [\n    {\n      data: [10, 5, 11, 20, 13, 28, 18, 4, 13, 12, 13, 5]\n    }\n  ],\n  categories: [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'Jun',\n    'Jul',\n    'Aug',\n    'Sep',\n    'Oct',\n    'Nov',\n    'Dec'\n  ]\n};\n\nconst Chart4 = () => {\n  const theme = useTheme();\n\n  const chart = {\n    options: {\n      markers: {\n        size: 6,\n        strokeColors: theme.palette.background.default,\n        strokeWidth: 3\n      },\n      chart: {\n        background: 'transparent',\n        stacked: false,\n        toolbar: {\n          show: false\n        },\n        zoom: false\n      },\n      colors: ['#00ab57'],\n      dataLabels: {\n        enabled: false\n      },\n      fill: {\n        gradient: {\n          opacityFrom: 0.4,\n          opacityTo: 0.1,\n          shadeIntensity: 1,\n          stops: [0, 100],\n          type: 'vertical'\n        },\n        type: 'gradient'\n      },\n      grid: {\n        borderColor: theme.palette.divider,\n        strokeDashArray: 2\n      },\n      stroke: {\n        curve: 'smooth'\n      },\n      theme: {\n        mode: theme.palette.mode\n      },\n      tooltip: {\n        mode: theme.palette.mode\n      },\n      xaxis: {\n        axisBorder: {\n          color: theme.palette.divider,\n          show: true\n        },\n        axisTicks: {\n          color: theme.palette.divider,\n          show: true\n        },\n        categories: data.categories,\n        labels: {\n          offsetY: 5,\n          style: {\n            colors: theme.palette.text.secondary\n          }\n        }\n      },\n      yaxis: {\n        labels: {\n          formatter: (value) => (value > 0 ? `${value}K` : value),\n          offsetX: -10,\n          style: {\n            colors: theme.palette.text.secondary\n          }\n        }\n      }\n    },\n    series: data.series\n  };\n\n  return (\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        p: 3\n      }}\n    >\n      <Card>\n        <CardHeader\n          action={(\n            <IconButton>\n              <DotsHorizontalIcon fontSize=\"small\" />\n            </IconButton>\n          )}\n          title=\"Performance Over Time\"\n        />\n        <Divider />\n        <CardContent>\n          <Scrollbar>\n            <Box\n              sx={{\n                height: 375,\n                minWidth: 500,\n                position: 'relative'\n              }}\n            >\n              <Chart\n                height=\"350\"\n                type=\"area\"\n                {...chart}\n              />\n            </Box>\n          </Scrollbar>\n        </CardContent>\n      </Card>\n    </Box>\n  );\n};\n\nexport default Chart4;\n","import { useState, useEffect, useCallback } from 'react';\nimport Chart from 'react-apexcharts';\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  Container,\n  List,\n  ListItem,\n  ListItemText,\n  Typography\n} from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport useIsMountedRef from '../../../hooks/useIsMountedRef';\nimport ArrowRightIcon from '../../../icons/ArrowRight';\n\nconst getRandomInt = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nconst Chart5 = () => {\n  const isMountedRef = useIsMountedRef();\n  const theme = useTheme();\n  const [data, setData] = useState([\n    163,\n    166,\n    161,\n    159,\n    99,\n    163,\n    173,\n    166,\n    167,\n    183,\n    176,\n    172\n  ]);\n\n  const getData = useCallback(() => {\n    if (isMountedRef.current) {\n      setData((prevData) => {\n        const newData = [...prevData];\n\n        newData.shift();\n        newData.push(0);\n\n        return newData;\n      });\n    }\n\n    setTimeout(() => {\n      if (isMountedRef.current) {\n        setData((prevData) => {\n          const newData = [...prevData];\n          const random = getRandomInt(100, 200);\n\n          newData.pop();\n          newData.push(random);\n\n          return newData;\n        });\n      }\n    }, 500);\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    setInterval(() => getData(), 2000);\n  }, [getData]);\n\n  const labels = data.map((value, i) => i);\n\n  const pages = [\n    {\n      pathname: '/projects',\n      views: '24'\n    },\n    {\n      pathname: '/chat',\n      views: '21'\n    },\n    {\n      pathname: '/cart',\n      views: '15'\n    },\n    {\n      pathname: '/checkout',\n      views: '8'\n    }\n  ];\n\n  const chart = {\n    options: {\n      chart: {\n        background: 'transparent',\n        stacked: false,\n        toolbar: {\n          show: false\n        }\n      },\n      colors: ['#688dff'],\n      dataLabels: {\n        enabled: false\n      },\n      grid: {\n        show: false\n      },\n      legend: {\n        show: false\n      },\n      plotOptions: {\n        bar: {\n          columnWidth: 40\n        }\n      },\n      states: {\n        active: {\n          filter: {\n            type: 'none'\n          }\n        },\n        hover: {\n          filter: {\n            type: 'none'\n          }\n        }\n      },\n      stroke: {\n        colors: ['transparent'],\n        show: true,\n        width: 2\n      },\n      theme: {\n        mode: theme.palette.mode\n      },\n      tooltip: {\n        mode: theme.palette.mode\n      },\n      xaxis: {\n        axisBorder: {\n          show: false\n        },\n        axisTicks: {\n          show: false\n        },\n        categories: labels,\n        labels: {\n          show: false\n        }\n      },\n      yaxis: {\n        labels: {\n          show: false\n        }\n      }\n    },\n    series: [{ data }]\n  };\n\n  return (\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        p: 3\n      }}\n    >\n      <Container maxWidth=\"sm\">\n        <Card>\n          <CardHeader\n            disableTypography\n            title={(\n              <Box\n                sx={{\n                  alignItems: 'center',\n                  display: 'flex',\n                  justifyContent: 'space-between'\n                }}\n              >\n                <div>\n                  <Typography\n                    color=\"textPrimary\"\n                    variant=\"h6\"\n                  >\n                    Active users\n                  </Typography>\n                  <Typography\n                    color=\"textSecondary\"\n                    variant=\"body2\"\n                  >\n                    Page views per second\n                  </Typography>\n                </div>\n                <Typography\n                  color=\"textPrimary\"\n                  variant=\"h6\"\n                >\n                  {data[data.length - 1] === 0\n                    ? data[data.length - 2]\n                    : data[data.length - 1]}\n                </Typography>\n              </Box>\n            )}\n          />\n          <Chart\n            height=\"200\"\n            type=\"bar\"\n            {...chart}\n          />\n          <List>\n            {pages.map((page) => (\n              <ListItem\n                divider\n                key={page.pathname}\n              >\n                <ListItemText\n                  primary={page.pathname}\n                  primaryTypographyProps={{\n                    color: 'textSecondary',\n                    variant: 'body2'\n                  }}\n                />\n                <Typography\n                  color=\"textPrimary\"\n                  variant=\"subtitle2\"\n                >\n                  {page.views}\n                </Typography>\n              </ListItem>\n            ))}\n          </List>\n          <Box\n            sx={{\n              display: 'flex',\n              justifyContent: 'flex-end',\n              p: 2\n            }}\n          >\n            <Button\n              color=\"primary\"\n              endIcon={<ArrowRightIcon fontSize=\"small\" />}\n              size=\"small\"\n              variant=\"text\"\n            >\n              See All\n            </Button>\n          </Box>\n        </Card>\n      </Container>\n    </Box>\n  );\n};\n\nexport default Chart5;\n","import Chart from 'react-apexcharts';\nimport { Box, Card, CardHeader, IconButton } from '@material-ui/core';\nimport { alpha, useTheme } from '@material-ui/core/styles';\nimport Scrollbar from '../../Scrollbar';\nimport DotsHorizontalIcon from '../../../icons/DotsHorizontal';\n\nconst data = {\n  series: [\n    {\n      data: [18, 16, 5, 8, 3, 14, 14, 16, 17, 19, 18, 20]\n    },\n    {\n      data: [12, 11, 4, 6, 2, 9, 9, 10, 11, 12, 13, 13]\n    }\n  ],\n  categories: [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'Jun',\n    'Jul',\n    'Aug',\n    'Sep',\n    'Oct',\n    'Nov',\n    'Dec'\n  ]\n};\n\nconst Chart6 = () => {\n  const theme = useTheme();\n\n  const chart = {\n    options: {\n      chart: {\n        background: 'transparent',\n        stacked: false,\n        toolbar: {\n          show: false\n        }\n      },\n      colors: ['#00ab57', alpha('#00ab57', 0.25)],\n      dataLabels: {\n        enabled: false\n      },\n      grid: {\n        borderColor: theme.palette.divider,\n        strokeDashArray: 2\n      },\n      states: {\n        active: {\n          filter: {\n            type: 'none'\n          }\n        },\n        hover: {\n          filter: {\n            type: 'none'\n          }\n        }\n      },\n      legend: {\n        show: false\n      },\n      plotOptions: {\n        bar: {\n          columnWidth: 20\n        }\n      },\n      stroke: {\n        colors: ['transparent'],\n        show: true,\n        width: 2\n      },\n      theme: {\n        mode: theme.palette.mode\n      },\n      tooltip: {\n        mode: theme.palette.mode\n      },\n      xaxis: {\n        axisBorder: {\n          color: theme.palette.divider,\n          show: true\n        },\n        axisTicks: {\n          color: theme.palette.divider,\n          show: true\n        },\n        categories: data.categories,\n        labels: {\n          offsetY: 5,\n          style: {\n            colors: theme.palette.text.secondary\n          }\n        }\n      },\n      yaxis: {\n        labels: {\n          formatter: (value) => (value > 0 ? `${value}K` : value),\n          offsetX: -10,\n          style: {\n            colors: theme.palette.text.secondary\n          }\n        }\n      }\n    },\n    series: data.series\n  };\n\n  return (\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        p: 3\n      }}\n    >\n      <Card>\n        <CardHeader\n          action={(\n            <IconButton>\n              <DotsHorizontalIcon fontSize=\"small\" />\n            </IconButton>\n          )}\n          title=\"Financial Stats\"\n        />\n        <Scrollbar>\n          <Box\n            sx={{\n              minWidth: 700,\n              px: 2\n            }}\n          >\n            <Chart\n              height=\"375\"\n              type=\"bar\"\n              {...chart}\n            />\n          </Box>\n        </Scrollbar>\n      </Card>\n    </Box>\n  );\n};\n\nexport default Chart6;\n","import { useState } from 'react';\nimport Chart from 'react-apexcharts';\nimport {\n  Box,\n  Card,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  Tooltip,\n  Typography\n} from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport InformationCircleIcon from '../../../icons/InformationCircle';\n\nconst data = {\n  series: [\n    {\n      color: '#4CAF50',\n      data: [\n        3350,\n        1840,\n        2254,\n        5780,\n        9349,\n        5241,\n        2770,\n        2051,\n        3764,\n        2385,\n        5912,\n        8323\n      ],\n      name: 'Organic'\n    },\n    {\n      color: '#FF9800',\n      data: [35, 41, 62, 42, 13, 18, 29, 37, 36, 51, 32, 35],\n      name: 'Referral'\n    },\n    {\n      color: '#F44336',\n      data: [100, 122, 50, 300, 250, 400, 312, 200, 10, 60, 90, 400],\n      name: 'Social Media'\n    }\n  ],\n  xaxis: {\n    dataPoints: [\n      '01 Jan',\n      '02 Jan',\n      '03 Jan',\n      '04 Jan',\n      '05 Jan',\n      '06 Jan',\n      '07 Jan',\n      '08 Jan',\n      '09 Jan',\n      '10 Jan',\n      '11 Jan',\n      '12 Jan'\n    ]\n  }\n};\n\nconst Chart7 = () => {\n  const theme = useTheme();\n  const [selectedSeries, setSelectedSeries] = useState([\n    'Organic',\n    'Referral',\n    'Social Media'\n  ]);\n\n  const handleChange = (event, name) => {\n    if (!event.target.checked) {\n      setSelectedSeries(selectedSeries.filter((item) => item !== name));\n    } else {\n      setSelectedSeries([...selectedSeries, name]);\n    }\n  };\n\n  const visibleSeries = data.series.filter((item) => selectedSeries.includes(item.name));\n\n  const chart = {\n    options: {\n      chart: {\n        background: 'transparent',\n        stacked: false,\n        toolbar: {\n          show: false\n        },\n        zoom: false\n      },\n      colors: visibleSeries.map((item) => item.color),\n      dataLabels: {\n        enabled: false\n      },\n      grid: {\n        borderColor: theme.palette.divider,\n        yaxis: {\n          lines: {\n            show: false\n          }\n        }\n      },\n      legend: {\n        show: false\n      },\n      markers: {\n        hover: {\n          size: undefined,\n          sizeOffset: 2\n        },\n        radius: 2,\n        shape: 'circle',\n        size: 4,\n        strokeWidth: 0\n      },\n      stroke: {\n        curve: 'smooth',\n        lineCap: 'butt',\n        width: 3\n      },\n      theme: {\n        mode: theme.palette.mode\n      },\n      tooltip: {\n        theme: theme.palette.mode\n      },\n      xaxis: {\n        axisBorder: {\n          color: theme.palette.divider\n        },\n        axisTicks: {\n          color: theme.palette.divider,\n          show: true\n        },\n        categories: data.xaxis.dataPoints,\n        labels: {\n          style: {\n            colors: theme.palette.text.secondary\n          }\n        }\n      },\n      yaxis: [\n        {\n          axisBorder: {\n            color: theme.palette.divider,\n            show: true\n          },\n          axisTicks: {\n            color: theme.palette.divider,\n            show: true\n          },\n          labels: {\n            style: {\n              colors: theme.palette.text.secondary\n            }\n          }\n        },\n        {\n          axisTicks: {\n            color: theme.palette.divider,\n            show: true\n          },\n          axisBorder: {\n            color: theme.palette.divider,\n            show: true\n          },\n          labels: {\n            style: {\n              colors: theme.palette.text.secondary\n            }\n          },\n          opposite: true\n        }\n      ]\n    },\n    series: visibleSeries\n  };\n\n  return (\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        p: 3\n      }}\n    >\n      <Card>\n        <CardHeader\n          disableTypography\n          title={(\n            <Box\n              sx={{\n                alignItems: 'center',\n                display: 'flex',\n                justifyContent: 'space-between'\n              }}\n            >\n              <Typography\n                color=\"textPrimary\"\n                variant=\"h6\"\n              >\n                Traffic Sources\n              </Typography>\n              <Tooltip title=\"Chart 7 Source by channel\">\n                <InformationCircleIcon fontSize=\"small\" />\n              </Tooltip>\n            </Box>\n          )}\n        />\n        <CardContent>\n          <Box\n            sx={{\n              alignItems: 'center',\n              display: 'flex',\n              flexWrap: 'wrap'\n            }}\n          >\n            {data.series.map((item) => (\n              <Box\n                key={item.name}\n                sx={{\n                  alignItems: 'center',\n                  display: 'flex',\n                  mr: 2\n                }}\n              >\n                <Checkbox\n                  checked={selectedSeries.some((visibleItem) => visibleItem === item.name)}\n                  color=\"primary\"\n                  onChange={(event) => handleChange(event, item.name)}\n                />\n                <Box\n                  sx={{\n                    backgroundColor: item.color,\n                    borderRadius: '50%',\n                    height: 8,\n                    ml: 1,\n                    mr: 2,\n                    width: 8\n                  }}\n                />\n                <Typography\n                  color=\"textPrimary\"\n                  variant=\"subtitle2\"\n                >\n                  {item.name}\n                </Typography>\n              </Box>\n            ))}\n          </Box>\n          <Chart\n            height=\"350\"\n            type=\"line\"\n            {...chart}\n          />\n        </CardContent>\n      </Card>\n    </Box>\n  );\n};\n\nexport default Chart7;\n","import Chart from 'react-apexcharts';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Container,\n  Tooltip,\n  Typography,\n  colors\n} from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport ArrowRightIcon from '../../../icons/ArrowRight';\nimport InformationCircleIcon from '../../../icons/InformationCircle';\n\nconst Chart8 = () => {\n  const theme = useTheme();\n\n  const chart = {\n    options: {\n      chart: {\n        background: 'transparent',\n        stacked: false,\n        toolbar: {\n          show: false\n        },\n        zoom: false\n      },\n      colors: [\n        theme.palette.primary.light,\n        theme.palette.warning.light,\n        theme.palette.success.light,\n        theme.palette.info.light,\n        colors.blueGrey[700]\n      ],\n      dataLabels: {\n        enabled: false\n      },\n      labels: ['Linkedin', 'Facebook', 'Instagram', 'Twitter', 'Other'],\n      legend: {\n        labels: {\n          colors: theme.palette.text.secondary\n        },\n        show: true\n      },\n      stroke: {\n        width: 0\n      },\n      theme: {\n        mode: theme.palette.mode\n      }\n    },\n    series: [10, 10, 20, 10, 70]\n  };\n\n  return (\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        p: 3\n      }}\n    >\n      <Container maxWidth=\"sm\">\n        <Card>\n          <CardHeader\n            disableTypography\n            title={(\n              <Box\n                sx={{\n                  alignItems: 'center',\n                  display: 'flex',\n                  justifyContent: 'space-between'\n                }}\n              >\n                <Typography\n                  color=\"textPrimary\"\n                  variant=\"h6\"\n                >\n                  Social Media Sources\n                </Typography>\n                <Tooltip title=\"Widget25 source by Social Media platforms\">\n                  <InformationCircleIcon fontSize=\"small\" />\n                </Tooltip>\n              </Box>\n            )}\n          />\n          <CardContent>\n            <Chart\n              height={300}\n              type=\"donut\"\n              {...chart}\n            />\n            <Box\n              sx={{\n                display: 'flex',\n                justifyContent: 'flex-end'\n              }}\n            >\n              <Button\n                color=\"primary\"\n                endIcon={<ArrowRightIcon fontSize=\"small\" />}\n                variant=\"text\"\n              >\n                See all\n              </Button>\n            </Box>\n          </CardContent>\n        </Card>\n      </Container>\n    </Box>\n  );\n};\n\nexport default Chart8;\n","import Chart from 'react-apexcharts';\nimport { Box, Card, CardContent, CardHeader } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\n\nconst Chart9 = () => {\n  const theme = useTheme();\n\n  const chart = {\n    options: {\n      chart: {\n        background: 'transparent',\n        stacked: false,\n        toolbar: {\n          show: false\n        },\n        zoom: false\n      },\n      colors: ['#ffb547', '#7783DB'],\n      dataLabels: {\n        enabled: false\n      },\n      fill: {\n        type: 'solid',\n        opacity: 0\n      },\n      grid: {\n        borderColor: theme.palette.divider\n      },\n      markers: {\n        strokeColors: theme.palette.background.paper,\n        size: 6\n      },\n      stroke: {\n        curve: 'straight',\n        width: 2\n      },\n      theme: {\n        mode: theme.palette.mode\n      },\n      tooltip: {\n        theme: theme.palette.mode\n      },\n      xaxis: {\n        axisBorder: {\n          color: theme.palette.divider,\n          show: true\n        },\n        axisTicks: {\n          color: theme.palette.divider,\n          show: true\n        },\n        categories: [\n          'Jan',\n          'Feb',\n          'Mar',\n          'Apr',\n          'May',\n          'Jun',\n          'Jul',\n          'Aug',\n          'Sep',\n          'Oct',\n          'Nov',\n          'Dec'\n        ]\n      }\n    },\n    series: [\n      {\n        name: 'New Customers',\n        data: [31, 40, 28, 51, 42, 109, 100, 120, 80, 42, 90, 140]\n      },\n      {\n        name: 'Up/Cross-Selling',\n        data: [11, 32, 45, 32, 34, 52, 41, 80, 96, 140, 30, 100]\n      }\n    ]\n  };\n\n  return (\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        p: 3\n      }}\n    >\n      <Card>\n        <CardHeader title=\"Sales Revenue\" />\n        <CardContent>\n          <Chart\n            height=\"360\"\n            type=\"area\"\n            {...chart}\n          />\n        </CardContent>\n      </Card>\n    </Box>\n  );\n};\n\nexport default Chart9;\n","import Chart from 'react-apexcharts';\nimport numeral from 'numeral';\nimport { Box, Card, CardContent, CardHeader, Container, Typography } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\n\nconst data = {\n  series: [\n    {\n      color: '#FFB547',\n      data: 14859,\n      label: 'Strategy'\n    },\n    {\n      color: '#7BC67E',\n      data: 35690,\n      label: 'Outsourcing'\n    },\n    {\n      color: '#7783DB',\n      data: 45120,\n      label: 'Marketing'\n    }\n  ]\n};\n\nconst Chart10 = () => {\n  const theme = useTheme();\n\n  const chart = {\n    options: {\n      chart: {\n        background: 'transparent',\n        stacked: false,\n        toolbar: {\n          show: false\n        },\n        zoom: false\n      },\n      colors: data.series.map((item) => item.color),\n      dataLabels: {\n        enabled: false\n      },\n      labels: data.series.map((item) => item.label),\n      legend: {\n        show: false\n      },\n      stroke: {\n        colors: theme.palette.background.paper,\n        width: 1\n      },\n      theme: {\n        mode: theme.palette.mode\n      }\n    },\n    series: data.series.map((item) => item.data)\n  };\n\n  return (\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        p: 3\n      }}\n    >\n      <Container maxWidth=\"md\">\n        <Card>\n          <CardHeader title=\"Cost Breakdown\" />\n          <CardContent>\n            <Chart\n              height=\"260\"\n              type=\"pie\"\n              {...chart}\n            />\n            {data.series.map((item) => (\n              <Box\n                key={item.label}\n                sx={{\n                  alignItems: 'center',\n                  display: 'flex',\n                  p: 1\n                }}\n              >\n                <Box\n                  sx={{\n                    backgroundColor: item.color,\n                    borderRadius: '50%',\n                    height: 8,\n                    width: 8\n                  }}\n                />\n                <Typography\n                  color=\"textPrimary\"\n                  sx={{ ml: 2 }}\n                  variant=\"subtitle2\"\n                >\n                  {item.label}\n                </Typography>\n                <Box sx={{ flexGrow: 1 }} />\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"subtitle2\"\n                >\n                  {numeral(item.data).format('$0,0.00')}\n                </Typography>\n              </Box>\n            ))}\n          </CardContent>\n        </Card>\n      </Container>\n    </Box>\n  );\n};\n\nexport default Chart10;\n","import numeral from 'numeral';\nimport Chart from 'react-apexcharts';\nimport { Box, Card, CardContent, CardHeader, Container, Typography } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\n\nconst data = {\n  series: [\n    {\n      color: '#7783DB',\n      category: 'Email',\n      data: 37530\n    },\n    {\n      color: '#7BC67E',\n      category: 'GDN',\n      data: 52717\n    },\n    {\n      color: '#FFB547',\n      category: 'Instagram',\n      data: 62935\n    },\n    {\n      color: '#F06191',\n      category: 'Facebook',\n      data: 90590\n    },\n    {\n      color: '#64B6F7',\n      category: 'Google Ads Search',\n      data: 13219\n    }\n  ]\n};\n\nconst IncrementalSales = () => {\n  const theme = useTheme();\n\n  const chart = {\n    options: {\n      chart: {\n        background: 'transparent',\n        stacked: false,\n        toolbar: {\n          show: false\n        }\n      },\n      colors: data.series.map((item) => item.color),\n      dataLabels: {\n        enabled: false\n      },\n      grid: {\n        borderColor: theme.palette.divider,\n        yaxis: {\n          lines: {\n            show: false\n          }\n        }\n      },\n      legend: {\n        show: false\n      },\n      plotOptions: {\n        bar: {\n          horizontal: true,\n          barHeight: 45,\n          distributed: true\n        }\n      },\n      theme: {\n        mode: theme.palette.mode\n      },\n      tooltip: {\n        theme: theme.palette.mode,\n        y: {\n          formatter: (value) => numeral(value).format('$0,0.00')\n        }\n      },\n      xaxis: {\n        axisBorder: {\n          color: theme.palette.divider,\n          show: true\n        },\n        axisTicks: {\n          color: theme.palette.divider,\n          show: true\n        },\n        categories: data.series.map((item) => item.category)\n      },\n      yaxis: {\n        labels: {\n          show: false\n        }\n      }\n    },\n    series: [\n      {\n        data: data.series.map((item) => item.data),\n        name: 'Sales'\n      }\n    ]\n  };\n\n  return (\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        p: 3\n      }}\n    >\n      <Container maxWidth=\"md\">\n        <Card>\n          <CardHeader title=\"Incremental Sales\" />\n          <CardContent>\n            {data.series.map((item) => (\n              <Box\n                key={item.category}\n                sx={{\n                  alignItems: 'center',\n                  display: 'flex',\n                  p: 1\n                }}\n              >\n                <Box\n                  sx={{\n                    backgroundColor: item.color,\n                    borderRadius: '50%',\n                    height: 8,\n                    width: 8\n                  }}\n                />\n                <Typography\n                  color=\"textPrimary\"\n                  sx={{ ml: 2 }}\n                  variant=\"subtitle2\"\n                >\n                  {item.category}\n                </Typography>\n              </Box>\n            ))}\n            <Chart\n              height=\"350\"\n              type=\"bar\"\n              {...chart}\n            />\n          </CardContent>\n        </Card>\n      </Container>\n    </Box>\n  );\n};\n\nexport default IncrementalSales;\n","import Chart from 'react-apexcharts';\nimport { format } from 'date-fns';\nimport { Box, Card, CardHeader, Typography } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport Scrollbar from '../../Scrollbar';\n\nconst data = {\n  series: [\n    {\n      data: [12, 24, 36, 48, 60, 72, 84]\n    },\n    {\n      data: [12, 24, 36, 48, 60, 72, 84]\n    },\n    {\n      data: [12, 24, 36, 48, 60, 72, 84]\n    }\n  ],\n  categories: [\n    'Capital One',\n    'Ally Bank',\n    'ING',\n    'Ridgewood',\n    'BT Transilvania',\n    'CEC',\n    'CBC'\n  ]\n};\n\nconst Chart12 = () => {\n  const theme = useTheme();\n\n  const chart = {\n    options: {\n      chart: {\n        background: 'transparent',\n        stacked: true,\n        toolbar: {\n          show: false\n        }\n      },\n      colors: ['#3C4693', '#5664D2', '#7783DB'],\n      dataLabels: {\n        enabled: false\n      },\n      grid: {\n        borderColor: theme.palette.divider,\n        xaxis: {\n          lines: {\n            show: true\n          }\n        },\n        yaxis: {\n          lines: {\n            show: true\n          }\n        }\n      },\n      states: {\n        active: {\n          filter: {\n            type: 'none'\n          }\n        },\n        hover: {\n          filter: {\n            type: 'none'\n          }\n        }\n      },\n      legend: {\n        show: false\n      },\n      stroke: {\n        colors: ['transparent'],\n        show: true,\n        width: 2\n      },\n      theme: {\n        mode: theme.palette.mode\n      },\n      tooltip: {\n        mode: theme.palette.mode\n      },\n      xaxis: {\n        axisBorder: {\n          show: false\n        },\n        axisTicks: {\n          show: false\n        },\n        categories: data.categories,\n        labels: {\n          style: {\n            colors: theme.palette.text.secondary\n          }\n        }\n      },\n      yaxis: {\n        labels: {\n          offsetX: -12,\n          style: {\n            colors: theme.palette.text.secondary\n          }\n        }\n      }\n    },\n    series: data.series\n  };\n\n  return (\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        p: 3\n      }}\n    >\n      <Card>\n        <CardHeader\n          subheader={(\n            <Typography\n              color=\"textSecondary\"\n              variant=\"body2\"\n            >\n              {format(new Date(), 'MMM yyyy')}\n            </Typography>\n          )}\n          title=\"Total Transactions\"\n        />\n        <Scrollbar>\n          <Box\n            sx={{\n              height: 336,\n              minWidth: 500,\n              px: 2\n            }}\n          >\n            <Chart\n              height=\"300\"\n              type=\"bar\"\n              {...chart}\n            />\n          </Box>\n        </Scrollbar>\n      </Card>\n    </Box>\n  );\n};\n\nexport default Chart12;\n","import { useEffect } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Box, Container } from '@material-ui/core';\nimport Chart1 from '../../components/widgets/charts/Chart1';\nimport Chart2 from '../../components/widgets/charts/Chart2';\nimport Chart3 from '../../components/widgets/charts/Chart3';\nimport Chart4 from '../../components/widgets/charts/Chart4';\nimport Chart5 from '../../components/widgets/charts/Chart5';\nimport Chart6 from '../../components/widgets/charts/Chart6';\nimport Chart7 from '../../components/widgets/charts/Chart7';\nimport Chart8 from '../../components/widgets/charts/Chart8';\nimport Chart9 from '../../components/widgets/charts/Chart9';\nimport Chart10 from '../../components/widgets/charts/Chart10';\nimport Chart11 from '../../components/widgets/charts/Chart11';\nimport Chart12 from '../../components/widgets/charts/Chart12';\nimport WidgetPreviewer from '../../components/WidgetPreviewer';\nimport gtm from '../../lib/gtm';\n\nconst BrowseCharts = () => {\n  useEffect(() => {\n    gtm.push({ event: 'page_view' });\n  }, []);\n\n  return (\n    <>\n      <Helmet>\n        <title>Browse: Charts | Material Kit Pro</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.paper',\n          minHeight: '100%',\n          py: 8\n        }}\n      >\n        <Container maxWidth=\"lg\">\n          <Box sx={{ mt: 3 }}>\n            <WidgetPreviewer\n              element={<Chart1 />}\n              name=\"Chart 1\"\n            />\n            <WidgetPreviewer\n              element={<Chart2 />}\n              name=\"Chart 2\"\n            />\n            <WidgetPreviewer\n              element={<Chart3 />}\n              name=\"Chart 3\"\n            />\n            <WidgetPreviewer\n              element={<Chart4 />}\n              name=\"Chart 4\"\n            />\n            <WidgetPreviewer\n              element={<Chart5 />}\n              name=\"Chart 5\"\n            />\n            <WidgetPreviewer\n              element={<Chart6 />}\n              name=\"Chart 6\"\n            />\n            <WidgetPreviewer\n              element={<Chart7 />}\n              name=\"Chart 7\"\n            />\n            <WidgetPreviewer\n              element={<Chart8 />}\n              name=\"Chart 8\"\n            />\n            <WidgetPreviewer\n              element={<Chart9 />}\n              name=\"Chart 9\"\n            />\n            <WidgetPreviewer\n              element={<Chart10 />}\n              name=\"Chart 10\"\n            />\n            <WidgetPreviewer\n              element={<Chart11 />}\n              name=\"Chart 11\"\n            />\n            <WidgetPreviewer\n              element={<Chart12 />}\n              name=\"Chart 12\"\n            />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default BrowseCharts;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst ArrowRight = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'ArrowRight'\n);\n\nexport default ArrowRight;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst DotsHorizontal = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M6 10a2 2 0 11-4 0 2 2 0 014 0zM12 10a2 2 0 11-4 0 2 2 0 014 0zM16 12a2 2 0 100-4 2 2 0 000 4z\" />\n  </svg>, 'DotsHorizontal'\n);\n\nexport default DotsHorizontal;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Moon = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z\" />\n  </svg>, 'Moon'\n);\n\nexport default Moon;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Sun = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Sun'\n);\n\nexport default Sun;\n","import { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardHeader, Divider, IconButton, ThemeProvider } from '@material-ui/core';\nimport { THEMES } from '../constants';\nimport useSettings from '../hooks/useSettings';\nimport MoonIcon from '../icons/Moon';\nimport SunIcon from '../icons/Sun';\nimport { createTheme } from '../theme';\n\nconst WidgetPreviewer = (props) => {\n  const { element, name, ...other } = props;\n  const { settings } = useSettings();\n  const [selectedTheme, setSelectedTheme] = useState(settings.theme);\n\n  useEffect(() => {\n    setSelectedTheme(settings.theme);\n  }, [settings.theme]);\n\n  const handleSwitch = () => setSelectedTheme((prevSelectedTheme) => {\n    if (prevSelectedTheme === THEMES.LIGHT) {\n      if (settings.theme === THEMES.LIGHT) {\n        return THEMES.DARK;\n      }\n\n      return settings.theme;\n    }\n\n    return THEMES.LIGHT;\n  });\n\n  const theme = createTheme({\n    ...settings,\n    theme: selectedTheme\n  });\n\n  return (\n    <Card\n      variant=\"outlined\"\n      sx={{ mb: 8 }}\n      {...other}\n    >\n      <CardHeader\n        action={(\n          <IconButton onClick={handleSwitch}>\n            {selectedTheme === 'LIGHT'\n              ? <MoonIcon fontSize=\"small\" />\n              : <SunIcon fontSize=\"small\" />}\n          </IconButton>\n        )}\n        title={name}\n      />\n      <Divider />\n      <ThemeProvider theme={theme}>\n        {element}\n      </ThemeProvider>\n    </Card>\n  );\n};\n\nWidgetPreviewer.propTypes = {\n  element: PropTypes.node.isRequired,\n  name: PropTypes.string.isRequired\n};\n\nexport default WidgetPreviewer;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst InformationCircle = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'InformationCircle'\n);\n\nexport default InformationCircle;\n"],"sourceRoot":""}