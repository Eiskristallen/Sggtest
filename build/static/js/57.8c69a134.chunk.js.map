{"version":3,"sources":["components/widgets/colors/ColorsMain.js","components/widgets/colors/ColorsSeverity.js","pages/browse/BrowseColors.js","../node_modules/@material-ui/core/CardHeader/cardHeaderClasses.js","../node_modules/@material-ui/core/CardHeader/CardHeader.js","icons/Moon.js","icons/Sun.js","components/WidgetPreviewer.js"],"names":["ColorsMain","theme","useTheme","colors","name","code","palette","primary","main","text","secondary","divider","Box","sx","backgroundColor","p","List","disablePadding","pb","pt","py","map","color","ListItem","disableGutters","ListItemAvatar","borderRadius","height","mr","width","ListItemText","Typography","variant","ColorsSeverity","success","error","warning","info","BrowseColors","useEffect","gtm","push","event","Container","maxWidth","WidgetPreviewer","element","getCardHeaderUtilityClass","slot","generateUtilityClass","cardHeaderClasses","generateUtilityClasses","CardHeaderRoot","experimentalStyled","overridesResolver","props","styles","deepmerge","avatar","action","content","title","subheader","root","display","alignItems","padding","CardHeaderAvatar","flex","marginRight","CardHeaderAction","alignSelf","marginTop","marginBottom","CardHeaderContent","CardHeader","React","inProps","ref","useThemeProps","className","component","disableTypography","subheaderProp","subheaderTypographyProps","titleProp","titleTypographyProps","other","_objectWithoutPropertiesLoose","styleProps","_extends","classes","composeClasses","useUtilityClasses","type","clsx","as","Moon","createSvgIcon","xmlns","viewBox","fill","d","Sun","fillRule","clipRule","settings","useSettings","useState","selectedTheme","setSelectedTheme","createTheme","Card","mb","IconButton","onClick","prevSelectedTheme","THEMES","LIGHT","DARK","fontSize","Divider","ThemeProvider"],"mappings":"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","file":"static/js/57.8c69a134.chunk.js","sourcesContent":["import { Box, List, ListItem, ListItemAvatar, ListItemText, Typography } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\n\nconst ColorsMain = () => {\n  const theme = useTheme();\n\n  const colors = [\n    {\n      name: 'Primary',\n      code: theme.palette.primary.main\n    },\n    {\n      name: 'Text Primary',\n      code: theme.palette.text.primary\n    },\n    {\n      name: 'Text Secondary',\n      code: theme.palette.text.secondary\n    },\n    {\n      name: 'Divider',\n      code: theme.palette.divider\n    }\n  ];\n\n  return (\n    <Box\n      sx={{\n        backgroundColor: 'background.paper',\n        p: 3\n      }}\n    >\n      <List\n        disablePadding\n        sx={{\n          '& li:not(:last-child)': {\n            pb: '33px',\n            pt: 0\n          },\n          '& li:last-child': {\n            py: 0\n          }\n        }}\n      >\n        {colors.map((color) => (\n          <ListItem\n            disableGutters\n            key={color.code}\n          >\n            <ListItemAvatar>\n              <Box\n                sx={{\n                  backgroundColor: color.code,\n                  borderRadius: '10px',\n                  height: 46,\n                  mr: 2,\n                  width: 46\n                }}\n              />\n            </ListItemAvatar>\n            <ListItemText\n              primary={(\n                <Typography\n                  color=\"textPrimary\"\n                  variant=\"subtitle2\"\n                >\n                  {color.name}\n                </Typography>\n              )}\n              secondary={(\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"caption\"\n                >\n                  {color.code}\n                </Typography>\n              )}\n            />\n          </ListItem>\n        ))}\n      </List>\n    </Box>\n  );\n};\n\nexport default ColorsMain;\n","import { Box, List, ListItem, ListItemAvatar, ListItemText, Typography } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\n\nconst ColorsSeverity = () => {\n  const theme = useTheme();\n\n  const colors = [\n    {\n      name: 'Success',\n      code: theme.palette.success.main\n    },\n    {\n      name: 'Error',\n      code: theme.palette.error.main\n    },\n    {\n      name: 'Warning',\n      code: theme.palette.warning.main\n    },\n    {\n      name: 'Info',\n      code: theme.palette.info.main\n    }\n  ];\n\n  return (\n    <Box\n      sx={{\n        backgroundColor: 'background.paper',\n        p: 3\n      }}\n    >\n      <List\n        disablePadding\n        sx={{\n          '& li:not(:last-child)': {\n            pb: '33px',\n            pt: 0\n          },\n          '& li:last-child': {\n            py: 0\n          }\n        }}\n      >\n        {colors.map((color) => (\n          <ListItem\n            disableGutters\n            key={color.code}\n          >\n            <ListItemAvatar>\n              <Box\n                sx={{\n                  backgroundColor: color.code,\n                  borderRadius: '10px',\n                  height: 46,\n                  mr: 2,\n                  width: 46\n                }}\n              />\n            </ListItemAvatar>\n            <ListItemText\n              primary={(\n                <Typography\n                  color=\"textPrimary\"\n                  variant=\"subtitle2\"\n                >\n                  {color.name}\n                </Typography>\n              )}\n              secondary={(\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"caption\"\n                >\n                  {color.code}\n                </Typography>\n              )}\n            />\n          </ListItem>\n        ))}\n      </List>\n    </Box>\n  );\n};\n\nexport default ColorsSeverity;\n","import { useEffect } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Box, Container } from '@material-ui/core';\nimport ColorsMain from '../../components/widgets/colors/ColorsMain';\nimport ColorsSeverity from '../../components/widgets/colors/ColorsSeverity';\nimport WidgetPreviewer from '../../components/WidgetPreviewer';\nimport gtm from '../../lib/gtm';\n\nconst BrowseColors = () => {\n  useEffect(() => {\n    gtm.push({ event: 'page_view' });\n  }, []);\n\n  return (\n    <>\n      <Helmet>\n        <title>Browse: Colors | Material Kit Pro</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.paper',\n          pb: 15,\n          pt: 8\n        }}\n      >\n        <Container maxWidth=\"lg\">\n          <WidgetPreviewer\n            element={<ColorsMain />}\n            name=\"Main colors\"\n          />\n          <WidgetPreviewer\n            element={<ColorsSeverity />}\n            name=\"Severity colors\"\n          />\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default BrowseColors;\n","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getCardHeaderUtilityClass(slot) {\n  return generateUtilityClass('MuiCardHeader', slot);\n}\nconst cardHeaderClasses = generateUtilityClasses('MuiCardHeader', ['root', 'avatar', 'action', 'content', 'title', 'subheader']);\nexport default cardHeaderClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport Typography from '../Typography';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport cardHeaderClasses, { getCardHeaderUtilityClass } from './cardHeaderClasses';\n\nconst overridesResolver = (props, styles) => {\n  return deepmerge({\n    [`& .${cardHeaderClasses.avatar}`]: styles.avatar,\n    [`& .${cardHeaderClasses.action}`]: styles.action,\n    [`& .${cardHeaderClasses.content}`]: styles.content,\n    [`& .${cardHeaderClasses.title}`]: styles.title,\n    [`& .${cardHeaderClasses.subheader}`]: styles.subheader\n  }, styles.root || {});\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar'],\n    action: ['action'],\n    content: ['content'],\n    title: ['title'],\n    subheader: ['subheader']\n  };\n  return composeClasses(slots, getCardHeaderUtilityClass, classes);\n};\n\nconst CardHeaderRoot = experimentalStyled('div', {}, {\n  name: 'MuiCardHeader',\n  slot: 'Root',\n  overridesResolver\n})({\n  /* Styles applied to the root element. */\n  display: 'flex',\n  alignItems: 'center',\n  padding: 16\n});\nconst CardHeaderAvatar = experimentalStyled('div', {}, {\n  name: 'MuiCardHeader',\n  slot: 'Avatar'\n})({\n  /* Styles applied to the avatar element. */\n  display: 'flex',\n  flex: '0 0 auto',\n  marginRight: 16\n});\nconst CardHeaderAction = experimentalStyled('div', {}, {\n  name: 'MuiCardHeader',\n  slot: 'Action'\n})({\n  /* Styles applied to the action element. */\n  flex: '0 0 auto',\n  alignSelf: 'flex-start',\n  marginTop: -4,\n  marginRight: -8,\n  marginBottom: -4\n});\nconst CardHeaderContent = experimentalStyled('div', {}, {\n  name: 'MuiCardHeader',\n  slot: 'Content'\n})({\n  /* Styles applied to the content wrapper element. */\n  flex: '1 1 auto'\n});\nconst CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardHeader'\n  });\n\n  const {\n    action,\n    avatar,\n    className,\n    component = 'div',\n    disableTypography = false,\n    subheader: subheaderProp,\n    subheaderTypographyProps,\n    title: titleProp,\n    titleTypographyProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"action\", \"avatar\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  const styleProps = _extends({}, props, {\n    component,\n    disableTypography\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  let title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps), title);\n  }\n\n  let subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"text.secondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps), subheader);\n  }\n\n  return /*#__PURE__*/React.createElement(CardHeaderRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref,\n    styleProps: styleProps\n  }, other), avatar && /*#__PURE__*/React.createElement(CardHeaderAvatar, {\n    className: classes.avatar,\n    styleProps: styleProps\n  }, avatar), /*#__PURE__*/React.createElement(CardHeaderContent, {\n    className: classes.content,\n    styleProps: styleProps\n  }, title, subheader), action && /*#__PURE__*/React.createElement(CardHeaderAction, {\n    className: classes.action,\n    styleProps: styleProps\n  }, action));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The content of the component.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default CardHeader;","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Moon = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z\" />\n  </svg>, 'Moon'\n);\n\nexport default Moon;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Sun = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Sun'\n);\n\nexport default Sun;\n","import { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardHeader, Divider, IconButton, ThemeProvider } from '@material-ui/core';\nimport { THEMES } from '../constants';\nimport useSettings from '../hooks/useSettings';\nimport MoonIcon from '../icons/Moon';\nimport SunIcon from '../icons/Sun';\nimport { createTheme } from '../theme';\n\nconst WidgetPreviewer = (props) => {\n  const { element, name, ...other } = props;\n  const { settings } = useSettings();\n  const [selectedTheme, setSelectedTheme] = useState(settings.theme);\n\n  useEffect(() => {\n    setSelectedTheme(settings.theme);\n  }, [settings.theme]);\n\n  const handleSwitch = () => setSelectedTheme((prevSelectedTheme) => {\n    if (prevSelectedTheme === THEMES.LIGHT) {\n      if (settings.theme === THEMES.LIGHT) {\n        return THEMES.DARK;\n      }\n\n      return settings.theme;\n    }\n\n    return THEMES.LIGHT;\n  });\n\n  const theme = createTheme({\n    ...settings,\n    theme: selectedTheme\n  });\n\n  return (\n    <Card\n      variant=\"outlined\"\n      sx={{ mb: 8 }}\n      {...other}\n    >\n      <CardHeader\n        action={(\n          <IconButton onClick={handleSwitch}>\n            {selectedTheme === 'LIGHT'\n              ? <MoonIcon fontSize=\"small\" />\n              : <SunIcon fontSize=\"small\" />}\n          </IconButton>\n        )}\n        title={name}\n      />\n      <Divider />\n      <ThemeProvider theme={theme}>\n        {element}\n      </ThemeProvider>\n    </Card>\n  );\n};\n\nWidgetPreviewer.propTypes = {\n  element: PropTypes.node.isRequired,\n  name: PropTypes.string.isRequired\n};\n\nexport default WidgetPreviewer;\n"],"sourceRoot":""}