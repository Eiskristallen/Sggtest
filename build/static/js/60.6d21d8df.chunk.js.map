{"version":3,"sources":["components/dashboard/calendar/CalendarEventForm.js","components/dashboard/calendar/CalendarToolbar.js","pages/dashboard/Calendar.js","icons/Trash.js","icons/Plus.js"],"names":["getInitialValues","event","range","merge","allDay","color","description","end","addMinutes","Date","start","title","submit","CalendarEventForm","props","onAddComplete","onCancel","onDeleteComplete","onEditComplete","dispatch","useDispatch","enqueueSnackbar","useSnackbar","handleDelete","a","deleteEvent","id","console","error","isCreating","initialValues","validationSchema","Yup","shape","max","when","schema","min","required","onSubmit","values","resetForm","setErrors","setStatus","setSubmitting","data","updateEvent","createEvent","success","anchorOrigin","horizontal","vertical","variant","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","setFieldValue","touched","Box","sx","p","Typography","align","gutterBottom","TextField","Boolean","fullWidth","helperText","label","name","onBlur","onChange","value","mt","FormControlLabel","control","Switch","checked","MobileDateTimePicker","date","renderInput","inputProps","FormHelperText","Divider","alignItems","display","IconButton","onClick","Trash","fontSize","flexGrow","Button","disabled","ml","type","viewOptions","icon","ViewConfigIcon","ViewWeekIcon","ViewDayIcon","ViewAgendaIcon","CalendarToolbar","onDateNext","onDatePrev","onDateToday","onViewChange","view","other","Grid","container","justifyContent","spacing","item","ButtonGroup","size","Hidden","smDown","format","map","viewOption","Icon","Tooltip","newView","selectedEventSelector","state","calendar","events","selectedEventId","find","_event","FullCalendarWrapper","experimentalStyled","theme","palette","divider","text","primary","background","default","alpha","main","fontFamily","typography","paddingBottom","paddingTop","secondary","padding","Calendar","calendarRef","useRef","mobileDevice","useMediaQuery","breakpoints","down","useSelector","isModalOpen","selectedRange","selectedEvent","useState","setDate","setView","useEffect","gtm","push","getEvents","calendarEl","current","calendarApi","getApi","changeView","handleEventResize","handleEventDrop","handleModalClose","closeModal","backgroundColor","minHeight","py","Container","maxWidth","Breadcrumbs","aria-label","separator","ChevronRight","Link","component","RouterLink","to","m","openModal","startIcon","Plus","next","getDate","prev","today","Card","allDayMaintainDuration","dayMaxEventRows","droppable","editable","eventClick","arg","selectEvent","eventDisplay","eventDrop","eventResizableFromStart","eventResize","headerToolbar","height","initialDate","initialView","plugins","dayGridPlugin","interactionPlugin","listPlugin","timeGridPlugin","timelinePlugin","ref","rerenderDelay","select","unselect","selectRange","selectable","weekends","Dialog","onClose","open","createSvgIcon","xmlns","viewBox","fill","fillRule","d","clipRule"],"mappings":"giBAsBMA,EAAmB,SAACC,EAAOC,GAC/B,OAAID,EACKE,IAAM,GAAI,CACfC,QAAQ,EACRC,MAAO,GACPC,YAAa,GACbC,IAAKC,YAAW,IAAIC,KAAQ,IAC5BC,MAAO,IAAID,KACXE,MAAO,GACPC,OAAQ,MACPX,GAGDC,EACKC,IAAM,GAAI,CACfC,QAAQ,EACRC,MAAO,GACPC,YAAa,GACbC,IAAK,IAAIE,KAAKP,EAAMK,KACpBG,MAAO,IAAID,KAAKP,EAAMQ,OACtBC,MAAO,GACPC,OAAQ,MACPX,GAGE,CACLG,QAAQ,EACRC,MAAO,GACPC,YAAa,GACbC,IAAKC,YAAW,IAAIC,KAAQ,IAC5BC,MAAO,IAAID,KACXE,MAAO,GACPC,OAAQ,OAqOGC,EAjOW,SAACC,GAAW,IAC5Bb,EAA4Ea,EAA5Eb,MAAOc,EAAqED,EAArEC,cAAeC,EAAsDF,EAAtDE,SAAUC,EAA4CH,EAA5CG,iBAAkBC,EAA0BJ,EAA1BI,eAAgBhB,EAAUY,EAAVZ,MACpEiB,EAAWC,cACTC,EAAoBC,cAApBD,gBAEFE,EAAY,uCAAG,sBAAAC,EAAA,+EAEXL,EAASM,YAAYxB,EAAMyB,KAFhB,OAIbT,GACFA,IALe,+CAQjBU,QAAQC,MAAR,MARiB,wDAAH,qDAYZC,GAAc5B,EAEpB,OACE,cAAC,IAAD,CACE6B,cAAe9B,EAAiBC,EAAOC,GACvC6B,iBAAkBC,MAEfC,MAAM,CACL7B,OAAQ4B,MACR1B,YAAa0B,MAAaE,IAAI,KAC9B3B,IAAKyB,MAEFG,KAAK,SACJ,SAACzB,EAAO0B,GAAR,OAAoB1B,GAAS0B,EAAOC,IAAI3B,EACtC,6CACNA,MAAOsB,MACPrB,MAAOqB,MAEJE,IAAI,KACJI,SAAS,uBAEhBC,SAAQ,uCAAE,WAAOC,EAAP,0BAAAhB,EAAA,yDAAiBiB,EAAjB,EAAiBA,UAAWC,EAA5B,EAA4BA,UAAWC,EAAvC,EAAuCA,UAAWC,EAAlD,EAAkDA,cAAlD,SAEAC,EAAO,CACXzC,OAAQoC,EAAOpC,OACfE,YAAakC,EAAOlC,YACpBC,IAAKiC,EAAOjC,IACZG,MAAO8B,EAAO9B,MACdC,MAAO6B,EAAO7B,QAGZV,EAVE,gCAWEkB,EAAS2B,YAAY7C,EAAMyB,GAAImB,IAXjC,+CAaE1B,EAAS4B,YAAYF,IAbvB,QAgBNJ,IACAE,EAAU,CAAEK,SAAS,IACrBJ,GAAc,GACdvB,EAAgB,mBAAoB,CAClC4B,aAAc,CACZC,WAAY,QACZC,SAAU,OAEZC,QAAS,YAGPvB,GAAcd,GAChBA,KAGGc,GAAcX,GACjBA,IAhCI,kDAmCNS,QAAQC,MAAR,MACAe,EAAU,CAAEK,SAAS,IACrBN,EAAU,CAAE9B,OAAQ,KAAIyC,UACxBT,GAAc,GAtCR,0DAAF,wDAlBV,SA4DG,gBACCU,EADD,EACCA,OACAC,EAFD,EAECA,WACAC,EAHD,EAGCA,aACAC,EAJD,EAICA,aACAC,EALD,EAKCA,aACAC,EAND,EAMCA,cACAC,EAPD,EAOCA,QACApB,EARD,EAQCA,OARD,OAUC,uBAAMD,SAAUkB,EAAhB,UACE,cAACI,EAAA,EAAD,CAAKC,GAAI,CAAEC,EAAG,GAAd,SACE,cAACC,EAAA,EAAD,CACEC,MAAM,SACN5D,MAAM,cACN6D,cAAY,EACZd,QAAQ,KAJV,SAMGvB,EACG,YACA,iBAGR,eAACgC,EAAA,EAAD,CAAKC,GAAI,CAAEC,EAAG,GAAd,UACE,cAACI,EAAA,EAAD,CACEvC,MAAOwC,QAAQR,EAAQjD,OAAS2C,EAAO3C,OACvC0D,WAAS,EACTC,WAAYV,EAAQjD,OAAS2C,EAAO3C,MACpC4D,MAAM,QACNC,KAAK,QACLC,OAAQlB,EACRmB,SAAUlB,EACVmB,MAAOnC,EAAO7B,MACdyC,QAAQ,aAEV,cAACS,EAAA,EAAD,CAAKC,GAAI,CAAEc,GAAI,GAAf,SACE,cAACT,EAAA,EAAD,CACEvC,MAAOwC,QAAQR,EAAQtD,aAAegD,EAAOhD,aAC7C+D,WAAS,EACTC,WAAYV,EAAQtD,aAAegD,EAAOhD,YAC1CiE,MAAM,cACNC,KAAK,cACLC,OAAQlB,EACRmB,SAAUlB,EACVmB,MAAOnC,EAAOlC,YACd8C,QAAQ,eAGZ,cAACS,EAAA,EAAD,CAAKC,GAAI,CAAEc,GAAI,GAAf,SACE,cAACC,EAAA,EAAD,CACEC,QACE,cAACC,EAAA,EAAD,CACEC,QAASxC,EAAOpC,OAChBC,MAAM,UACNmE,KAAK,SACLE,SAAUlB,IAGde,MAAM,cAGV,cAACV,EAAA,EAAD,CAAKC,GAAI,CAAEc,GAAI,GAAf,SACE,cAACK,EAAA,EAAD,CACEV,MAAM,aACNG,SAAU,SAACQ,GAAD,OAAUvB,EAAc,QAASuB,IAC3CC,YAAa,SAACC,GAAD,OACX,cAACjB,EAAA,EAAD,aACEE,WAAS,EACTjB,QAAQ,YACJgC,KAGRT,MAAOnC,EAAO9B,UAGlB,cAACmD,EAAA,EAAD,CAAKC,GAAI,CAAEc,GAAI,GAAf,SACE,cAACK,EAAA,EAAD,CACEV,MAAM,WACNG,SAAU,SAACQ,GAAD,OAAUvB,EAAc,MAAOuB,IACzCC,YAAa,SAACC,GAAD,OACX,cAACjB,EAAA,EAAD,aACEE,WAAS,EACTjB,QAAQ,YACJgC,KAGRT,MAAOnC,EAAOjC,QAGjB6D,QAAQR,EAAQrD,KAAO+C,EAAO/C,MAC7B,cAACsD,EAAA,EAAD,CAAKC,GAAI,CAAEc,GAAI,GAAf,SACE,cAACS,EAAA,EAAD,CAAgBzD,OAAK,EAArB,SACG0B,EAAO/C,WAKhB,cAAC+E,EAAA,EAAD,IACA,eAACzB,EAAA,EAAD,CACEC,GAAI,CACFyB,WAAY,SACZC,QAAS,OACTzB,EAAG,GAJP,WAOIlC,GACA,cAAC4D,EAAA,EAAD,CAAYC,QAAS,kBAAMnE,KAA3B,SACE,cAACoE,EAAA,EAAD,CAAWC,SAAS,YAGxB,cAAC/B,EAAA,EAAD,CAAKC,GAAI,CAAE+B,SAAU,KACrB,cAACC,EAAA,EAAD,CACEzF,MAAM,UACNqF,QAAS1E,EACToC,QAAQ,OAHV,oBAOA,cAAC0C,EAAA,EAAD,CACEzF,MAAM,UACN0F,SAAUrC,EACVI,GAAI,CAAEkC,GAAI,GACVC,KAAK,SACL7C,QAAQ,YALV,+B,oIC/ON8C,GAAc,CAClB,CACEC,KAAMC,KACN7B,MAAO,QACPI,MAAO,gBAET,CACEwB,KAAME,KACN9B,MAAO,OACPI,MAAO,gBAET,CACEwB,KAAMG,KACN/B,MAAO,MACPI,MAAO,eAET,CACEwB,KAAMI,KACNhC,MAAO,SACPI,MAAO,aAuFI6B,GAnFS,SAAC1F,GAAW,IAC1BoE,EAA4EpE,EAA5EoE,KAAMuB,EAAsE3F,EAAtE2F,WAAYC,EAA0D5F,EAA1D4F,WAAYC,EAA8C7F,EAA9C6F,YAAaC,EAAiC9F,EAAjC8F,aAAcC,EAAmB/F,EAAnB+F,KAASC,EADzC,YACmDhG,EADnD,wEASjC,OACE,eAACiG,EAAA,EAAD,yBACExB,WAAW,SACXyB,WAAS,EACTC,eAAe,gBACfC,QAAS,GACLJ,GALN,cAOE,cAACC,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,eAACC,EAAA,EAAD,CAAaC,KAAK,QAAlB,UACE,cAACvB,EAAA,EAAD,CAAQJ,QAASgB,EAAjB,kBAGA,cAACZ,EAAA,EAAD,CAAQJ,QAASiB,EAAjB,mBAGA,cAACb,EAAA,EAAD,CAAQJ,QAASe,EAAjB,uBAKJ,eAACa,EAAA,EAAD,CAAQC,QAAM,EAAd,UACE,cAACR,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,cAACnD,EAAA,EAAD,CACE3D,MAAM,cACN+C,QAAQ,KAFV,SAIGoE,YAAOtC,EAAM,cAGlB,cAAC6B,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,cAACtD,EAAA,EAAD,CAAKC,GAAI,CAAEzD,MAAO,gBAAlB,SACG6F,GAAYuB,KAAI,SAACC,GAChB,IAAMC,EAAOD,EAAWvB,KAExB,OACE,cAACyB,EAAA,EAAD,CAEEjH,MAAO+G,EAAWnD,MAFpB,SAIE,cAACkB,EAAA,EAAD,CACEpF,MAAOqH,EAAW/C,QAAUkC,EACxB,UACA,UACJnB,QAAS,kBAlDDmC,EAkDwBH,EAAW/C,WAjDvDiC,GACFA,EAAaiB,IAFQ,IAACA,GA8CV,SAME,cAACF,EAAD,CAAM/B,SAAS,aATZ8B,EAAW/C,sB,8BClD5BmD,GAAwB,SAACC,GAAW,IAAD,EACHA,EAAMC,SAAlCC,EAD+B,EAC/BA,OAAQC,EADuB,EACvBA,gBAEhB,OAAIA,EACKD,EAAOE,MAAK,SAACC,GAAD,OAAYA,EAAO1G,KAAOwG,KAGxC,MAGHG,GAAsBC,YAAmB,MAAnBA,EAA0B,gBAAGC,EAAH,EAAGA,MAAH,MAAgB,CACpE,wBAAyB,CACvB/C,QAAS,QAEX,QAAS,CACP,wBAAyB,EACzB,oBAAqB+C,EAAMC,QAAQC,QACnC,+BAAgC,OAChC,wBAAyBF,EAAMC,QAAQE,KAAKC,QAC5C,iCAAkCJ,EAAMC,QAAQI,WAAWC,QAC3D,wBAAyBN,EAAMC,QAAQI,WAAWC,QAClD,qBAAsBN,EAAMC,QAAQI,WAAWC,QAC/C,sBAAuBC,YAAMP,EAAMC,QAAQG,QAAQI,KAAM,KACzD1I,MAAOkI,EAAMC,QAAQE,KAAKC,QAC1BK,WAAYT,EAAMU,WAAWD,YAE/B,oCAAqC,CACnCE,cAAe,OACfC,WAAY,QAEd,0CAA2C,CACzC9I,MAAOkI,EAAMC,QAAQE,KAAKU,WAE5B,sBAAuB,CACrBC,QAAS,YAkQEC,UA9PE,WACf,IAAMnI,EAAWC,cACXmI,EAAcC,iBAAO,MACrBC,EAAeC,aAAc,SAACnB,GAAD,OAAWA,EAAMoB,YAAYC,KAAK,SAHhD,EAI0BC,aAAY,SAAC9B,GAAD,OAAWA,EAAMC,YAApEC,EAJa,EAIbA,OAAQ6B,EAJK,EAILA,YAAaC,EAJR,EAIQA,cACvBC,EAAgBH,YAAY/B,IALb,EAMGmC,mBAAS,IAAIxJ,MANhB,mBAMdyE,EANc,KAMRgF,EANQ,OAOGD,mBAASR,EAC7B,WACA,gBATiB,mBAOd5C,EAPc,KAORsD,EAPQ,KAWrBC,qBAAU,WACRC,KAAIC,KAAK,CAAErK,MAAO,gBACjB,IAEHmK,qBAAU,WACRjJ,EAASoJ,iBACR,IAEHH,qBAAU,WACR,IAAMI,EAAajB,EAAYkB,QAE/B,GAAID,EAAY,CACd,IAAME,EAAcF,EAAWG,SACzB9C,EAAU4B,EAAe,WAAa,eAE5CiB,EAAYE,WAAW/C,GACvBsC,EAAQtC,MAET,CAAC4B,IAEJ,IAgEMoB,EAAiB,uCAAG,6BAAArJ,EAAA,6DAASvB,EAAT,EAASA,MAAT,kBAEhBkB,EAAS2B,YAAY7C,EAAMyB,GAAI,CACnCtB,OAAQH,EAAMG,OACdM,MAAOT,EAAMS,MACbH,IAAKN,EAAMM,OALS,sDAQtBoB,QAAQC,MAAR,MARsB,wDAAH,sDAYjBkJ,EAAe,uCAAG,6BAAAtJ,EAAA,6DAASvB,EAAT,EAASA,MAAT,kBAEdkB,EAAS2B,YAAY7C,EAAMyB,GAAI,CACnCtB,OAAQH,EAAMG,OACdM,MAAOT,EAAMS,MACbH,IAAKN,EAAMM,OALO,sDAQpBoB,QAAQC,MAAR,MARoB,wDAAH,sDAYfmJ,EAAmB,WACvB5J,EAAS6J,gBAGX,OACE,qCACE,cAAC,IAAD,UACE,6EAEF,cAACnH,EAAA,EAAD,CACEC,GAAI,CACFmH,gBAAiB,qBACjBC,UAAW,OACXC,GAAI,GAJR,SAOE,eAACC,EAAA,EAAD,CAAWC,UAAU,EAArB,UACE,eAACtE,EAAA,EAAD,CACEC,WAAS,EACTC,eAAe,gBACfC,QAAS,EAHX,UAKE,eAACH,EAAA,EAAD,CAAMI,MAAI,EAAV,UACE,cAACnD,EAAA,EAAD,CACE3D,MAAM,cACN+C,QAAQ,KAFV,qCAMA,eAACkI,EAAA,EAAD,CACEC,aAAW,aACXC,UAAW,cAACC,GAAA,EAAD,CAAkB7F,SAAS,UACtC9B,GAAI,CAAEc,GAAI,GAHZ,UAKE,cAAC8G,EAAA,EAAD,CACErL,MAAM,cACNsL,UAAWC,IACXC,GAAG,aACHzI,QAAQ,YAJV,uBAQA,cAACY,EAAA,EAAD,CACE3D,MAAM,gBACN+C,QAAQ,YAFV,4BAQJ,cAAC2D,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,cAACtD,EAAA,EAAD,CAAKC,GAAI,CAAEgI,GAAI,GAAf,SACE,cAAChG,EAAA,EAAD,CACEzF,MAAM,UACNqF,QAlGO,WACrBvE,EAAS4K,gBAkGKC,UAAW,cAACC,GAAA,EAAD,CAAUrG,SAAS,UAC9B9B,GAAI,CAAEgI,EAAG,GACT1I,QAAQ,YALV,8BAYN,cAACS,EAAA,EAAD,CAAKC,GAAI,CAAEc,GAAI,GAAf,SACE,cAAC,GAAD,CACEM,KAAMA,EACNuB,WA1HW,WACrB,IAAM+D,EAAajB,EAAYkB,QAE/B,GAAID,EAAY,CACd,IAAME,EAAcF,EAAWG,SAE/BD,EAAYwB,OACZhC,EAAQQ,EAAYyB,aAoHZzF,WAtIW,WACrB,IAAM8D,EAAajB,EAAYkB,QAE/B,GAAID,EAAY,CACd,IAAME,EAAcF,EAAWG,SAE/BD,EAAY0B,OACZlC,EAAQQ,EAAYyB,aAgIZxF,YA7JY,WACtB,IAAM6D,EAAajB,EAAYkB,QAE/B,GAAID,EAAY,CACd,IAAME,EAAcF,EAAWG,SAE/BD,EAAY2B,QACZnC,EAAQQ,EAAYyB,aAuJZvF,aAnJa,SAACiB,GACxB,IAAM2C,EAAajB,EAAYkB,QAE3BD,IACkBA,EAAWG,SAEnBC,WAAW/C,GACvBsC,EAAQtC,KA6IAhB,KAAMA,MAGV,cAACyF,EAAA,EAAD,CACExI,GAAI,CACFc,GAAI,EACJb,EAAG,GAHP,SAME,cAACsE,GAAD,UACE,cAAC,IAAD,CACEkE,wBAAsB,EACtBC,gBAAiB,EACjBC,WAAS,EACTC,UAAQ,EACRC,WAlHY,SAACC,GACzBzL,EAAS0L,YAAYD,EAAI3M,MAAMyB,MAkHnBoL,aAAa,QACbC,UAAWjC,EACXkC,yBAAuB,EACvBC,YAAapC,EACb5C,OAAQA,EACRiF,eAAe,EACfC,OAAQ,IACRC,YAAalI,EACbmI,YAAaxG,EACbyG,QAAS,CACPC,IACAC,IACAC,IACAC,IACAC,KAEFC,IAAKrE,EACLsE,cAAe,GACfC,OAjJY,SAAClB,GACzB,IAAMpC,EAAajB,EAAYkB,QAE3BD,GACkBA,EAAWG,SAEnBoD,WAGd5M,EAAS6M,YAAYpB,EAAIlM,MAAOkM,EAAIrM,OAyIxB0N,YAAU,EACVC,UAAQ,QAId,cAACC,EAAA,EAAD,CACE9J,WAAS,EACTgH,SAAS,KACT+C,QAASrD,EACTsD,KAAMvE,EAJR,SAOGA,GACC,cAAC,EAAD,CACE7J,MAAO+J,EACPjJ,cAAegK,EACf/J,SAAU+J,EACV9J,iBAAkB8J,EAClB7J,eAAgB6J,EAChB7K,MAAO6J,gB,iCC9TvB,mBAEMpE,EAAQ2I,YACZ,qBACEC,MAAM,6BACNC,QAAQ,YACRC,KAAK,eAHP,SAKE,sBACEC,SAAS,UACTC,EAAE,8MACFC,SAAS,cAEL,SAGKjJ,O,iCChBf,mBAEMsG,EAAOqC,YACX,qBACEC,MAAM,6BACNC,QAAQ,YACRC,KAAK,eAHP,SAKE,sBACEC,SAAS,UACTC,EAAE,wFACFC,SAAS,cAEL,QAGK3C","file":"static/js/60.6d21d8df.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { addMinutes } from 'date-fns';\nimport merge from 'lodash/merge';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { useSnackbar } from 'notistack';\nimport MobileDateTimePicker from '@material-ui/lab/MobileDateTimePicker';\nimport {\n  Box,\n  Button,\n  Divider,\n  FormControlLabel,\n  FormHelperText,\n  IconButton,\n  Switch,\n  TextField,\n  Typography\n} from '@material-ui/core';\nimport TrashIcon from '../../../icons/Trash';\nimport { createEvent, deleteEvent, updateEvent } from '../../../slices/calendar';\nimport { useDispatch } from '../../../store';\n\nconst getInitialValues = (event, range) => {\n  if (event) {\n    return merge({}, {\n      allDay: false,\n      color: '',\n      description: '',\n      end: addMinutes(new Date(), 30),\n      start: new Date(),\n      title: '',\n      submit: null\n    }, event);\n  }\n\n  if (range) {\n    return merge({}, {\n      allDay: false,\n      color: '',\n      description: '',\n      end: new Date(range.end),\n      start: new Date(range.start),\n      title: '',\n      submit: null\n    }, event);\n  }\n\n  return {\n    allDay: false,\n    color: '',\n    description: '',\n    end: addMinutes(new Date(), 30),\n    start: new Date(),\n    title: '',\n    submit: null\n  };\n};\n\nconst CalendarEventForm = (props) => {\n  const { event, onAddComplete, onCancel, onDeleteComplete, onEditComplete, range } = props;\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleDelete = async () => {\n    try {\n      await dispatch(deleteEvent(event.id));\n\n      if (onDeleteComplete) {\n        onDeleteComplete();\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const isCreating = !event;\n\n  return (\n    <Formik\n      initialValues={getInitialValues(event, range)}\n      validationSchema={Yup\n        .object()\n        .shape({\n          allDay: Yup.bool(),\n          description: Yup.string().max(5000),\n          end: Yup\n            .date()\n            .when('start',\n              (start, schema) => (start && schema.min(start,\n                'End date must be later than start date'))),\n          start: Yup.date(),\n          title: Yup\n            .string()\n            .max(255)\n            .required('Title is required')\n        })}\n      onSubmit={async (values, { resetForm, setErrors, setStatus, setSubmitting }) => {\n        try {\n          const data = {\n            allDay: values.allDay,\n            description: values.description,\n            end: values.end,\n            start: values.start,\n            title: values.title\n          };\n\n          if (event) {\n            await dispatch(updateEvent(event.id, data));\n          } else {\n            await dispatch(createEvent(data));\n          }\n\n          resetForm();\n          setStatus({ success: true });\n          setSubmitting(false);\n          enqueueSnackbar('Calendar updated', {\n            anchorOrigin: {\n              horizontal: 'right',\n              vertical: 'top'\n            },\n            variant: 'success'\n          });\n\n          if (isCreating && onAddComplete) {\n            onAddComplete();\n          }\n\n          if (!isCreating && onEditComplete) {\n            onEditComplete();\n          }\n        } catch (err) {\n          console.error(err);\n          setStatus({ success: false });\n          setErrors({ submit: err.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        setFieldValue,\n        touched,\n        values\n      }) => (\n        <form onSubmit={handleSubmit}>\n          <Box sx={{ p: 3 }}>\n            <Typography\n              align=\"center\"\n              color=\"textPrimary\"\n              gutterBottom\n              variant=\"h5\"\n            >\n              {isCreating\n                ? 'Add Event'\n                : 'Edit Event'}\n            </Typography>\n          </Box>\n          <Box sx={{ p: 3 }}>\n            <TextField\n              error={Boolean(touched.title && errors.title)}\n              fullWidth\n              helperText={touched.title && errors.title}\n              label=\"Title\"\n              name=\"title\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              value={values.title}\n              variant=\"outlined\"\n            />\n            <Box sx={{ mt: 2 }}>\n              <TextField\n                error={Boolean(touched.description && errors.description)}\n                fullWidth\n                helperText={touched.description && errors.description}\n                label=\"Description\"\n                name=\"description\"\n                onBlur={handleBlur}\n                onChange={handleChange}\n                value={values.description}\n                variant=\"outlined\"\n              />\n            </Box>\n            <Box sx={{ mt: 2 }}>\n              <FormControlLabel\n                control={(\n                  <Switch\n                    checked={values.allDay}\n                    color=\"primary\"\n                    name=\"allDay\"\n                    onChange={handleChange}\n                  />\n                )}\n                label=\"All day\"\n              />\n            </Box>\n            <Box sx={{ mt: 2 }}>\n              <MobileDateTimePicker\n                label=\"Start date\"\n                onChange={(date) => setFieldValue('start', date)}\n                renderInput={(inputProps) => (\n                  <TextField\n                    fullWidth\n                    variant=\"outlined\"\n                    {...inputProps}\n                  />\n                )}\n                value={values.start}\n              />\n            </Box>\n            <Box sx={{ mt: 2 }}>\n              <MobileDateTimePicker\n                label=\"End date\"\n                onChange={(date) => setFieldValue('end', date)}\n                renderInput={(inputProps) => (\n                  <TextField\n                    fullWidth\n                    variant=\"outlined\"\n                    {...inputProps}\n                  />\n                )}\n                value={values.end}\n              />\n            </Box>\n            {Boolean(touched.end && errors.end) && (\n              <Box sx={{ mt: 2 }}>\n                <FormHelperText error>\n                  {errors.end}\n                </FormHelperText>\n              </Box>\n            )}\n          </Box>\n          <Divider />\n          <Box\n            sx={{\n              alignItems: 'center',\n              display: 'flex',\n              p: 2\n            }}\n          >\n            {!isCreating && (\n              <IconButton onClick={() => handleDelete()}>\n                <TrashIcon fontSize=\"small\" />\n              </IconButton>\n            )}\n            <Box sx={{ flexGrow: 1 }} />\n            <Button\n              color=\"primary\"\n              onClick={onCancel}\n              variant=\"text\"\n            >\n              Cancel\n            </Button>\n            <Button\n              color=\"primary\"\n              disabled={isSubmitting}\n              sx={{ ml: 1 }}\n              type=\"submit\"\n              variant=\"contained\"\n            >\n              Confirm\n            </Button>\n          </Box>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nCalendarEventForm.propTypes = {\n  // @ts-ignore\n  event: PropTypes.object,\n  onAddComplete: PropTypes.func,\n  onCancel: PropTypes.func,\n  onDeleteComplete: PropTypes.func,\n  onEditComplete: PropTypes.func,\n  // @ts-ignore\n  range: PropTypes.object\n};\n\nexport default CalendarEventForm;\n","import PropTypes from 'prop-types';\nimport { format } from 'date-fns';\nimport {\n  Box,\n  Button,\n  ButtonGroup,\n  Grid,\n  Hidden,\n  IconButton,\n  Tooltip,\n  Typography\n} from '@material-ui/core';\nimport ViewConfigIcon from '@material-ui/icons/ViewComfy';\nimport ViewWeekIcon from '@material-ui/icons/ViewWeek';\nimport ViewDayIcon from '@material-ui/icons/ViewDay';\nimport ViewAgendaIcon from '@material-ui/icons/ViewAgenda';\n\nconst viewOptions = [\n  {\n    icon: ViewConfigIcon,\n    label: 'Month',\n    value: 'dayGridMonth'\n  },\n  {\n    icon: ViewWeekIcon,\n    label: 'Week',\n    value: 'timeGridWeek'\n  },\n  {\n    icon: ViewDayIcon,\n    label: 'Day',\n    value: 'timeGridDay'\n  },\n  {\n    icon: ViewAgendaIcon,\n    label: 'Agenda',\n    value: 'listWeek'\n  }\n];\n\nconst CalendarToolbar = (props) => {\n  const { date, onDateNext, onDatePrev, onDateToday, onViewChange, view, ...other } = props;\n\n  const handleViewChange = (newView) => {\n    if (onViewChange) {\n      onViewChange(newView);\n    }\n  };\n\n  return (\n    <Grid\n      alignItems=\"center\"\n      container\n      justifyContent=\"space-between\"\n      spacing={3}\n      {...other}\n    >\n      <Grid item>\n        <ButtonGroup size=\"small\">\n          <Button onClick={onDatePrev}>\n            Prev\n          </Button>\n          <Button onClick={onDateToday}>\n            Today\n          </Button>\n          <Button onClick={onDateNext}>\n            Next\n          </Button>\n        </ButtonGroup>\n      </Grid>\n      <Hidden smDown>\n        <Grid item>\n          <Typography\n            color=\"textPrimary\"\n            variant=\"h3\"\n          >\n            {format(date, 'MMMM y')}\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Box sx={{ color: 'text.primary' }}>\n            {viewOptions.map((viewOption) => {\n              const Icon = viewOption.icon;\n\n              return (\n                <Tooltip\n                  key={viewOption.value}\n                  title={viewOption.label}\n                >\n                  <IconButton\n                    color={viewOption.value === view\n                      ? 'primary'\n                      : 'inherit'}\n                    onClick={() => handleViewChange(viewOption.value)}\n                  >\n                    <Icon fontSize=\"small\" />\n                  </IconButton>\n                </Tooltip>\n              );\n            })}\n          </Box>\n        </Grid>\n      </Hidden>\n    </Grid>\n  );\n};\n\nCalendarToolbar.propTypes = {\n  children: PropTypes.node,\n  date: PropTypes.instanceOf(Date).isRequired,\n  onAddClick: PropTypes.func,\n  onDateNext: PropTypes.func,\n  onDatePrev: PropTypes.func,\n  onDateToday: PropTypes.func,\n  onViewChange: PropTypes.func,\n  view: PropTypes.oneOf([\n    'dayGridMonth',\n    'timeGridWeek',\n    'timeGridDay',\n    'listWeek'\n  ])\n};\n\nexport default CalendarToolbar;\n","import { useState, useRef, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Helmet } from 'react-helmet-async';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport listPlugin from '@fullcalendar/list';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport timelinePlugin from '@fullcalendar/timeline';\nimport {\n  Box,\n  Breadcrumbs,\n  Button,\n  Card,\n  Container,\n  Dialog,\n  Grid,\n  Link,\n  Typography\n} from '@material-ui/core';\nimport { alpha, experimentalStyled } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { CalendarEventForm, CalendarToolbar } from '../../components/dashboard/calendar';\nimport ChevronRightIcon from '../../icons/ChevronRight';\nimport PlusIcon from '../../icons/Plus';\nimport gtm from '../../lib/gtm';\nimport {\n  closeModal,\n  getEvents,\n  openModal,\n  selectEvent,\n  selectRange,\n  updateEvent\n} from '../../slices/calendar';\nimport { useDispatch, useSelector } from '../../store';\n\nconst selectedEventSelector = (state) => {\n  const { events, selectedEventId } = state.calendar;\n\n  if (selectedEventId) {\n    return events.find((_event) => _event.id === selectedEventId);\n  }\n\n  return null;\n};\n\nconst FullCalendarWrapper = experimentalStyled('div')(({ theme }) => ({\n  '& .fc-license-message': {\n    display: 'none'\n  },\n  '& .fc': {\n    '--fc-bg-event-opacity': 1,\n    '--fc-border-color': theme.palette.divider,\n    '--fc-daygrid-event-dot-width': '10px',\n    '--fc-event-text-color': theme.palette.text.primary,\n    '--fc-list-event-hover-bg-color': theme.palette.background.default,\n    '--fc-neutral-bg-color': theme.palette.background.default,\n    '--fc-page-bg-color': theme.palette.background.default,\n    '--fc-today-bg-color': alpha(theme.palette.primary.main, 0.25),\n    color: theme.palette.text.primary,\n    fontFamily: theme.typography.fontFamily\n  },\n  '& .fc .fc-col-header-cell-cushion': {\n    paddingBottom: '10px',\n    paddingTop: '10px'\n  },\n  '& .fc .fc-day-other .fc-daygrid-day-top': {\n    color: theme.palette.text.secondary\n  },\n  '& .fc-daygrid-event': {\n    padding: '10px'\n  }\n}));\n\nconst Calendar = () => {\n  const dispatch = useDispatch();\n  const calendarRef = useRef(null);\n  const mobileDevice = useMediaQuery((theme) => theme.breakpoints.down('sm'));\n  const { events, isModalOpen, selectedRange } = useSelector((state) => state.calendar);\n  const selectedEvent = useSelector(selectedEventSelector);\n  const [date, setDate] = useState(new Date());\n  const [view, setView] = useState(mobileDevice\n    ? 'listWeek'\n    : 'dayGridMonth');\n\n  useEffect(() => {\n    gtm.push({ event: 'page_view' });\n  }, []);\n\n  useEffect(() => {\n    dispatch(getEvents());\n  }, []);\n\n  useEffect(() => {\n    const calendarEl = calendarRef.current;\n\n    if (calendarEl) {\n      const calendarApi = calendarEl.getApi();\n      const newView = mobileDevice ? 'listWeek' : 'dayGridMonth';\n\n      calendarApi.changeView(newView);\n      setView(newView);\n    }\n  }, [mobileDevice]);\n\n  const handleDateToday = () => {\n    const calendarEl = calendarRef.current;\n\n    if (calendarEl) {\n      const calendarApi = calendarEl.getApi();\n\n      calendarApi.today();\n      setDate(calendarApi.getDate());\n    }\n  };\n\n  const handleViewChange = (newView) => {\n    const calendarEl = calendarRef.current;\n\n    if (calendarEl) {\n      const calendarApi = calendarEl.getApi();\n\n      calendarApi.changeView(newView);\n      setView(newView);\n    }\n  };\n\n  const handleDatePrev = () => {\n    const calendarEl = calendarRef.current;\n\n    if (calendarEl) {\n      const calendarApi = calendarEl.getApi();\n\n      calendarApi.prev();\n      setDate(calendarApi.getDate());\n    }\n  };\n\n  const handleDateNext = () => {\n    const calendarEl = calendarRef.current;\n\n    if (calendarEl) {\n      const calendarApi = calendarEl.getApi();\n\n      calendarApi.next();\n      setDate(calendarApi.getDate());\n    }\n  };\n\n  const handleAddClick = () => {\n    dispatch(openModal());\n  };\n\n  const handleRangeSelect = (arg) => {\n    const calendarEl = calendarRef.current;\n\n    if (calendarEl) {\n      const calendarApi = calendarEl.getApi();\n\n      calendarApi.unselect();\n    }\n\n    dispatch(selectRange(arg.start, arg.end));\n  };\n\n  const handleEventSelect = (arg) => {\n    dispatch(selectEvent(arg.event.id));\n  };\n\n  const handleEventResize = async ({ event }) => {\n    try {\n      await dispatch(updateEvent(event.id, {\n        allDay: event.allDay,\n        start: event.start,\n        end: event.end\n      }));\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleEventDrop = async ({ event }) => {\n    try {\n      await dispatch(updateEvent(event.id, {\n        allDay: event.allDay,\n        start: event.start,\n        end: event.end\n      }));\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleModalClose = () => {\n    dispatch(closeModal());\n  };\n\n  return (\n    <>\n      <Helmet>\n        <title>Dashboard: Calendar | Material Kit Pro</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 8\n        }}\n      >\n        <Container maxWidth={false}>\n          <Grid\n            container\n            justifyContent=\"space-between\"\n            spacing={3}\n          >\n            <Grid item>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"h5\"\n              >\n                Here&apos;s what you planned\n              </Typography>\n              <Breadcrumbs\n                aria-label=\"breadcrumb\"\n                separator={<ChevronRightIcon fontSize=\"small\" />}\n                sx={{ mt: 1 }}\n              >\n                <Link\n                  color=\"textPrimary\"\n                  component={RouterLink}\n                  to=\"/dashboard\"\n                  variant=\"subtitle2\"\n                >\n                  Dashboard\n                </Link>\n                <Typography\n                  color=\"textSecondary\"\n                  variant=\"subtitle2\"\n                >\n                  Calendar\n                </Typography>\n              </Breadcrumbs>\n            </Grid>\n            <Grid item>\n              <Box sx={{ m: -1 }}>\n                <Button\n                  color=\"primary\"\n                  onClick={handleAddClick}\n                  startIcon={<PlusIcon fontSize=\"small\" />}\n                  sx={{ m: 1 }}\n                  variant=\"contained\"\n                >\n                  New Event\n                </Button>\n              </Box>\n            </Grid>\n          </Grid>\n          <Box sx={{ mt: 3 }}>\n            <CalendarToolbar\n              date={date}\n              onDateNext={handleDateNext}\n              onDatePrev={handleDatePrev}\n              onDateToday={handleDateToday}\n              onViewChange={handleViewChange}\n              view={view}\n            />\n          </Box>\n          <Card\n            sx={{\n              mt: 3,\n              p: 2\n            }}\n          >\n            <FullCalendarWrapper>\n              <FullCalendar\n                allDayMaintainDuration\n                dayMaxEventRows={3}\n                droppable\n                editable\n                eventClick={handleEventSelect}\n                eventDisplay=\"block\"\n                eventDrop={handleEventDrop}\n                eventResizableFromStart\n                eventResize={handleEventResize}\n                events={events}\n                headerToolbar={false}\n                height={800}\n                initialDate={date}\n                initialView={view}\n                plugins={[\n                  dayGridPlugin,\n                  interactionPlugin,\n                  listPlugin,\n                  timeGridPlugin,\n                  timelinePlugin\n                ]}\n                ref={calendarRef}\n                rerenderDelay={10}\n                select={handleRangeSelect}\n                selectable\n                weekends\n              />\n            </FullCalendarWrapper>\n          </Card>\n          <Dialog\n            fullWidth\n            maxWidth=\"sm\"\n            onClose={handleModalClose}\n            open={isModalOpen}\n          >\n            {/* Dialog renders its body even if not open */}\n            {isModalOpen && (\n              <CalendarEventForm\n                event={selectedEvent}\n                onAddComplete={handleModalClose}\n                onCancel={handleModalClose}\n                onDeleteComplete={handleModalClose}\n                onEditComplete={handleModalClose}\n                range={selectedRange}\n              />\n            )}\n          </Dialog>\n        </Container>\n      </Box>\n    </>\n  );\n};\n\nexport default Calendar;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Trash = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Trash'\n);\n\nexport default Trash;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Plus = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M10 5a1 1 0 011 1v3h3a1 1 0 110 2h-3v3a1 1 0 11-2 0v-3H6a1 1 0 110-2h3V6a1 1 0 011-1z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Plus'\n);\n\nexport default Plus;\n"],"sourceRoot":""}