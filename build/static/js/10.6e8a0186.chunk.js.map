{"version":3,"sources":["components/dashboard/order/OrderItems.js","components/dashboard/order/OrderListBulkActions.js","components/dashboard/order/OrderListTable.js","components/dashboard/order/OrderSummary.js","icons/ArrowRight.js","icons/DotsHorizontal.js","components/Label.js","icons/Download.js","icons/PencilAlt.js","icons/Duplicate.js","icons/Trash.js","../node_modules/@material-ui/core/CardHeader/cardHeaderClasses.js","../node_modules/@material-ui/core/CardHeader/CardHeader.js","icons/Archive.js","icons/DocumentText.js","../node_modules/@material-ui/core/internal/svg-icons/MoreHoriz.js","../node_modules/@material-ui/core/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@material-ui/core/Breadcrumbs/breadcrumbsClasses.js","../node_modules/@material-ui/core/Breadcrumbs/Breadcrumbs.js","components/MoreMenu.js","icons/Check.js","../node_modules/@material-ui/core/CardActions/cardActionsClasses.js","../node_modules/@material-ui/core/CardActions/CardActions.js","../node_modules/@material-ui/core/internal/svg-icons/KeyboardArrowLeft.js","../node_modules/@material-ui/core/internal/svg-icons/KeyboardArrowRight.js"],"names":["OrderItems","props","orderItems","other","Card","CardHeader","title","Divider","Scrollbar","Box","sx","minWidth","Table","TableHead","TableRow","TableCell","TableBody","map","item","Typography","color","variant","quantity","name","billingCycle","numeral","unitAmount","format","currency","id","TablePagination","component","count","length","onPageChange","onRowsPerPageChange","page","rowsPerPage","rowsPerPageOptions","OrderListBulkActions","onDelete","onMarkPaid","onMarkUnpaid","open","selected","Drawer","anchor","PaperProps","elevation","p","Grid","alignItems","container","spacing","Hidden","smDown","md","xs","display","flexWrap","justifyContent","ml","Button","onClick","startIcon","Check","fontSize","X","Trash","defaultProps","getStatusLabel","paymentStatus","canceled","text","completed","pending","rejected","Label","OrderListTable","orders","useState","selectedOrders","setSelectedOrders","setPage","limit","setLimit","paginatedOrders","slice","applyPagination","enableBulkActions","selectedSomeOrders","selectedAllOrders","action","MoreMenu","padding","Checkbox","checked","indeterminate","onChange","event","target","order","align","isOrderSelected","includes","hover","indexOf","orderId","prevSelected","filter","value","number","createdAt","customer","email","paymentMethod","totalAmount","status","IconButton","PencilAlt","RouterLink","to","ArrowRight","newPage","parseInt","statusOptions","OrderSummary","setStatus","address1","city","country","coupon","TextField","fullWidth","select","SelectProps","native","option","CardActions","createSvgIcon","xmlns","viewBox","fill","fillRule","d","clipRule","DotsHorizontal","LabelRoot","experimentalStyled","theme","styleProps","backgroundColor","palette","main","contrastText","borderRadius","shape","cursor","flexGrow","flexShrink","fontFamily","typography","pxToRem","fontWeight","fontWeightMedium","letterSpacing","paddingBottom","paddingLeft","paddingRight","paddingTop","textTransform","whiteSpace","children","Download","Duplicate","getCardHeaderUtilityClass","slot","generateUtilityClass","cardHeaderClasses","generateUtilityClasses","CardHeaderRoot","overridesResolver","styles","deepmerge","avatar","content","subheader","root","CardHeaderAvatar","flex","marginRight","CardHeaderAction","alignSelf","marginTop","marginBottom","CardHeaderContent","React","inProps","ref","useThemeProps","className","disableTypography","subheaderProp","subheaderTypographyProps","titleProp","titleTypographyProps","_objectWithoutPropertiesLoose","_extends","classes","composeClasses","useUtilityClasses","type","clsx","as","Archive","DocumentText","BreadcrumbCollapsedButton","ButtonBase","marginLeft","mode","grey","boxShadow","shadows","emphasize","BreadcrumbCollapsedIcon","MoreHorizIcon","width","height","BreadcrumbCollapsed","focusRipple","getBreadcrumbsUtilityClass","breadcrumbsClasses","BreadcrumbsRoot","ol","li","separator","BreadcrumbsOl","margin","listStyle","BreadcrumbsSeparator","userSelect","Breadcrumbs","expandText","itemsAfterCollapse","itemsBeforeCollapse","maxItems","expanded","setExpanded","listRef","allItems","toArray","child","index","key","items","reduce","acc","current","concat","push","insertSeparators","focusable","querySelector","focus","renderItemsBeforeAndAfter","anchorRef","useRef","openMenu","setOpenMenu","anchorEl","anchorOrigin","horizontal","vertical","onClose","maxWidth","transformOrigin","primary","memo","getCardActionsUtilityClass","CardActionsRoot","disableSpacing","slots"],"mappings":"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","file":"static/js/10.6e8a0186.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport numeral from 'numeral';\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography\n} from '@material-ui/core';\nimport Scrollbar from '../../Scrollbar';\n\nconst OrderItems = (props) => {\n  const { orderItems, ...other } = props;\n\n  return (\n    <Card {...other}>\n      <CardHeader title=\"Order items\" />\n      <Divider />\n      <Scrollbar>\n        <Box sx={{ minWidth: 700 }}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>\n                  Description\n                </TableCell>\n                <TableCell>\n                  Billing Cycle\n                </TableCell>\n                <TableCell>\n                  Amount\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {orderItems.map((item) => (\n                <TableRow key={item.id}>\n                  <TableCell>\n                    <Typography\n                      color=\"textPrimary\"\n                      variant=\"subtitle2\"\n                    >\n                      {item.quantity}\n                      {' '}\n                      x\n                      {' '}\n                      {item.name}\n                    </Typography>\n                  </TableCell>\n                  <TableCell>\n                    {item.billingCycle}\n                  </TableCell>\n                  <TableCell>\n                    {numeral(item.unitAmount)\n                      .format(`${item.currency}0,0.00`)}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </Scrollbar>\n      <TablePagination\n        component=\"div\"\n        count={orderItems.length}\n        onPageChange={() => { }}\n        onRowsPerPageChange={() => { }}\n        page={0}\n        rowsPerPage={5}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </Card>\n  );\n};\n\nOrderItems.propTypes = {\n  orderItems: PropTypes.array.isRequired\n};\n\nexport default OrderItems;\n","import PropTypes from 'prop-types';\nimport { Box, Button, Drawer, Grid, Hidden, Typography } from '@material-ui/core';\nimport CheckIcon from '../../../icons/Check';\nimport TrashIcon from '../../../icons/Trash';\nimport XIcon from '../../../icons/X';\n\nconst OrderListBulkActions = (props) => {\n  const { onDelete, onMarkPaid, onMarkUnpaid, open, selected, ...other } = props;\n\n  return (\n    <Drawer\n      anchor=\"bottom\"\n      open={open}\n      PaperProps={{ elevation: 1 }}\n      variant=\"persistent\"\n    >\n      <Box\n        sx={{ p: 2 }}\n        {...other}\n      >\n        <Grid\n          alignItems=\"center\"\n          container\n          spacing={2}\n        >\n          <Hidden smDown>\n            <Grid\n              item\n              md={3}\n            >\n              <Typography\n                color=\"textSecondary\"\n                variant=\"subtitle1\"\n              >\n                {selected.length}\n                {' '}\n                selected\n              </Typography>\n            </Grid>\n          </Hidden>\n          <Grid\n            item\n            md={6}\n            xs={12}\n          >\n            <Box\n              sx={{\n                display: 'flex',\n                flexWrap: 'wrap',\n                justifyContent: 'center',\n                '& > * + *': {\n                  ml: 2\n                }\n              }}\n            >\n              <Button\n                color=\"primary\"\n                onClick={onMarkPaid}\n                startIcon={<CheckIcon fontSize=\"small\" />}\n                variant=\"text\"\n              >\n                Mark Paid\n              </Button>\n              <Button\n                color=\"primary\"\n                onClick={onMarkUnpaid}\n                startIcon={<XIcon fontSize=\"small\" />}\n                variant=\"text\"\n              >\n                Mark Unpaid\n              </Button>\n              <Button\n                color=\"primary\"\n                onClick={onDelete}\n                startIcon={<TrashIcon fontSize=\"small\" />}\n                variant=\"text\"\n              >\n                Delete\n              </Button>\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    </Drawer>\n  );\n};\n\nOrderListBulkActions.propTypes = {\n  onDelete: PropTypes.func,\n  onMarkPaid: PropTypes.func,\n  onMarkUnpaid: PropTypes.func,\n  open: PropTypes.bool,\n  selected: PropTypes.array.isRequired\n};\n\nOrderListBulkActions.defaultProps = {\n  open: false\n};\n\nexport default OrderListBulkActions;\n","import { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { format } from 'date-fns';\nimport numeral from 'numeral';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Checkbox,\n  Divider,\n  IconButton,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography\n} from '@material-ui/core';\nimport ArrowRightIcon from '../../../icons/ArrowRight';\nimport PencilAltIcon from '../../../icons/PencilAlt';\nimport Label from '../../Label';\nimport MoreMenu from '../../MoreMenu';\nimport Scrollbar from '../../Scrollbar';\nimport OrderListBulkActions from './OrderListBulkActions';\n\nconst getStatusLabel = (paymentStatus) => {\n  const map = {\n    canceled: {\n      color: 'error',\n      text: 'Canceled'\n    },\n    completed: {\n      color: 'success',\n      text: 'Completed'\n    },\n    pending: {\n      color: 'warning',\n      text: 'Pending'\n    },\n    rejected: {\n      color: 'error',\n      text: 'Rejected'\n    }\n  };\n\n  const { text, color } = map[paymentStatus];\n\n  return (\n    <Label color={color}>\n      {text}\n    </Label>\n  );\n};\n\nconst applyPagination = (orders, page, limit) => orders\n  .slice(page * limit, page * limit + limit);\n\nconst OrderListTable = (props) => {\n  const { orders, ...other } = props;\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [limit, setLimit] = useState(5);\n\n  const handleSelectAllOrders = (event) => {\n    setSelectedOrders(event.target.checked\n      ? orders.map((order) => order.id)\n      : []);\n  };\n\n  const handleSelectOneOrder = (event, orderId) => {\n    if (!selectedOrders.includes(orderId)) {\n      setSelectedOrders((prevSelected) => [...prevSelected, orderId]);\n    } else {\n      setSelectedOrders((prevSelected) => prevSelected.filter((id) => id !== orderId));\n    }\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(parseInt(event.target.value, 10));\n  };\n\n  const paginatedOrders = applyPagination(orders, page, limit);\n  const enableBulkActions = selectedOrders.length > 0;\n  const selectedSomeOrders = selectedOrders.length > 0 && selectedOrders.length < orders.length;\n  const selectedAllOrders = selectedOrders.length === orders.length;\n\n  return (\n    <>\n      <Card {...other}>\n        <CardHeader\n          action={<MoreMenu />}\n          title=\"Orders\"\n        />\n        <Divider />\n        <Scrollbar>\n          <Box sx={{ minWidth: 1150 }}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      checked={selectedAllOrders}\n                      color=\"primary\"\n                      indeterminate={selectedSomeOrders}\n                      onChange={handleSelectAllOrders}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    Number\n                  </TableCell>\n                  <TableCell>\n                    Customer\n                  </TableCell>\n                  <TableCell>\n                    Method\n                  </TableCell>\n                  <TableCell>\n                    Total\n                  </TableCell>\n                  <TableCell>\n                    Status\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    Actions\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {paginatedOrders.map((order) => {\n                  const isOrderSelected = selectedOrders.includes(order.id);\n\n                  return (\n                    <TableRow\n                      hover\n                      key={order.id}\n                      selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isOrderSelected}\n                          color=\"primary\"\n                          onChange={(event) => handleSelectOneOrder(event, order.id)}\n                          value={isOrderSelected}\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <Typography\n                          color=\"textPrimary\"\n                          variant=\"subtitle2\"\n                        >\n                          {order.number}\n                        </Typography>\n                        <Typography\n                          color=\"textSecondary\"\n                          variant=\"body2\"\n                        >\n                          {format(order.createdAt, 'dd MMM yyyy | HH:mm')}\n                        </Typography>\n                      </TableCell>\n                      <TableCell>\n                        <Typography\n                          color=\"textPrimary\"\n                          variant=\"subtitle2\"\n                        >\n                          {order.customer.name}\n                        </Typography>\n                        <Typography\n                          color=\"textSecondary\"\n                          variant=\"body2\"\n                        >\n                          {order.customer.email}\n                        </Typography>\n                      </TableCell>\n                      <TableCell>\n                        {order.paymentMethod}\n                      </TableCell>\n                      <TableCell>\n                        {numeral(order.totalAmount)\n                          .format(`${order.currency}0,0.00`)}\n                      </TableCell>\n                      <TableCell>\n                        {getStatusLabel(order.status)}\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <IconButton>\n                          <PencilAltIcon fontSize=\"small\" />\n                        </IconButton>\n                        <IconButton\n                          component={RouterLink}\n                          to=\"/dashboard/orders/1\"\n                        >\n                          <ArrowRightIcon fontSize=\"small\" />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </Box>\n        </Scrollbar>\n        <TablePagination\n          component=\"div\"\n          count={orders.length}\n          onPageChange={handlePageChange}\n          onRowsPerPageChange={handleLimitChange}\n          page={page}\n          rowsPerPage={limit}\n          rowsPerPageOptions={[5, 10, 25]}\n        />\n      </Card>\n      <OrderListBulkActions\n        open={enableBulkActions}\n        selected={selectedOrders}\n      />\n    </>\n  );\n};\n\nOrderListTable.propTypes = {\n  orders: PropTypes.array.isRequired\n};\n\nexport default OrderListTable;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { format } from 'date-fns';\nimport numeral from 'numeral';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardHeader,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  TextField,\n  Typography\n} from '@material-ui/core';\nimport ReceiptIcon from '@material-ui/icons/Receipt';\n\nconst statusOptions = ['Canceled', 'Completed', 'Rejected'];\n\nconst OrderSummary = (props) => {\n  const { order, ...other } = props;\n  const [status, setStatus] = useState(statusOptions[0]);\n\n  const handleChange = (event) => {\n    setStatus(event.target.value);\n  };\n\n  return (\n    <Card {...other}>\n      <CardHeader title=\"Order info\" />\n      <Divider />\n      <Table>\n        <TableBody>\n          <TableRow>\n            <TableCell>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"subtitle2\"\n              >\n                Customer\n              </Typography>\n            </TableCell>\n            <TableCell>\n              <div>\n                {order.customer.name}\n              </div>\n              <div>\n                {order.customer.address1}\n              </div>\n              <div>\n                {order.customer.city}\n              </div>\n              <div>\n                {order.customer.country}\n              </div>\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"subtitle2\"\n              >\n                ID\n              </Typography>\n            </TableCell>\n            <TableCell>\n              #\n              {order.id}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"subtitle2\"\n              >\n                Number\n              </Typography>\n            </TableCell>\n            <TableCell>\n              {order.number}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"subtitle2\"\n              >\n                Date\n              </Typography>\n            </TableCell>\n            <TableCell>\n              {format(order.createdAt, 'dd/MM/yyyy HH:mm')}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"subtitle2\"\n              >\n                Promotion Code\n              </Typography>\n            </TableCell>\n            <TableCell>\n              {order.coupon ? order.coupon : 'N/A'}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"subtitle2\"\n              >\n                Total Amount\n              </Typography>\n            </TableCell>\n            <TableCell>\n              {numeral(order.totalAmount)\n                .format(`${order.currency}0,0.00`)}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>\n              <Typography\n                color=\"textPrimary\"\n                variant=\"subtitle2\"\n              >\n                Status\n              </Typography>\n            </TableCell>\n            <TableCell>\n              <TextField\n                fullWidth\n                name=\"option\"\n                onChange={handleChange}\n                select\n                SelectProps={{ native: true }}\n                value={status}\n                variant=\"outlined\"\n              >\n                {statusOptions.map((option) => (\n                  <option\n                    key={option}\n                    value={option}\n                  >\n                    {option}\n                  </option>\n                ))}\n              </TextField>\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n      <CardActions>\n        <Button\n          color=\"primary\"\n          startIcon={<ReceiptIcon fontSize=\"small\" />}\n          variant=\"text\"\n        >\n          Resend Invoice\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nOrderSummary.propTypes = {\n  // @ts-ignore\n  order: PropTypes.object.isRequired\n};\n\nexport default OrderSummary;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst ArrowRight = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'ArrowRight'\n);\n\nexport default ArrowRight;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst DotsHorizontal = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M6 10a2 2 0 11-4 0 2 2 0 014 0zM12 10a2 2 0 11-4 0 2 2 0 014 0zM16 12a2 2 0 100-4 2 2 0 000 4z\" />\n  </svg>, 'DotsHorizontal'\n);\n\nexport default DotsHorizontal;\n","import PropTypes from 'prop-types';\nimport { experimentalStyled } from '@material-ui/core/styles';\n\nconst LabelRoot = experimentalStyled('span')((({ theme, styleProps }) => {\n  const backgroundColor = theme.palette[styleProps.color].main;\n  const color = theme.palette[styleProps.color].contrastText;\n\n  return {\n    alignItems: 'center',\n    backgroundColor,\n    borderRadius: theme.shape.borderRadius,\n    color,\n    cursor: 'default',\n    display: 'inline-flex',\n    flexGrow: 0,\n    flexShrink: 0,\n    fontFamily: theme.typography.fontFamily,\n    fontSize: theme.typography.pxToRem(11),\n    fontWeight: theme.typography.fontWeightMedium,\n    justifyContent: 'center',\n    letterSpacing: 0.5,\n    minWidth: 20,\n    paddingBottom: theme.spacing(0.5),\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1),\n    paddingTop: theme.spacing(0.5),\n    textTransform: 'uppercase',\n    whiteSpace: 'nowrap'\n  };\n}));\n\nconst Label = (props) => {\n  const { color = 'primary', children, ...other } = props;\n\n  const styleProps = { color };\n\n  return (\n    <LabelRoot\n      styleProps={styleProps}\n      {...other}\n    >\n      {children}\n    </LabelRoot>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  color: PropTypes.oneOf([\n    'primary',\n    'secondary',\n    'error',\n    'warning',\n    'success'\n  ])\n};\n\nexport default Label;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Download = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm3.293-7.707a1 1 0 011.414 0L9 10.586V3a1 1 0 112 0v7.586l1.293-1.293a1 1 0 111.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Download'\n);\n\nexport default Download;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst PencilAlt = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M17.414 2.586a2 2 0 00-2.828 0L7 10.172V13h2.828l7.586-7.586a2 2 0 000-2.828z\" />\n    <path\n      fillRule=\"evenodd\"\n      d=\"M2 6a2 2 0 012-2h4a1 1 0 010 2H4v10h10v-4a1 1 0 112 0v4a2 2 0 01-2 2H4a2 2 0 01-2-2V6z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'PencilAlt'\n);\n\nexport default PencilAlt;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Duplicate = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M7 9a2 2 0 012-2h6a2 2 0 012 2v6a2 2 0 01-2 2H9a2 2 0 01-2-2V9z\" />\n    <path d=\"M5 3a2 2 0 00-2 2v6a2 2 0 002 2V5h8a2 2 0 00-2-2H5z\" />\n  </svg>, 'Duplicate'\n);\n\nexport default Duplicate;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Trash = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Trash'\n);\n\nexport default Trash;\n","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getCardHeaderUtilityClass(slot) {\n  return generateUtilityClass('MuiCardHeader', slot);\n}\nconst cardHeaderClasses = generateUtilityClasses('MuiCardHeader', ['root', 'avatar', 'action', 'content', 'title', 'subheader']);\nexport default cardHeaderClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport Typography from '../Typography';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport cardHeaderClasses, { getCardHeaderUtilityClass } from './cardHeaderClasses';\n\nconst overridesResolver = (props, styles) => {\n  return deepmerge({\n    [`& .${cardHeaderClasses.avatar}`]: styles.avatar,\n    [`& .${cardHeaderClasses.action}`]: styles.action,\n    [`& .${cardHeaderClasses.content}`]: styles.content,\n    [`& .${cardHeaderClasses.title}`]: styles.title,\n    [`& .${cardHeaderClasses.subheader}`]: styles.subheader\n  }, styles.root || {});\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar'],\n    action: ['action'],\n    content: ['content'],\n    title: ['title'],\n    subheader: ['subheader']\n  };\n  return composeClasses(slots, getCardHeaderUtilityClass, classes);\n};\n\nconst CardHeaderRoot = experimentalStyled('div', {}, {\n  name: 'MuiCardHeader',\n  slot: 'Root',\n  overridesResolver\n})({\n  /* Styles applied to the root element. */\n  display: 'flex',\n  alignItems: 'center',\n  padding: 16\n});\nconst CardHeaderAvatar = experimentalStyled('div', {}, {\n  name: 'MuiCardHeader',\n  slot: 'Avatar'\n})({\n  /* Styles applied to the avatar element. */\n  display: 'flex',\n  flex: '0 0 auto',\n  marginRight: 16\n});\nconst CardHeaderAction = experimentalStyled('div', {}, {\n  name: 'MuiCardHeader',\n  slot: 'Action'\n})({\n  /* Styles applied to the action element. */\n  flex: '0 0 auto',\n  alignSelf: 'flex-start',\n  marginTop: -4,\n  marginRight: -8,\n  marginBottom: -4\n});\nconst CardHeaderContent = experimentalStyled('div', {}, {\n  name: 'MuiCardHeader',\n  slot: 'Content'\n})({\n  /* Styles applied to the content wrapper element. */\n  flex: '1 1 auto'\n});\nconst CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardHeader'\n  });\n\n  const {\n    action,\n    avatar,\n    className,\n    component = 'div',\n    disableTypography = false,\n    subheader: subheaderProp,\n    subheaderTypographyProps,\n    title: titleProp,\n    titleTypographyProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"action\", \"avatar\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"]);\n\n  const styleProps = _extends({}, props, {\n    component,\n    disableTypography\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  let title = titleProp;\n\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps), title);\n  }\n\n  let subheader = subheaderProp;\n\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"text.secondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps), subheader);\n  }\n\n  return /*#__PURE__*/React.createElement(CardHeaderRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref,\n    styleProps: styleProps\n  }, other), avatar && /*#__PURE__*/React.createElement(CardHeaderAvatar, {\n    className: classes.avatar,\n    styleProps: styleProps\n  }, avatar), /*#__PURE__*/React.createElement(CardHeaderContent, {\n    className: classes.content,\n    styleProps: styleProps\n  }, title, subheader), action && /*#__PURE__*/React.createElement(CardHeaderAction, {\n    className: classes.action,\n    styleProps: styleProps\n  }, action));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The content of the component.\n   */\n  title: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default CardHeader;","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Archive = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path d=\"M4 3a2 2 0 100 4h12a2 2 0 100-4H4z\" />\n    <path\n      fillRule=\"evenodd\"\n      d=\"M3 8h14v7a2 2 0 01-2 2H5a2 2 0 01-2-2V8zm5 3a1 1 0 011-1h2a1 1 0 110 2H9a1 1 0 01-1-1z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Archive'\n);\n\nexport default Archive;\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst DocumentText = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'DocumentText'\n);\n\nexport default DocumentText;\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport { emphasize } from '../styles/colorManipulator';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\nconst BreadcrumbCollapsedButton = experimentalStyled(ButtonBase)(({\n  theme\n}) => _extends({\n  display: 'flex',\n  marginLeft: theme.spacing(0.5),\n  marginRight: theme.spacing(0.5)\n}, theme.palette.mode === 'light' ? {\n  backgroundColor: theme.palette.grey[100],\n  color: theme.palette.grey[700]\n} : {\n  backgroundColor: theme.palette.grey[700],\n  color: theme.palette.grey[100]\n}, {\n  borderRadius: 2,\n  '&:hover, &:focus': _extends({}, theme.palette.mode === 'light' ? {\n    backgroundColor: theme.palette.grey[200]\n  } : {\n    backgroundColor: theme.palette.grey[600]\n  }),\n  '&:active': _extends({\n    boxShadow: theme.shadows[0]\n  }, theme.palette.mode === 'light' ? {\n    backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n  } : {\n    backgroundColor: emphasize(theme.palette.grey[600], 0.12)\n  })\n}));\nconst BreadcrumbCollapsedIcon = experimentalStyled(MoreHorizIcon)({\n  width: 24,\n  height: 16\n});\n/**\n * @ignore - internal component.\n */\n\nfunction BreadcrumbCollapsed(props) {\n  const styleProps = props;\n  return /*#__PURE__*/React.createElement(\"li\", null, /*#__PURE__*/React.createElement(BreadcrumbCollapsedButton, _extends({\n    focusRipple: true\n  }, props, {\n    styleProps: styleProps\n  }), /*#__PURE__*/React.createElement(BreadcrumbCollapsedIcon, {\n    styleProps: styleProps\n  })));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default BreadcrumbCollapsed;","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getBreadcrumbsUtilityClass(slot) {\n  return generateUtilityClass('MuiBreadcrumbs', slot);\n}\nconst breadcrumbsClasses = generateUtilityClasses('MuiBreadcrumbs', ['root', 'ol', 'li', 'separator']);\nexport default breadcrumbsClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nimport breadcrumbsClasses, { getBreadcrumbsUtilityClass } from './breadcrumbsClasses';\n\nconst overridesResolver = (props, styles) => {\n  return deepmerge({\n    [`& .${breadcrumbsClasses.ol}`]: styles.ol,\n    [`& .${breadcrumbsClasses.li}`]: styles.li,\n    [`& .${breadcrumbsClasses.separator}`]: styles.separator\n  }, styles.root || {});\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes\n  } = styleProps;\n  const slots = {\n    root: ['root'],\n    li: ['li'],\n    ol: ['ol'],\n    separator: ['separator']\n  };\n  return composeClasses(slots, getBreadcrumbsUtilityClass, classes);\n};\n\nconst BreadcrumbsRoot = experimentalStyled(Typography, {}, {\n  name: 'MuiBreadcrumbs',\n  slot: 'Root',\n  overridesResolver\n})({});\nconst BreadcrumbsOl = experimentalStyled('ol', {}, {\n  name: 'MuiBreadcrumbs',\n  slot: 'Ol'\n})({\n  display: 'flex',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n  padding: 0,\n  margin: 0,\n  listStyle: 'none'\n});\nconst BreadcrumbsSeparator = experimentalStyled('li', {}, {\n  name: 'MuiBreadcrumbs',\n  slot: 'Separator'\n})({\n  display: 'flex',\n  userSelect: 'none',\n  marginLeft: 8,\n  marginRight: 8\n});\n\nfunction insertSeparators(items, className, separator, styleProps) {\n  return items.reduce((acc, current, index) => {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/React.createElement(BreadcrumbsSeparator, {\n        \"aria-hidden\": true,\n        key: `separator-${index}`,\n        className: className,\n        styleProps: styleProps\n      }, separator));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nconst Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBreadcrumbs'\n  });\n\n  const {\n    children,\n    className,\n    component = 'nav',\n    expandText = 'Show path',\n    itemsAfterCollapse = 1,\n    itemsBeforeCollapse = 1,\n    maxItems = 8,\n    separator = '/'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"]);\n\n  const [expanded, setExpanded] = React.useState(false);\n\n  const styleProps = _extends({}, props, {\n    component,\n    expanded,\n    expandText,\n    itemsAfterCollapse,\n    itemsBeforeCollapse,\n    maxItems,\n    separator\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  const listRef = React.useRef(null);\n\n  const renderItemsBeforeAndAfter = allItems => {\n    const handleClickExpand = () => {\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n      // Moving it to the <ol> or <nav> does not cause any announcement in NVDA.\n      // By moving it to some link/button at least we have some announcement.\n\n      const focusable = listRef.current.querySelector('a[href],button,[tabindex]');\n\n      if (focusable) {\n        focusable.focus();\n      }\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['Material-UI: You have provided an invalid combination of props to the Breadcrumbs.', `itemsAfterCollapse={${itemsAfterCollapse}} + itemsBeforeCollapse={${itemsBeforeCollapse}} >= maxItems={${maxItems}}`].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [...allItems.slice(0, itemsBeforeCollapse), /*#__PURE__*/React.createElement(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      key: \"ellipsis\",\n      onClick: handleClickExpand\n    }), ...allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)];\n  };\n\n  const allItems = React.Children.toArray(children).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map((child, index) => /*#__PURE__*/React.createElement(\"li\", {\n    className: classes.li,\n    key: `child-${index}`\n  }, child));\n  return /*#__PURE__*/React.createElement(BreadcrumbsRoot, _extends({\n    ref: ref,\n    component: component,\n    color: \"textSecondary\",\n    className: clsx(classes.root, className),\n    styleProps: styleProps\n  }, other), /*#__PURE__*/React.createElement(BreadcrumbsOl, {\n    className: classes.ol,\n    ref: listRef,\n    styleProps: styleProps\n  }, insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator, styleProps)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   * @default 'Show path'\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   * @default 1\n   */\n  itemsAfterCollapse: PropTypes.number,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   * @default 1\n   */\n  itemsBeforeCollapse: PropTypes.number,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   * @default 8\n   */\n  maxItems: PropTypes.number,\n\n  /**\n   * Custom separator node.\n   * @default '/'\n   */\n  separator: PropTypes.node,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default Breadcrumbs;","import { useRef, useState, memo } from 'react';\nimport { ListItemIcon, ListItemText, Tooltip, IconButton, Menu, MenuItem } from '@material-ui/core';\nimport ArchiveIcon from '../icons/Archive';\nimport DocumentTextIcon from '../icons/DocumentText';\nimport DotsHorizontalIcon from '../icons/DotsHorizontal';\nimport DownloadIcon from '../icons/Download';\nimport DuplicateIcon from '../icons/Duplicate';\n\nconst MoreMenu = (props) => {\n  const anchorRef = useRef(null);\n  const [openMenu, setOpenMenu] = useState(false);\n\n  const handleMenuOpen = () => {\n    setOpenMenu(true);\n  };\n\n  const handleMenuClose = () => {\n    setOpenMenu(false);\n  };\n\n  return (\n    <>\n      <Tooltip title=\"More options\">\n        <IconButton\n          onClick={handleMenuOpen}\n          ref={anchorRef}\n          {...props}\n        >\n          <DotsHorizontalIcon fontSize=\"small\" />\n        </IconButton>\n      </Tooltip>\n      <Menu\n        anchorEl={anchorRef.current}\n        anchorOrigin={{\n          horizontal: 'left',\n          vertical: 'top'\n        }}\n        onClose={handleMenuClose}\n        open={openMenu}\n        PaperProps={{\n          sx: {\n            maxWidth: '100%',\n            width: 256\n          }\n        }}\n        transformOrigin={{\n          horizontal: 'left',\n          vertical: 'top'\n        }}\n      >\n        <MenuItem>\n          <ListItemIcon>\n            <DownloadIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Import\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <DocumentTextIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Export\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <DuplicateIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Copy\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <ArchiveIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Archive\" />\n        </MenuItem>\n      </Menu>\n    </>\n  );\n};\n\nexport default memo(MoreMenu);\n","import createSvgIcon from '@material-ui/core/utils/createSvgIcon';\n\nconst Check = createSvgIcon(\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    fill=\"currentColor\"\n  >\n    <path\n      fillRule=\"evenodd\"\n      d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\n      clipRule=\"evenodd\"\n    />\n  </svg>, 'Check'\n);\n\nexport default Check;\n","import { generateUtilityClass, generateUtilityClasses } from '@material-ui/unstyled';\nexport function getCardActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActions', slot);\n}\nconst cardActionsClasses = generateUtilityClasses('MuiCardActions', ['root', 'spacing']);\nexport default cardActionsClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getCardActionsUtilityClass } from './cardActionsClasses';\n\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge(_extends({}, !styleProps.disableSpacing && styles.spacing), styles.root || {});\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    disableSpacing\n  } = styleProps;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getCardActionsUtilityClass, classes);\n};\n\nconst CardActionsRoot = experimentalStyled('div', {}, {\n  name: 'MuiCardActions',\n  slot: 'Root',\n  overridesResolver\n})(({\n  styleProps\n}) => _extends({\n  /* Styles applied to the root element. */\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8\n}, !styleProps.disableSpacing && {\n  '& > :not(:first-of-type)': {\n    marginLeft: 8\n  }\n}));\nconst CardActions = /*#__PURE__*/React.forwardRef(function CardActions(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCardActions'\n  });\n\n  const {\n    disableSpacing = false,\n    className\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"disableSpacing\", \"className\"]);\n\n  const styleProps = _extends({}, props, {\n    disableSpacing\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/React.createElement(CardActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    styleProps: styleProps,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default CardActions;","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z\"\n}), 'KeyboardArrowLeft');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z\"\n}), 'KeyboardArrowRight');"],"sourceRoot":""}